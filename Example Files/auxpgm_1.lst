0001   0000              .locallabelchar "?"
0002   0000             #include "logic.ah"
0001+  0000             ;***********************************************
0002+  0000             ;* 6505 Style Logical Instruction Macros       *
0003+  0000             ;*                                             *
0004+  0000             ;***********************************************
0005+  0000             .module logic
0006+  0000             
0007+  0000             var1_		.equ	$00
0008+  0000             var2_		.equ	$00
0009+  0000             var3_		.equ	$00
0010+  0000             var4_		.equ	$00
0011+  0000             
0012+  0000             #define     FLAG_IF    	0
0013+  0000             #define     FLAG_ELSE 	1
0014+  0000             #define	FLAG_BEGIN 	2
0015+  0000             
0016+  0000             
0017+  0000             ;*******************************************************************
0018+  0000             ;* Locate: Pushes two Words                                        *
0019+  0000             ;*                                                                 *
0020+  0000             ;*            Word 1 - address of branch location                  *
0021+  0000             ;*            Word 2 - Type of Operation                           *
0022+  0000             ;*                     0 - Standard ENDIF                          *
0023+  0000             ;*                     1 - ELSE or Logical ELSE                    *
0024+  0000             ;*                     2 - Loop                                    *
0025+  0000             ;*******************************************************************
0026+  0000             #define	logic_loc(type)	     \ .push  *, type
0027+  0000             
0028+  0000             ;*******************************************************************
0029+  0000             ;* Ifxx: These are the standard 'if' statements, they will always  *
0030+  0000             ;*       be of type 0.                                             *
0031+  0000             ;*******************************************************************
0032+  0000             #define	logic_ifxx(x)	     logic_loc(FLAG_IF) \ x  * 
0033+  0000             
0034+  0000             ;*******************************************************************
0035+  0000             ;* Begin: The start marker for logical loops, must terminate with  *
0036+  0000             ;*        an 'xxend' statement.                                    *
0037+  0000             ;******************************************************************* 
0038+  0000             #define     begin(x)		     logic_loc(FLAG_BEGIN)
0039+  0000             
0040+  0000             ;*******************************************************************
0041+  0000             ;* Logic End: This is the end macro for the 'begin' statement. It  *
0042+  0000             ;*            pulls the pc location of the beginning of the loop   *
0043+  0000             ;*            and verifies that the 'type' is correct.             *
0044+  0000             ;*******************************************************************
0045+  0000             #define logic_loopend(x,y)	\ .pop var1_, var2_
0046+  0000             #defcont				\#if (var1_ & FLAG_BEGIN)
0047+  0000             #defcont					\#if ((var2_-*-2+127) <= 0)
0048+  0000             #defcont						\ y	*+5
0049+  0000             #defcont						\ jmp	var2_
0050+  0000             #defcont					\#else
0051+  0000             #defcont						\ x	var2_
0052+  0000             #defcont					\#endif
0053+  0000             #defcont				\#else
0054+  0000             #defcont					\ .error "Inappropriate End for BEGIN Loop."
0055+  0000             #defcont				\#endif
0056+  0000             
0057+  0000             ;*******************************************************************
0058+  0000             ;* Logic Find: Used for ENDIF statement. Will find the pc for the  *
0059+  0000             ;*             previous IF (or ELSE) and update the branch or jump *
0060+  0000             ;*             at that address to point to the current address.    *
0061+  0000             ;*******************************************************************
0062+  0000             #define logic_end \var1_ .set *
0063+  0000             #defcont		\ .pop var3_, var4_
0064+  0000             #defcont		\#if (var3_ & FLAG_BEGIN)==0 
0065+  0000             #defcont			\#if (var3_ & FLAG_ELSE)==0	
0066+  0000             #defcont  				\var2_ .set var1_-var4_-2
0067+  0000             #defcont				\#if var2_+127 < 0
0068+  0000             #defcont					\ .error "Branch Range < -127"
0069+  0000             #defcont				\#else
0070+  0000             #defcont					\#if var2_-128 > 0
0071+  0000             #defcont						\ .error "Branch Range > 128"
0072+  0000             #defcont					\#else
0073+  0000             #defcont    					\ .org var4_+1
0074+  0000             #defcont						\ .byte var2_
0075+  0000             #defcont					\#endif
0076+  0000             #defcont				\#endif
0077+  0000             #defcont			\#else	
0078+  0000             #defcont    			\ .org  var4_-2	
0079+  0000             #defcont				\ .word var1_
0080+  0000             #defcont			\#endif
0081+  0000             #defcont			\ .org	var1_
0082+  0000             #defcont		\#else
0083+  0000             #defcont			\.error "Wrong Endtype for IF block"
0084+  0000             #defcont		\#endif
0085+  0000             
0086+  0000             ;*******************************************************************
0087+  0000             ;* Logic Else: Can act as a standard else or a complex else        *
0088+  0000             ;*             (ie. with additional logic as defined below). The   *
0089+  0000             ;*             ELSE block will resove how to terminate the current *
0090+  0000             ;*             code and then set the owning IF statement's data    *
0091+  0000             ;*             byte.                                               *
0092+  0000             ;*******************************************************************
0093+  0000             #define	logic_else(x,y)	\var1_ .set $
0094+  0000             #defcont		\ .pop var3_, var4_
0095+  0000             #defcont		\#if (var3_ & FLAG_BEGIN)==0
0096+  0000             #defcont			\#if (var3_ & FLAG_ELSE)==0
0097+  0000             #defcont				\ .org var4_+1
0098+  0000             #defcont	      		\#if x==0
0099+  0000             #defcont					\ .byte var1_-var4_-2+3
0100+  0000             #defcont					\ .org var1_
0101+  0000             #defcont					\.push $+3, 1
0102+  0000             #defcont					\ jmp $
0103+  0000             #defcont				\#else
0104+  0000             #defcont					\ .byte var1_-var4_-2+2
0105+  0000             #defcont					\ .org var1_
0106+  0000             #defcont					\.push $, 0
0107+  0000             #defcont					\ y $		
0108+  0000             #defcont				\#endif
0109+  0000             #defcont			\#else
0110+  0000             #defcont				\.error "Duplicate ELSE Statement"
0111+  0000             #defcont			\#endif
0112+  0000             #defcont		\#else
0113+  0000             #defcont			\ .error "Misplaced Else"
0114+  0000             #defcont		\#endif
0115+  0000             
0116+  0000             
0117+  0000             ;*******************************************************************
0118+  0000             ;* Defines how to use the various logic macros defined above.      *
0119+  0000             ;*******************************************************************
0120+  0000             #define	ifeq	logic_ifxx(BNE)		
0121+  0000             #define	ifne	logic_ifxx(BEQ)
0122+  0000             #define	ifpl	logic_ifxx(BMI)
0123+  0000             #define	ifmi	logic_ifxx(BPL)
0124+  0000             #define	ifcs	logic_ifxx(BCC)
0125+  0000             #define	ifcc	logic_ifxx(BCS)
0126+  0000             #define 	ifvc	logic_ifxx(BVS)
0127+  0000             #define 	ifvs	logic_ifxx(BVC)
0128+  0000             
0129+  0000             #define	else  	logic_else(0,0)
0130+  0000             #define	else_eq	logic_else(1,BEQ)
0131+  0000             #define	else_ne	logic_else(1,BNE)
0132+  0000             #define	else_pl	logic_else(1,BPL)
0133+  0000             #define	else_mi	logic_else(1,BMI)
0134+  0000             #define	else_cc	logic_else(1,BCC)
0135+  0000             #define	else_cs	logic_else(1,BCS)
0136+  0000             
0137+  0000             #define 	endif		logic_end
0138+  0000             
0139+  0000             #define	eqend	logic_loopend(BNE,BEQ)		
0140+  0000             #define	neend	logic_loopend(BEQ,BNE)		
0141+  0000             #define	plend	logic_loopend(BMI,BPL)
0142+  0000             #define	miend	logic_loopend(BPL,BMI)
0143+  0000             #define	csend	logic_loopend(BCC,BCS)
0144+  0000             #define	ccend	logic_loopend(BCS,BCC)
0145+  0000             #define	vcend	logic_loopend(BVS,BVC)
0146+  0000             #define	vsend	logic_loop_end(BVC,BVS)
0147+  0000             
0003   0000             #include "vector.ah"
0001+  0000             	.title 	"Macro Definitions"
0002+  0000             	.sbttl 	"Special Macros"
0003+  0000             ;***********************************************************
0004+  0000             ;*   Special Macro Declarations                            *
0005+  0000             ;***********************************************************
0006+  0000             .module mvector
0007+  0000             
0008+  0000             #DEFINE	lbyte(add)	(add&$ff)
0009+  0000             #DEFINE	ubyte(add)	(add&$ff00)/$100
0010+  0000             #DEFINE	lxl(add)	.db $a2 \ .dw add  \ .org *-1
0011+  0000             #DEFINE	lxh(add)	.db $a2 \ .msfirst \ .dw add \ .lsfirst \.org *-1
0012+  0000             #DEFINE	lal(add)	.db $a9 \ .dw add   \ .org *-1
0013+  0000             #DEFINE	lah(add)	.db $a9 \ .msfirst \ .dw add \ .lsfirst \.org *-1
0014+  0000             #DEFINE	badl(add)	.db add
0015+  0000             #DEFINE	badh(add)	.msfirst \ .db add \ .lsfirst
0016+  0000             #DEFINE	adcl(add)	.db $69 \ .dw add   \ .org *-1
0017+  0000             #DEFINE     laljsr(add)	.db $A9 \ jsrl(add) \ .org *-1
0018+  0000             #DEFINE	lxhjsr(add)	.db $A2 \ .msfirst  \ jsrl(add) \ .lsfirst \.org *-1
0019+  0000             
0020+  0000             
0021+  0000             ;***********************************************************
0022+  0000             ;* Vector Macro Definitions                                *
0023+  0000             ;***********************************************************
0024+  0000             	.sbttl 	"Vector Macro Definitions"
0025+  0000             	
0026+  0000             ;STAT Bit Defines (MH Only)	
0027+  0000             v_xflip	=	$04	;XFlip Bit
0028+  0000             v_sparkle	=	$08	;Sparkle Bit
0029+  0000             	
0030+  0000             #DEFINE	vcntr							.dw $0080
0031+  0000             #DEFINE	vhalt							.dw $0020
0032+  0000             #DEFINE	jsrl(add)						.dw ((((add)&$7fff)>>1)|$a000)
0033+  0000             ;#DEFINE	stat(sparkle,xflip,page,intensity,color)			
0034+  0000             ;#DEFINE	scal(ywindow,l_scale)			
0035+  0000             #DEFINE	rtsl							.db $00,$C0
0036+  0000             #DEFINE	jmpl(add)						.dw ((((add)&$7fff)>>1)|$e000)			
0037+  0000             ;#DEFINE	vctr(x,y,z)
0038+  0000             ;#DEFINE	lvtr(x,y,z)0004   0000             #include "mh_vrom.exp"
0001+  0000             .module mvector
0002+  0000             
0003+  0000             alpha_cross      .EQU  $5564
0004+  0000             bas7             .EQU  $0061
0005+  0000             brick7           .EQU  $0061
0006+  0000             brickp           .EQU  $78ae
0007+  0000             brline           .EQU  $78b6
0008+  0000             body7            .EQU  $0062
0009+  0000             body             .EQU  $6154
0010+  0000             bodyt            .EQU  $6168
0011+  0000             becn7            .EQU  $0062
0012+  0000             boot7            .EQU  $0063
0013+  0000             bds              .EQU  $56a2
0014+  0000             beapic           .EQU  $56ea
0015+  0000             bases            .EQU  $573a
0016+  0000             bxp0s            .EQU  $577c
0017+  0000             bxp1s            .EQU  $578c
0018+  0000             booth3           .EQU  $5924
0019+  0000             booth4           .EQU  $5964
0020+  0000             booth5           .EQU  $597a
0021+  0000             cerexp0          .EQU  $7d88
0022+  0000             cerexp1          .EQU  $7da6
0023+  0000             cerexp2          .EQU  $7dda
0024+  0000             cerexp3          .EQU  $7e20
0025+  0000             cerexp4          .EQU  $7e58
0026+  0000             cerexp5          .EQU  $7e88
0027+  0000             cerexp6          .EQU  $7eb8
0028+  0000             cerexp7          .EQU  $7ed4
0029+  0000             clock7           .EQU  $0063
0030+  0000             char_a           .EQU  $5000
0031+  0000             char_space       .EQU  $5010
0032+  0000             char_b           .EQU  $5016
0033+  0000             char_c           .EQU  $5026
0034+  0000             char_d           .EQU  $5034
0035+  0000             char_e           .EQU  $5044
0036+  0000             char_f           .EQU  $5048
0037+  0000             char_g           .EQU  $5056
0038+  0000             char_h           .EQU  $506a
0039+  0000             char_i           .EQU  $5078
0040+  0000             char_j           .EQU  $5088
0041+  0000             char_k           .EQU  $5094
0042+  0000             char_l           .EQU  $50a4
0043+  0000             char_m           .EQU  $50ae
0044+  0000             char_n           .EQU  $50ba
0045+  0000             char_q           .EQU  $50c4
0046+  0000             char_o           .EQU  $50ca
0047+  0000             char_r           .EQU  $50dc
0048+  0000             char_p           .EQU  $50e2
0049+  0000             char_s           .EQU  $50f2
0050+  0000             char_t           .EQU  $5100
0051+  0000             char_u           .EQU  $510c
0052+  0000             char_v           .EQU  $511e
0053+  0000             char_w           .EQU  $5128
0054+  0000             char_x           .EQU  $5136
0055+  0000             char_y           .EQU  $5140
0056+  0000             char_z           .EQU  $514e
0057+  0000             char_1           .EQU  $515a
0058+  0000             char_2           .EQU  $5162
0059+  0000             char_8           .EQU  $5172
0060+  0000             char_3           .EQU  $5176
0061+  0000             char_9           .EQU  $5188
0062+  0000             char_4           .EQU  $5190
0063+  0000             char_6           .EQU  $519e
0064+  0000             char_5           .EQU  $51a2
0065+  0000             char_0           .EQU  $51b0
0066+  0000             char_7           .EQU  $51b8
0067+  0000             char_percent     .EQU  $51d8
0068+  0000             char_colon       .EQU  $51f4
0069+  0000             char_dash        .EQU  $520c
0070+  0000             char_comma       .EQU  $5214
0071+  0000             char_period      .EQU  $521e
0072+  0000             char_excla       .EQU  $522c
0073+  0000             char_half        .EQU  $523a
0074+  0000             cann             .EQU  $5650
0075+  0000             cerpup           .EQU  $583e
0076+  0000             cerwng           .EQU  $584a
0077+  0000             cerstf           .EQU  $5890
0078+  0000             cerbng           .EQU  $5896
0079+  0000             crman            .EQU  $5bae
0080+  0000             crreac           .EQU  $5bba
0081+  0000             crfire           .EQU  $5bc6
0082+  0000             crlsht           .EQU  $5bd2
0083+  0000             crcann           .EQU  $5bde
0084+  0000             crrob            .EQU  $5bea
0085+  0000             clpat            .EQU  $5f30
0086+  0000             clpt2            .EQU  $5f36
0087+  0000             cl73             .EQU  $5f54
0088+  0000             enm7             .EQU  $0061
0089+  0000             eyes             .EQU  $564a
0090+  0000             enemys           .EQU  $574a
0091+  0000             epod6            .EQU  $59a4
0092+  0000             epod5            .EQU  $59ae
0093+  0000             epod4            .EQU  $59b8
0094+  0000             epod3            .EQU  $59c2
0095+  0000             epod2            .EQU  $59cc
0096+  0000             epod1            .EQU  $59d6
0097+  0000             fexps7           .EQU  $0060
0098+  0000             formsg           .EQU  $54a8
0099+  0000             fbase            .EQU  $5742
0100+  0000             fexps            .EQU  $576c
0101+  0000             frcfl            .EQU  $5f64
0102+  0000             frbox            .EQU  $5f68
0103+  0000             frbx2            .EQU  $5f6c
0104+  0000             gun7             .EQU  $0062
0105+  0000             guns             .EQU  $5642
0106+  0000             gclock           .EQU  $58b8
0107+  0000             gboot            .EQU  $58bc
0108+  0000             gtite            .EQU  $58ca
0109+  0000             glock            .EQU  $58cc
0110+  0000             gkey             .EQU  $58ce
0111+  0000             gpod             .EQU  $58d0
0112+  0000             gtran            .EQU  $590e
0113+  0000             ghand            .EQU  $591c
0114+  0000             glint0           .EQU  $5b52
0115+  0000             glint1           .EQU  $5b54
0116+  0000             glint2           .EQU  $5b5a
0117+  0000             glint3           .EQU  $5b60
0118+  0000             glint4           .EQU  $5b66
0119+  0000             glint5           .EQU  $5b6c
0120+  0000             glint6           .EQU  $5b72
0121+  0000             glint7           .EQU  $5b78
0122+  0000             glint8           .EQU  $5b7e
0123+  0000             glint9           .EQU  $5b84
0124+  0000             glinta           .EQU  $5b8a
0125+  0000             glintb           .EQU  $5b90
0126+  0000             glintc           .EQU  $5b96
0127+  0000             glintd           .EQU  $5b9c
0128+  0000             glinte           .EQU  $5ba2
0129+  0000             glintf           .EQU  $5ba8
0130+  0000             hfold20          .EQU  $7838
0131+  0000             hfold21          .EQU  $7854
0132+  0000             hfold22          .EQU  $786e
0133+  0000             hfold23          .EQU  $7886
0134+  0000             hfold24          .EQU  $789e
0135+  0000             hand7            .EQU  $0063
0136+  0000             heads            .EQU  $562e
0137+  0000             hds              .EQU  $5692
0138+  0000             havoc1           .EQU  $59e2
0139+  0000             havoc2           .EQU  $5a3e
0140+  0000             havoc3           .EQU  $5b1a
0141+  0000             hline            .EQU  $5f86
0142+  0000             hystr            .EQU  $5f8e
0143+  0000             leg1             .EQU  $71d4
0144+  0000             leg2             .EQU  $71e6
0145+  0000             lrsrbx           .EQU  $78c4
0146+  0000             lshot7           .EQU  $0061
0147+  0000             live7            .EQU  $0062
0148+  0000             lvert00          .EQU  $7360
0149+  0000             lvert01          .EQU  $7366
0150+  0000             lvert02          .EQU  $7380
0151+  0000             lvert03          .EQU  $739a
0152+  0000             lvert04          .EQU  $73b6
0153+  0000             lvert05          .EQU  $73d4
0154+  0000             lvert06          .EQU  $73f2
0155+  0000             lvert07          .EQU  $7410
0156+  0000             lvert08          .EQU  $742a
0157+  0000             lvert10          .EQU  $7430
0158+  0000             lvert11          .EQU  $7436
0159+  0000             lvert12          .EQU  $7450
0160+  0000             lvert13          .EQU  $746a
0161+  0000             lvert14          .EQU  $7486
0162+  0000             lvert15          .EQU  $74a4
0163+  0000             lvert16          .EQU  $74c2
0164+  0000             lvert17          .EQU  $74e0
0165+  0000             lvert18          .EQU  $74fa
0166+  0000             lvert20          .EQU  $7500
0167+  0000             lvert21          .EQU  $7506
0168+  0000             lvert22          .EQU  $7520
0169+  0000             lvert23          .EQU  $753a
0170+  0000             lvert24          .EQU  $7556
0171+  0000             lvert25          .EQU  $7574
0172+  0000             lvert26          .EQU  $7590
0173+  0000             lvert27          .EQU  $75ae
0174+  0000             lvert28          .EQU  $75c8
0175+  0000             lvert30          .EQU  $75ce
0176+  0000             lvert31          .EQU  $75d4
0177+  0000             lvert32          .EQU  $75ee
0178+  0000             lvert33          .EQU  $7608
0179+  0000             lvert34          .EQU  $7624
0180+  0000             lvert35          .EQU  $7642
0181+  0000             lvert36          .EQU  $765e
0182+  0000             lvert37          .EQU  $767c
0183+  0000             lvert38          .EQU  $7696
0184+  0000             lvert40          .EQU  $769c
0185+  0000             lvert41          .EQU  $76a2
0186+  0000             lvert42          .EQU  $76bc
0187+  0000             lvert43          .EQU  $76d6
0188+  0000             lvert44          .EQU  $76f2
0189+  0000             lvert45          .EQU  $7710
0190+  0000             lvert46          .EQU  $772c
0191+  0000             lvert47          .EQU  $774a
0192+  0000             lvert48          .EQU  $7764
0193+  0000             lvert50          .EQU  $776a
0194+  0000             lvert51          .EQU  $7770
0195+  0000             lvert52          .EQU  $778a
0196+  0000             lvert53          .EQU  $77a4
0197+  0000             lvert54          .EQU  $77c0
0198+  0000             lvert55          .EQU  $77de
0199+  0000             lvert56          .EQU  $77fa
0200+  0000             lvert57          .EQU  $7818
0201+  0000             lvert58          .EQU  $7832
0202+  0000             lhorz00          .EQU  $78a4
0203+  0000             lhorz01          .EQU  $78aa
0204+  0000             lhorz02          .EQU  $78c2
0205+  0000             lhorz03          .EQU  $78da
0206+  0000             lhorz04          .EQU  $78f2
0207+  0000             lhorz05          .EQU  $790c
0208+  0000             lhorz06          .EQU  $7926
0209+  0000             lhorz07          .EQU  $793e
0210+  0000             lhorz08          .EQU  $7958
0211+  0000             lhorz10          .EQU  $795e
0212+  0000             lhorz11          .EQU  $7964
0213+  0000             lhorz12          .EQU  $797c
0214+  0000             lhorz13          .EQU  $7994
0215+  0000             lhorz14          .EQU  $79ac
0216+  0000             lhorz15          .EQU  $79c6
0217+  0000             lhorz16          .EQU  $79de
0218+  0000             lhorz17          .EQU  $79f6
0219+  0000             lhorz18          .EQU  $7a10
0220+  0000             lhorz20          .EQU  $7a16
0221+  0000             lhorz21          .EQU  $7a1c
0222+  0000             lhorz22          .EQU  $7a36
0223+  0000             lhorz23          .EQU  $7a4e
0224+  0000             lhorz24          .EQU  $7a66
0225+  0000             lhorz25          .EQU  $7a80
0226+  0000             lhorz26          .EQU  $7a98
0227+  0000             lhorz27          .EQU  $7ab0
0228+  0000             lhorz28          .EQU  $7aca
0229+  0000             lhorz30          .EQU  $7ad0
0230+  0000             lhorz31          .EQU  $7ad6
0231+  0000             lhorz32          .EQU  $7af0
0232+  0000             lhorz33          .EQU  $7b08
0233+  0000             lhorz34          .EQU  $7b20
0234+  0000             lhorz35          .EQU  $7b3a
0235+  0000             lhorz36          .EQU  $7b52
0236+  0000             lhorz37          .EQU  $7b6a
0237+  0000             lhorz38          .EQU  $7b84
0238+  0000             lhorz40          .EQU  $7b8a
0239+  0000             lhorz41          .EQU  $7b90
0240+  0000             lhorz42          .EQU  $7baa
0241+  0000             lhorz43          .EQU  $7bc2
0242+  0000             lhorz44          .EQU  $7bda
0243+  0000             lhorz45          .EQU  $7bf4
0244+  0000             lhorz46          .EQU  $7c0e
0245+  0000             lhorz47          .EQU  $7c26
0246+  0000             lhorz48          .EQU  $7c3e
0247+  0000             lhorz50          .EQU  $7c54
0248+  0000             ltg7             .EQU  $0063
0249+  0000             lock7            .EQU  $0063
0250+  0000             lifech           .EQU  $5404
0251+  0000             lvts             .EQU  $56b2
0252+  0000             lightning        .EQU  $581a
0253+  0000             longline         .EQU  $5bf6
0254+  0000             mpic7            .EQU  $0061
0255+  0000             maz7             .EQU  $0062
0256+  0000             mapdt7           .EQU  $0062
0257+  0000             mapdot           .EQU  $60d2
0258+  0000             mzls7            .EQU  $0062
0259+  0000             mazet            .EQU  $55b6
0260+  0000             mapet            .EQU  $55c4
0261+  0000             mansrc           .EQU  $55d2
0262+  0000             movet            .EQU  $56fa
0263+  0000             mazarw           .EQU  $57fe
0264+  0000             newshot          .EQU  $5880
0265+  0000             onearw           .EQU  $5508
0266+  0000             onesigt          .EQU  $5544
0267+  0000             onesigr          .EQU  $5554
0268+  0000             onesigl          .EQU  $555c
0269+  0000             onesign          .EQU  $587a
0270+  0000             plane7           .EQU  $0060
0271+  0000             pic28            .EQU  $71f8
0272+  0000             pic34            .EQU  $72e0
0273+  0000             padlep           .EQU  $78ba
0274+  0000             pod7             .EQU  $0063
0275+  0000             planes           .EQU  $56ba
0276+  0000             patch            .EQU  $5fca
0277+  0000             qmark            .EQU  $5442
0278+  0000             rods7            .EQU  $0062
0279+  0000             rods             .EQU  $5626
0280+  0000             sexps7           .EQU  $0060
0281+  0000             st7              .EQU  $0061
0282+  0000             shld7            .EQU  $0061
0283+  0000             shield           .EQU  $7562
0284+  0000             shtex7           .EQU  $0061
0285+  0000             smtb7            .EQU  $0061
0286+  0000             shpsh7           .EQU  $0062
0287+  0000             shipsh           .EQU  $6ad0
0288+  0000             spinner0         .EQU  $7c70
0289+  0000             spinner1         .EQU  $7cb6
0290+  0000             spinner2         .EQU  $7cfc
0291+  0000             spinner3         .EQU  $7d42
0292+  0000             shtexp           .EQU  $575c
0293+  0000             sexps            .EQU  $579c
0294+  0000             sxp0s            .EQU  $57a6
0295+  0000             sxp1s            .EQU  $57b6
0296+  0000             sxp2s            .EQU  $57c6
0297+  0000             sxp3s            .EQU  $57d6
0298+  0000             sxps             .EQU  $57e6
0299+  0000             smtb             .EQU  $57ee
0300+  0000             scan0            .EQU  $5e22
0301+  0000             scan1            .EQU  $5e60
0302+  0000             scan2            .EQU  $5e9e
0303+  0000             scan3            .EQU  $5edc
0304+  0000             spot7            .EQU  $0060
0305+  0000             spot             .EQU  $5f1a
0306+  0000             tube7            .EQU  $0061
0307+  0000             tact7            .EQU  $0061
0308+  0000             tactd            .EQU  $76b2
0309+  0000             tacct7           .EQU  $0063
0310+  0000             tite7            .EQU  $0063
0311+  0000             tran7            .EQU  $0063
0312+  0000             tails            .EQU  $563e
0313+  0000             tcn              .EQU  $57f6
0314+  0000             tact0            .EQU  $5bfc
0315+  0000             tact1            .EQU  $5cc0
0316+  0000             tact2            .EQU  $5d48
0317+  0000             tact3            .EQU  $5db6
0318+  0000             vgmsga           .EQU  $546a
0319+  0000             vline            .EQU  $5f7e
0320+  0000             webln00          .EQU  $7000
0321+  0000             webln01          .EQU  $7042
0322+  0000             webln02          .EQU  $7084
0323+  0000             webln03          .EQU  $70c6
0324+  0000             webln04          .EQU  $7108
0325+  0000             webln05          .EQU  $714a
0326+  0000             webln06          .EQU  $718c
0327+  0000             webln07          .EQU  $71ce
0328+  0000             webln08          .EQU  $7210
0329+  0000             webln09          .EQU  $7252
0330+  0000             webln0a          .EQU  $7294
0331+  0000             webln0b          .EQU  $72d6
0332+  0000             webln0c          .EQU  $7318
0333+  0000             waste            .EQU  $5fc4
0005   0000             #include "mh_alpha.exp"
0001+  0000             .module alpha
0002+  0000             
0003+  0000             _cmode           .EQU  $00b6
0004+  0000             accbuf           .EQU  $4c00
0005+  0000             atime1           .EQU  $0114
0006+  0000             atime2           .EQU  $0118
0007+  0000             ardir            .EQU  $0661
0008+  0000             blank            .EQU  $0000
0009+  0000             black            .EQU  $000f
0010+  0000             bonusa           .EQU  $02f1
0011+  0000             brick            .EQU  $0307
0012+  0000             bronce           .EQU  $030a
0013+  0000             bpont2           .EQU  $96bc
0014+  0000             blowship         .EQU  $d099
0015+  0000             colram           .EQU  $1400
0016+  0000             crsbuf           .EQU  $430e
0017+  0000             cxflip           .EQU  $00d4
0018+  0000             cabsel           .EQU  $00f2
0019+  0000             colcnt           .EQU  $031c
0020+  0000             cannfr           .EQU  $06e7
0021+  0000             cannss           .EQU  $06eb
0022+  0000             cannin           .EQU  $06ef
0023+  0000             canndf           .EQU  $06f3
0024+  0000             canngr           .EQU  $06f7
0025+  0000             cannp1           .EQU  $06fb
0026+  0000             cannp2           .EQU  $06ff
0027+  0000             cktran           .EQU  $0709
0028+  0000             ctran            .EQU  $075b
0029+  0000             colblack         .EQU  $0000
0030+  0000             colblue          .EQU  $0001
0031+  0000             colgreen         .EQU  $0002
0032+  0000             colcyan          .EQU  $0003
0033+  0000             colred           .EQU  $0004
0034+  0000             colpurple        .EQU  $0005
0035+  0000             colyellow        .EQU  $0006
0036+  0000             colwhite         .EQU  $0007
0037+  0000             colwhiter        .EQU  $0008
0038+  0000             colpink          .EQU  $0009
0039+  0000             colorange        .EQU  $000a
0040+  0000             colredr          .EQU  $000b
0041+  0000             colred2          .EQU  $000c
0042+  0000             colcyanr         .EQU  $000d
0043+  0000             colbluer         .EQU  $000e
0044+  0000             colgreenr        .EQU  $000f
0045+  0000             cos              .EQU  $9444
0046+  0000             cannon           .EQU  $b112
0047+  0000             dif4mz           .EQU  $030d
0048+  0000             difcty           .EQU  $030f
0049+  0000             dist             .EQU  $0312
0050+  0000             daccx            .EQU  $076f
0051+  0000             daccy            .EQU  $0770
0052+  0000             dblneg           .EQU  $9056
0053+  0000             dosound          .EQU  $90b5
0054+  0000             dostop           .EQU  $91bf
0055+  0000             dodelay          .EQU  $91c4
0056+  0000             digits           .EQU  $97b1
0057+  0000             decimal          .EQU  $97dc
0058+  0000             docase           .EQU  $ab37
0059+  0000             extlie           .EQU  $010a
0060+  0000             epodfr           .EQU  $0703
0061+  0000             epodgr           .EQU  $0704
0062+  0000             fircol           .EQU  $0008
0063+  0000             frame            .EQU  $0095
0064+  0000             fldcnt           .EQU  $00ef
0065+  0000             flsflg           .EQU  $0107
0066+  0000             foreign          .EQU  $08aa
0067+  0000             fullog           .EQU  $94fc
0068+  0000             fullog2          .EQU  $953c
0069+  0000             green            .EQU  $000d
0070+  0000             game1            .EQU  $010c
0071+  0000             game2            .EQU  $0110
0072+  0000             ground           .EQU  $031d
0073+  0000             gamest           .EQU  $0800
0074+  0000             getrand          .EQU  $90cf
0075+  0000             getptr           .EQU  $a842
0076+  0000             gridx            .EQU  $d8f1
0077+  0000             gridy            .EQU  $d9e1
0078+  0000             hunits           .EQU  $0007
0079+  0000             hscore           .EQU  $01a2
0080+  0000             holmz            .EQU  $030e
0081+  0000             headcol          .EQU  $0383
0082+  0000             hxtend           .EQU  $076b
0083+  0000             hytend           .EQU  $076c
0084+  0000             hitpts           .EQU  $08a4
0085+  0000             hitwebs          .EQU  $c60f
0086+  0000             initl            .EQU  $0184
0087+  0000             incdif           .EQU  $02f6
0088+  0000             init3            .EQU  $0319
0089+  0000             initshp          .EQU  $8ee6
0090+  0000             initcol          .EQU  $8f03
0091+  0000             inblow           .EQU  $ca77
0092+  0000             jmptim           .EQU  $00ee
0093+  0000             jumprv           .EQU  $00f1
0094+  0000             jblast           .EQU  $031a
0095+  0000             jbstat           .EQU  $0808
0096+  0000             litra2           .EQU  $0005
0097+  0000             litra3           .EQU  $0007
0098+  0000             ltcol            .EQU  $002b
0099+  0000             lincur           .EQU  $00d6
0100+  0000             lauen            .EQU  $0304
0101+  0000             linscal          .EQU  $0314
0102+  0000             linmult          .EQU  $0315
0103+  0000             limbo            .EQU  $0683
0104+  0000             linen            .EQU  $0897
0105+  0000             lsbs             .EQU  $a6c8
0106+  0000             lsbsy            .EQU  $a715
0107+  0000             mapbuf           .EQU  $4400
0108+  0000             mazcol           .EQU  $0002
0109+  0000             mancol           .EQU  $0003
0110+  0000             maxdif           .EQU  $0003
0111+  0000             mazpt            .EQU  $000f
0112+  0000             mzgame           .EQU  $0098
0113+  0000             mestim           .EQU  $00f0
0114+  0000             maznum           .EQU  $030b
0115+  0000             mzgms            .EQU  $0310
0116+  0000             mzgrnd           .EQU  $031d
0117+  0000             manstat          .EQU  $03b5
0118+  0000             mazexl           .EQU  $04c9
0119+  0000             mazexh           .EQU  $052e
0120+  0000             mazeyl           .EQU  $05ae
0121+  0000             mazeyh           .EQU  $05e1
0122+  0000             maccx            .EQU  $0771
0123+  0000             maccy            .EQU  $0772
0124+  0000             map0             .EQU  $087c
0125+  0000             map1             .EQU  $087d
0126+  0000             map2             .EQU  $087e
0127+  0000             map3             .EQU  $087f
0128+  0000             map4             .EQU  $0880
0129+  0000             map5             .EQU  $0881
0130+  0000             map6             .EQU  $0882
0131+  0000             mazer            .EQU  $0900
0132+  0000             multiply         .EQU  $949f
0133+  0000             mplayr           .EQU  $0004
0134+  0000             mhis             .EQU  $0074
0135+  0000             mgtsc            .EQU  $0076
0136+  0000             menin            .EQU  $0078
0137+  0000             mgetout          .EQU  $007a
0138+  0000             mact4            .EQU  $0080
0139+  0000             mact4a           .EQU  $0082
0140+  0000             mesg             .EQU  $ebe1
0141+  0000             msgnop           .EQU  $ec0c
0142+  0000             nmfire           .EQU  $0010
0143+  0000             nmsparks         .EQU  $0006
0144+  0000             nmlsht           .EQU  $0008
0145+  0000             nmcann           .EQU  $0004
0146+  0000             nmrob            .EQU  $000a
0147+  0000             nmshot           .EQU  $000a
0148+  0000             nmobj            .EQU  $0032
0149+  0000             nmtite           .EQU  $0005
0150+  0000             nmtran           .EQU  $0008
0151+  0000             ntrans           .EQU  $0008
0152+  0000             nmlock           .EQU  $0004
0153+  0000             nmkeys           .EQU  $0004
0154+  0000             nmstuf           .EQU  $0004
0155+  0000             nmdisc           .EQU  $0010
0156+  0000             nmligh           .EQU  $0007
0157+  0000             nmfrfl           .EQU  $0007
0158+  0000             nmtrpp           .EQU  $0008
0159+  0000             nmonew           .EQU  $0004
0160+  0000             nmarow           .EQU  $000a
0161+  0000             nmsshots         .EQU  $0008
0162+  0000             nodraw           .EQU  $0707
0163+  0000             naccx            .EQU  $076d
0164+  0000             naccy            .EQU  $076e
0165+  0000             nxtptr           .EQU  $0876
0166+  0000             nxtdly           .EQU  $0877
0167+  0000             nxtexp           .EQU  $08a7
0168+  0000             nxtdisc          .EQU  $08be
0169+  0000             nextmz           .EQU  $8cba
0170+  0000             neg              .EQU  $9050
0171+  0000             noneleft         .EQU  $c289
0172+  0000             out1s            .EQU  $00a5
0173+  0000             olmznm           .EQU  $030c
0174+  0000             objst            .EQU  $03b5
0175+  0000             obsst            .EQU  $03e7
0176+  0000             objxl            .EQU  $04c9
0177+  0000             obssxl           .EQU  $04fb
0178+  0000             oldxl            .EQU  $04fc
0179+  0000             objxh            .EQU  $052e
0180+  0000             obssxh           .EQU  $0560
0181+  0000             objyl            .EQU  $05ae
0182+  0000             obssyl           .EQU  $05e0
0183+  0000             objyh            .EQU  $05e1
0184+  0000             obssyh           .EQU  $0613
0185+  0000             onewst           .EQU  $067f
0186+  0000             objfrm           .EQU  $0774
0187+  0000             openflg          .EQU  $0804
0188+  0000             onscreen         .EQU  $d74c
0189+  0000             plysel           .EQU  $1600
0190+  0000             pl2c             .EQU  $000a
0191+  0000             player           .EQU  $00a2
0192+  0000             perm1            .EQU  $00c9
0193+  0000             perm2            .EQU  $00cb
0194+  0000             perm3            .EQU  $00cd
0195+  0000             perm4            .EQU  $00cf
0196+  0000             perm5            .EQU  $00d1
0197+  0000             pl1last          .EQU  $00e3
0198+  0000             pl2last          .EQU  $00e6
0199+  0000             prepare          .EQU  $0316
0200+  0000             piccur           .EQU  $0806
0201+  0000             posvc2           .EQU  $d74c
0202+  0000             qrtlog           .EQU  $957c
0203+  0000             rampg            .EQU  $1780
0204+  0000             retbuf           .EQU  $4e60
0205+  0000             robcol           .EQU  $000e
0206+  0000             rtcol            .EQU  $005d
0207+  0000             robdir           .EQU  $066b
0208+  0000             robvel           .EQU  $0675
0209+  0000             reacst           .EQU  $0708
0210+  0000             raccy            .EQU  $0773
0211+  0000             reintn           .EQU  $0889
0212+  0000             retime           .EQU  $088a
0213+  0000             rodstat          .EQU  $088c
0214+  0000             rearview         .EQU  $0967
0215+  0000             rgdr             .EQU  $9dc6
0216+  0000             scobuf           .EQU  $4e00
0217+  0000             scobuf2          .EQU  $4e30
0218+  0000             sparkb           .EQU  $4f00
0219+  0000             sparkle          .EQU  $0008
0220+  0000             shtcol           .EQU  $000b
0221+  0000             shtspd           .EQU  $ffd8
0222+  0000             scalef           .EQU  $0093
0223+  0000             sndcue           .EQU  $00c0
0224+  0000             shotcur          .EQU  $00d5
0225+  0000             scbdis           .EQU  $00d7
0226+  0000             spdt             .EQU  $011c
0227+  0000             sobjst           .EQU  $0284
0228+  0000             stasav           .EQU  $06b5
0229+  0000             sldnfr           .EQU  $0705
0230+  0000             stbflg           .EQU  $0801
0231+  0000             shipst           .EQU  $0819
0232+  0000             shipxl           .EQU  $081a
0233+  0000             shipxh           .EQU  $081b
0234+  0000             statxl           .EQU  $0827
0235+  0000             statyl           .EQU  $0829
0236+  0000             statyh           .EQU  $082a
0237+  0000             statst           .EQU  $082b
0238+  0000             sparkangle       .EQU  $0849
0239+  0000             slives           .EQU  $0891
0240+  0000             scrflg           .EQU  $0892
0241+  0000             scrbuf           .EQU  $0899
0242+  0000             score            .EQU  $089c
0243+  0000             score2           .EQU  $08a0
0244+  0000             strtst           .EQU  $08b5
0245+  0000             strtln           .EQU  $08b6
0246+  0000             strtyl           .EQU  $08b7
0247+  0000             strtyh           .EQU  $08b8
0248+  0000             spcspd           .EQU  $0966
0249+  0000             shotst           .EQU  $029d
0250+  0000             shotxl           .EQU  $0219
0251+  0000             shotxh           .EQU  $023a
0252+  0000             shotyl           .EQU  $025b
0253+  0000             shotyh           .EQU  $027c
0254+  0000             stcolr           .EQU  $9412
0255+  0000             sin              .EQU  $9447
0256+  0000             stloc            .EQU  $a914
0257+  0000             shipdis2         .EQU  $d016
0258+  0000             trnbuf           .EQU  $4d00
0259+  0000             timbuf           .EQU  $4e90
0260+  0000             temp1            .EQU  $0011
0261+  0000             temp2            .EQU  $0013
0262+  0000             temp3            .EQU  $0015
0263+  0000             temp4            .EQU  $0017
0264+  0000             temp5            .EQU  $0019
0265+  0000             temp6            .EQU  $001b
0266+  0000             temp7            .EQU  $001d
0267+  0000             temp8            .EQU  $001f
0268+  0000             temp9            .EQU  $0021
0269+  0000             tempa            .EQU  $0023
0270+  0000             tactde           .EQU  $02f2
0271+  0000             trinds           .EQU  $02f3
0272+  0000             tspark           .EQU  $0706
0273+  0000             ttran            .EQU  $0753
0274+  0000             tranhi           .EQU  $0763
0275+  0000             tcount           .EQU  $0817
0276+  0000             tstat            .EQU  $0818
0277+  0000             target           .EQU  $0873
0278+  0000             tact             .EQU  $0874
0279+  0000             thisarw          .EQU  $08b9
0280+  0000             topcse           .EQU  $aee7
0281+  0000             updflg           .EQU  $0100
0282+  0000             updint           .EQU  $0101
0283+  0000             updwho           .EQU  $0102
0284+  0000             unitp            .EQU  $a842
0285+  0000             vgreset          .EQU  $16c0
0286+  0000             vecram           .EQU  $4000
0287+  0000             vunits           .EQU  $0004
0288+  0000             vgbrit           .EQU  $0000
0289+  0000             vglist           .EQU  $0001
0290+  0000             velxh            .EQU  $0433
0291+  0000             velyh            .EQU  $0497
0292+  0000             vgrtsl           .EQU  $9908
0293+  0000             vgjmpl           .EQU  $9935
0294+  0000             vgjsrl           .EQU  $9946
0295+  0000             vgstat           .EQU  $994f
0296+  0000             vgcntr           .EQU  $9959
0297+  0000             vgadd2           .EQU  $995d
0298+  0000             vgadd            .EQU  $9965
0299+  0000             vgsca1           .EQU  $9970
0300+  0000             vgscal           .EQU  $9972
0301+  0000             vgvtr5           .EQU  $9979
0302+  0000             vgvtr            .EQU  $997b
0303+  0000             vgvtr2           .EQU  $9998
0304+  0000             vgvctr           .EQU  $999a
0305+  0000             watchdog         .EQU  $1680
0306+  0000             webscur          .EQU  $00d3
0307+  0000             wrpdl            .EQU  $00e0
0308+  0000             wrhflg           .EQU  $00e2
0309+  0000             warps            .EQU  $0108
0310+  0000             webmult          .EQU  $0311
0311+  0000             websnum          .EQU  $0317
0312+  0000             wrplvl           .EQU  $031b
0313+  0000             webssta          .EQU  $0284
0314+  0000             webss2           .EQU  $02a5
0315+  0000             websxl           .EQU  $0200
0316+  0000             websxh           .EQU  $0221
0317+  0000             websyl           .EQU  $0242
0318+  0000             websyh           .EQU  $0263
0319+  0000             websseg          .EQU  $02be
0320+  0000             websper          .EQU  $02d7
0321+  0000             xflip            .EQU  $0004
0322+  0000             xoffset          .EQU  $0004
0323+  0000             xmot             .EQU  $000b
0324+  0000             xcomp            .EQU  $0027
0325+  0000             xtran            .EQU  $0743
0326+  0000             ytop             .EQU  $0001
0327+  0000             ymot             .EQU  $000d
0328+  0000             ytran            .EQU  $074b
0329+  0000             zreactor         .EQU  $0001
0330+  0000             zfire            .EQU  $0002
0331+  0000             zlsht            .EQU  $0012
0332+  0000             zcann            .EQU  $001a
0333+  0000             zrobot           .EQU  $001e
0334+  0000             zshot            .EQU  $0028
0335+  0000             zspecial         .EQU  $0032
0336+  0000             ztop             .EQU  $0033
0337+  0000             ztite            .EQU  $0033
0338+  0000             ztran            .EQU  $0038
0339+  0000             zlock            .EQU  $0040
0340+  0000             zkeys            .EQU  $0044
0341+  0000             zstuf            .EQU  $0048
0342+  0000             zdisc            .EQU  $004c
0343+  0000             zligh            .EQU  $005c
0344+  0000             zfrfl            .EQU  $0063
0345+  0000             ztrpp            .EQU  $006a
0346+  0000             zonew            .EQU  $0072
0347+  0000             zarow            .EQU  $0076
0348+  0000             zindex           .EQU  $0883
0006   0000              .module aux1
0007   0000             ;********************************************
0008   0000             ;* Major Havoc                              *
0009   0000             ;* Copyright 1983 Atari                     *
0010   0000             ;* Transcribed by Jess M. Askey 2000        *
0011   0000             ;********************************************
0012   0000             	.title "TWMAZE - Maze Routines"
0013   0000             	.sbttl "Globals"
0014   0000             	
0015   2000             	.org $2000
0016   2000             	
0017   2000             ;nmrob		=	10d
0018   2000             ;nmfire	=	16d
0019   2000             ;nmlsht	=	8
0020   2000             ;nmcann	=	4
0021   2000             ;nmshot	=	nmrob
0022   2000             ;nmdisc	=	16d
0023   2000             ;nmligh	=	7
0024   2000             ;nmfrfl	=	7
0025   2000             ;nmtrpp	=	8
0026   2000             ;nmonew	=	4
0027   2000             ;nmarow	=	10d
0028   2000             ;nmtite	=	5
0029   2000             ;nmtran	=	8
0030   2000             ;nmlock	=	4
0031   2000             ;nmkeys	=	4
0032   2000             ;nmstuf	=	4
0033   2000             numaze	=	16d		;Number of Mazes
0034   2000             
0035   2000             ; Mazes 17-20 can initialize robots, fireballs, laser cannons, oxygen discs, lightning,
0036   2000             ; trip pads, one way walls, arrows, stalactites, transporters, locks and keys.
0037   2000             ; Cannot initialize differently boots, clock, pod, reactor time.
0038   2000             
0039   2000 EB          cksum8	.byte $EB
0040   2001             
0041   2001             ;**************************************************
0042   2001             	.sbttl "Draw Maze"
0043   2001             ;**************************************************
0044   2001             ;* This routine will draw the maze on the screen  *
0045   2001             ;* based on the values given in maze X and maze Y *
0046   2001             ;**************************************************
0047   2001 20 09 21    drawm		jsr	opcl				;Open close doors
0048   2004 A9 00       		lda	#00
0049   2006 8D 97 08    		sta	linen				;Start with line 0
0050   2009 A9 30       		lda	#$30
0051   200B A2 72       		ldx	#$72				;QQQSCALQQQ
0052   200D 20 5D 99    		jsr	vgadd2
0053   2010 A9 E2       		lda	#mazcol+$e0
0054   2012 2C B6 03    		bit	objst+zreactor
0055   2015             		ifmi					;Blowing up?
0055   2015             
0055   2015 10 FE       
0056   2017 AC 8A 08    			ldy	retime			;Not yet
0057   201A C0 10       			cpy	#$10				;Only during last 10 counts
0058   201C             			ifcc					;yeah, do this
0058   201C             
0058   201C B0 FE       
0059   201E A5 95       				lda	frame				;Flash color
0060   2020 4A          				lsr	A
0061   2021 09 A0       				ora	#$A0
0062   2023             			endif
0062   2023             
0062   2023             
0062   2023             
0062   2023             
0062   2023             
0062   2023~            			endif
0062   2023~            			endif
0062   2023             
0062   2023~            			endif
0062   2023~            			endif
0062   2023             
0062   201D             
0062   201D 05          
0062   201E             
0062   201E             
0062   201E~            			endif
0062   201E~            			endif
0062   201E~            			endif
0062   201E             
0062   2023             
0062   2023~            			endif
0062   2023~            			endif
0062   2023             
0063   2023             		endif
0063   2023             
0063   2023             
0063   2023             
0063   2023             
0063   2023             
0063   2023~            		endif
0063   2023~            		endif
0063   2023             
0063   2023~            		endif
0063   2023~            		endif
0063   2023             
0063   2016             
0063   2016 0C          
0063   2017             
0063   2017             
0063   2017~            		endif
0063   2017~            		endif
0063   2017~            		endif
0063   2017             
0063   2023             
0063   2023~            		endif
0063   2023~            		endif
0063   2023             
0064   2023 A2 62       		ldx	#maz7				;Stat page select
0065   2025 AC 06 07    		ldy	tspark
0066   2028             		ifne
0066   2028             
0066   2028 F0 FE       
0067   202A A2 6A       			ldx	#maz7+8			;Sparkle it
0068   202C             		endif
0068   202C             
0068   202C             
0068   202C             
0068   202C             
0068   202C             
0068   202C~            		endif
0068   202C~            		endif
0068   202C             
0068   202C~            		endif
0068   202C~            		endif
0068   202C             
0068   2029             
0068   2029 02          
0068   202A             
0068   202A             
0068   202A~            		endif
0068   202A~            		endif
0068   202A~            		endif
0068   202A             
0068   202C             
0068   202C~            		endif
0068   202C~            		endif
0068   202C             
0069   202C 2C 07 07    		bit	nodraw			;Skip draw?
0070   202F             		ifmi
0070   202F             
0070   202F 10 FE       
0071   2031 A9 00       			lda	#00				;Draw, but do it black
0072   2033             		endif
0072   2033             
0072   2033             
0072   2033             
0072   2033             
0072   2033             
0072   2033~            		endif
0072   2033~            		endif
0072   2033             
0072   2033~            		endif
0072   2033~            		endif
0072   2033             
0072   2030             
0072   2030 02          
0072   2031             
0072   2031             
0072   2031~            		endif
0072   2031~            		endif
0072   2031~            		endif
0072   2031             
0072   2033             
0072   2033~            		endif
0072   2033~            		endif
0072   2033             
0073   2033 20 5D 99    		jsr	vgadd2
0074   2036 20 42 A8    		jsr	getptr			;Get input pointer
0075   2039 AD 2E 05    		lda	mazexh			;Do we need to change position?
0076   203C             		ifmi					;yes
0076   203C             
0076   203C 10 FE       
0077   203E 20 50 90    			jsr	neg
0078   2041             		else
0078   2041             
0078   2041             
0078   2041             
0078   2041             
0078   203D             
0078   203D             
0078   203D 06          
0078   2041             
0078   2041             
0078   2041 4C 41 20    
0078   2044~            		else
0078   2044~            		else
0078   2044~            		else
0078   2044~            		else
0078   2044~            		else
0078   2044             
0078   2044~            		else
0078   2044~            		else
0078   2044             
0078   2044~            		else
0078   2044~            		else
0078   2044             
0079   2044 A9 00       			lda	#00			;else use 0
0080   2046             		endif
0080   2046             
0080   2046             
0080   2046             
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046~            		endif
0080   2046             
0080   2042             
0080   2042 46 20       
0080   2044             
0080   2046             
0080   2046~            		endif
0080   2046~            		endif
0080   2046             
0081   2046 38          		sec	
0082   2047 E9 04       		sbc	#xoffset
0083   2049 85 28       		sta	xcomp+1
0084   204B AD C9 04    		lda	mazexl
0085   204E             		ifeq					;0 is a problem
0085   204E             
0085   204E D0 FE       
0086   2050 EE C9 04    			inc	mazexl
0087   2053 A9 01       			lda	#01
0088   2055             		endif
0088   2055             
0088   2055             
0088   2055             
0088   2055             
0088   2055             
0088   2055~            		endif
0088   2055~            		endif
0088   2055             
0088   2055~            		endif
0088   2055~            		endif
0088   2055             
0088   204F             
0088   204F 05          
0088   2050             
0088   2050             
0088   2050~            		endif
0088   2050~            		endif
0088   2050~            		endif
0088   2050             
0088   2055             
0088   2055~            		endif
0088   2055~            		endif
0088   2055             
0089   2055 20 50 90    		jsr	neg
0090   2058 85 27       		sta	xcomp
0091   205A A9 01       		lda	#ytop
0092   205C 2C E1 05    		bit	mazeyh			;Need to move down?
0093   205F             		ifpl					;yep
0093   205F             
0093   205F 30 FE       
0094   2061 38          			sec	
0095   2062 ED E1 05    			sbc	mazeyh
0096   2065             		endif
0096   2065             
0096   2065             
0096   2065             
0096   2065             
0096   2065             
0096   2065~            		endif
0096   2065~            		endif
0096   2065             
0096   2065~            		endif
0096   2065~            		endif
0096   2065             
0096   2060             
0096   2060 04          
0096   2061             
0096   2061             
0096   2061~            		endif
0096   2061~            		endif
0096   2061~            		endif
0096   2061             
0096   2065             
0096   2065~            		endif
0096   2065~            		endif
0096   2065             
0097   2065 85 2A       		sta	xcomp+3
0098   2067 18          		clc	
0099   2068 69 03       		adc	#vunits-1			;Number of units to draw
0100   206A 85 17       		sta	temp4				;Units to draw
0101   206C AD AE 05    		lda	mazeyl
0102   206F             		ifeq
0102   206F             
0102   206F D0 FE       
0103   2071 EE AE 05    			inc	mazeyl
0104   2074 A9 01       			lda	#01
0105   2076             		endif
0105   2076             
0105   2076             
0105   2076             
0105   2076             
0105   2076             
0105   2076~            		endif
0105   2076~            		endif
0105   2076             
0105   2076~            		endif
0105   2076~            		endif
0105   2076             
0105   2070             
0105   2070 05          
0105   2071             
0105   2071             
0105   2071~            		endif
0105   2071~            		endif
0105   2071~            		endif
0105   2071             
0105   2076             
0105   2076~            		endif
0105   2076~            		endif
0105   2076             
0106   2076 20 50 90    		jsr	neg
0107   2079 85 29       		sta	xcomp+2
0108   207B 18          		clc	
0109   207C 65 0D       		adc	ymot				;Add in scroll amount
0110   207E 85 29       		sta	xcomp+2
0111   2080 A9 00       		lda	#00
0112   2082 69 00       		adc	#00				;Save the carry
0113   2084 85 20       		sta	temp8+1
0114   2086 A9 00       		lda	#00
0115   2088 85 00       		sta	vgbrit
0116   208A A9 06       		lda	#06
0117   208C 85 15       		sta	temp3				;Initial Guess
0118   208E 2C E1 05    		bit	mazeyh
0119   2091             		ifmi
0119   2091             
0119   2091 10 FE       
0120   2093 AD E1 05    			lda	mazeyh
0121   2096 38          			sec	
0122   2097 E5 0E       			sbc	ymot+1
0123   2099 E5 20       			sbc	temp8+1			;Prop carry from above
0124   209B 24 0E       			bit	ymot+1			;The famous fudge factor
0125   209D             			ifmi
0125   209D             
0125   209D 10 FE       
0126   209F 18          				clc
0127   20A0 69 01       				adc	#01
0128   20A2             			endif
0128   20A2             
0128   20A2             
0128   20A2             
0128   20A2             
0128   20A2             
0128   20A2~            			endif
0128   20A2~            			endif
0128   20A2             
0128   20A2~            			endif
0128   20A2~            			endif
0128   20A2             
0128   209E             
0128   209E 03          
0128   209F             
0128   209F             
0128   209F~            			endif
0128   209F~            			endif
0128   209F~            			endif
0128   209F             
0128   20A2             
0128   20A2~            			endif
0128   20A2~            			endif
0128   20A2             
0129   20A2 20 50 90    			jsr	neg
0130   20A5 AA          			tax					;Number of lines to skip
0131   20A6             			begin
0131   20A6             
0132   20A6 20 E6 21    				jsr	skunit			;Skip H line, point to start of next
0133   20A9             				ifmi
0133   20A9             
0133   20A9 10 FE       
0134   20AB 60          					rts
0135   20AC             				endif
0135   20AC             
0135   20AC             
0135   20AC             
0135   20AC             
0135   20AC             
0135   20AC~            				endif
0135   20AC~            				endif
0135   20AC             
0135   20AC~            				endif
0135   20AC~            				endif
0135   20AC             
0135   20AA             
0135   20AA 01          
0135   20AB             
0135   20AB             
0135   20AB~            				endif
0135   20AB~            				endif
0135   20AB~            				endif
0135   20AB             
0135   20AC             
0135   20AC~            				endif
0135   20AC~            				endif
0135   20AC             
0136   20AC CA          				dex
0137   20AD             			eqend
0137   20AD             
0137   20AD             
0137   20AD~            			eqend
0137   20AD~            			eqend
0137   20AD~            			eqend
0137   20AD             
0137   20AD D0 F7       
0137   20AF             
0137   20AF~            			eqend
0137   20AF~            			eqend
0137   20AF             
0138   20AF             		else
0138   20AF             
0138   20AF             
0138   20AF             
0138   20AF             
0138   2092             
0138   2092             
0138   2092 1F          
0138   20AF             
0138   20AF             
0138   20AF 4C AF 20    
0138   20B2~            		else
0138   20B2~            		else
0138   20B2~            		else
0138   20B2~            		else
0138   20B2~            		else
0138   20B2             
0138   20B2~            		else
0138   20B2~            		else
0138   20B2             
0138   20B2~            		else
0138   20B2~            		else
0138   20B2             
0139   20B2 38          			sec	
0140   20B3 ED E1 05    			sbc	mazeyh			;Skip this many
0141   20B6 85 15       			sta	temp3				;Temp3 hold line count
0142   20B8             		endif
0142   20B8             
0142   20B8             
0142   20B8             
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8             
0142   20B0             
0142   20B0 B8 20       
0142   20B2             
0142   20B8             
0142   20B8~            		endif
0142   20B8~            		endif
0142   20B8             
0143   20B8 A5 27       		lda	xcomp				;Add in camera scroll
0144   20BA 18          		clc	
0145   20BB 65 0B       		adc	xmot				;From targx routine
0146   20BD 85 27       		sta	xcomp
0147   20BF A5 28       		lda	xcomp+1
0148   20C1 24 0C       		bit	xmot+1			;Which way??
0149   20C3             		ifmi
0149   20C3             
0149   20C3 10 FE       
0150   20C5 A9 00       			lda	#00				;For right hand scroll
0151   20C7 69 00       			adc	#00
0152   20C9 85 1F       			sta	temp8
0153   20CB             		else
0153   20CB             
0153   20CB             
0153   20CB             
0153   20CB             
0153   20C4             
0153   20C4             
0153   20C4 09          
0153   20CB             
0153   20CB             
0153   20CB 4C CB 20    
0153   20CE~            		else
0153   20CE~            		else
0153   20CE~            		else
0153   20CE~            		else
0153   20CE~            		else
0153   20CE             
0153   20CE~            		else
0153   20CE~            		else
0153   20CE             
0153   20CE~            		else
0153   20CE~            		else
0153   20CE             
0154   20CE 65 0C       			adc	xmot+1			;if moving right, draw different
0155   20D0 85 28       			sta	xcomp+1
0156   20D2             			ifpl					;Drawing Right???
0156   20D2             
0156   20D2 30 FE       
0157   20D4 C9 01       				cmp	#01				;Skip if drawing too far off right
0158   20D6             				ifcs
0158   20D6             
0158   20D6 90 FE       
0159   20D8 60          					rts
0160   20D9             				endif
0160   20D9             
0160   20D9             
0160   20D9             
0160   20D9             
0160   20D9             
0160   20D9~            				endif
0160   20D9~            				endif
0160   20D9             
0160   20D9~            				endif
0160   20D9~            				endif
0160   20D9             
0160   20D7             
0160   20D7 01          
0160   20D8             
0160   20D8             
0160   20D8~            				endif
0160   20D8~            				endif
0160   20D8~            				endif
0160   20D8             
0160   20D9             
0160   20D9~            				endif
0160   20D9~            				endif
0160   20D9             
0161   20D9             			endif
0161   20D9             
0161   20D9             
0161   20D9             
0161   20D9             
0161   20D9             
0161   20D9~            			endif
0161   20D9~            			endif
0161   20D9             
0161   20D9~            			endif
0161   20D9~            			endif
0161   20D9             
0161   20D3             
0161   20D3 05          
0161   20D4             
0161   20D4             
0161   20D4~            			endif
0161   20D4~            			endif
0161   20D4~            			endif
0161   20D4             
0161   20D9             
0161   20D9~            			endif
0161   20D9~            			endif
0161   20D9             
0162   20D9             		endif
0162   20D9             
0162   20D9             
0162   20D9             
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9             
0162   20CC             
0162   20CC D9 20       
0162   20CE             
0162   20D9             
0162   20D9~            		endif
0162   20D9~            		endif
0162   20D9             
0163   20D9             		begin
0163   20D9             
0164   20D9 A0 02       			ldy	#02
0165   20DB B1 0F       			lda	(mazpt,Y)			;Is this a blank line?
0166   20DD             			ifne
0166   20DD             
0166   20DD F0 FE       
0167   20DF 20 59 99    				jsr	vgcntr			;Return to center for more
0168   20E2 20 98 99    				jsr	vgvtr2
0169   20E5 20 F1 21    				jsr	unit				;Draw a line
0170   20E8             			endif
0170   20E8             
0170   20E8             
0170   20E8             
0170   20E8             
0170   20E8             
0170   20E8~            			endif
0170   20E8~            			endif
0170   20E8             
0170   20E8~            			endif
0170   20E8~            			endif
0170   20E8             
0170   20DE             
0170   20DE 09          
0170   20DF             
0170   20DF             
0170   20DF~            			endif
0170   20DF~            			endif
0170   20DF~            			endif
0170   20DF             
0170   20E8             
0170   20E8~            			endif
0170   20E8~            			endif
0170   20E8             
0171   20E8 20 E6 21    			jsr	skunit			;else skip this one
0172   20EB 30 06       			bmi	done
0173   20ED C6 2A       			dec	xcomp+3
0174   20EF C6 17       			dec	temp4				;Another line?
0175   20F1             		miend
0175   20F1             
0175   20F1             
0175   20F1~            		miend
0175   20F1~            		miend
0175   20F1~            		miend
0175   20F1             
0175   20F1 10 E6       
0175   20F3             
0175   20F3~            		miend
0175   20F3~            		miend
0175   20F3             
0176   20F3             
0177   20F3 A5 17       done		lda	temp4
0178   20F5             		ifpl					;Skip if minus entry
0178   20F5             
0178   20F5 30 FE       
0179   20F7             			ifne					;Need extra lines
0179   20F7             
0179   20F7 F0 FE       
0180   20F9 A9 00       				lda	#00
0181   20FB 85 00       				sta	vgbrit
0182   20FD             				begin
0182   20FD             
0183   20FD A9 FD       					lda	#-3
0184   20FF 85 28       					sta	xcomp+1		;Long H line
0185   2101 20 98 99    					jsr	vgvtr2
0186   2104 C6 17       					dec	temp4
0187   2106             				miend
0187   2106             
0187   2106             
0187   2106~            				miend
0187   2106~            				miend
0187   2106~            				miend
0187   2106             
0187   2106 10 F5       
0187   2108             
0187   2108~            				miend
0187   2108~            				miend
0187   2108             
0188   2108             			endif
0188   2108             
0188   2108             
0188   2108             
0188   2108             
0188   2108             
0188   2108~            			endif
0188   2108~            			endif
0188   2108             
0188   2108~            			endif
0188   2108~            			endif
0188   2108             
0188   20F8             
0188   20F8 0F          
0188   20F9             
0188   20F9             
0188   20F9~            			endif
0188   20F9~            			endif
0188   20F9~            			endif
0188   20F9             
0188   2108             
0188   2108~            			endif
0188   2108~            			endif
0188   2108             
0189   2108             		endif
0189   2108             
0189   2108             
0189   2108             
0189   2108             
0189   2108             
0189   2108~            		endif
0189   2108~            		endif
0189   2108             
0189   2108~            		endif
0189   2108~            		endif
0189   2108             
0189   20F6             
0189   20F6 11          
0189   20F7             
0189   20F7             
0189   20F7~            		endif
0189   20F7~            		endif
0189   20F7~            		endif
0189   20F7             
0189   2108             
0189   2108~            		endif
0189   2108~            		endif
0189   2108             
0190   2108 60          		rts
0191   2109             		
0192   2109             ;*************************************************
0193   2109             	.sbttl "Open/Close Doors"
0194   2109             ;*************************************************
0195   2109             ;* This routine will open and close the main     *
0196   2109             ;* doors at the proper time.                     *
0197   2109             ;*************************************************			
0198   2109 AD B6 03    opcl		lda	objst+zreactor			;Reactor status
0199   210C             		ifmi						;Blowing up?
0199   210C             
0199   210C 10 FE       
0200   210E A9 80       			lda	#$80
0201   2110 8D 04 08    			sta	openflg				;Set flag to open
0202   2113 AD 00 04    			lda	objst+zstuf+3
0203   2116             			ifne
0203   2116             
0203   2116 F0 FE       
0204   2118 AD 70 07    				lda	daccy
0205   211B D0 2C       				bne	?ocd10
0206   211D             			endif
0206   211D             
0206   211D             
0206   211D             
0206   211D             
0206   211D             
0206   211D~            			endif
0206   211D~            			endif
0206   211D             
0206   211D~            			endif
0206   211D~            			endif
0206   211D             
0206   2117             
0206   2117 05          
0206   2118             
0206   2118             
0206   2118~            			endif
0206   2118~            			endif
0206   2118~            			endif
0206   2118             
0206   211D             
0206   211D~            			endif
0206   211D~            			endif
0206   211D             
0207   211D AD 0B 03    			lda	maznum
0208   2120 C9 01       			cmp	#01
0209   2122             			ifeq
0209   2122             
0209   2122 D0 FE       
0210   2124 AE 0F 03    				ldx	difcty
0211   2127 BD E4 3B    				lda	mpod,X				;Determine if doors should open
0212   212A C9 02       				cmp	#02
0213   212C F0 1B       				beq	?ocd10				;Nope!
0214   212E             			endif
0214   212E             
0214   212E             
0214   212E             
0214   212E             
0214   212E             
0214   212E~            			endif
0214   212E~            			endif
0214   212E             
0214   212E~            			endif
0214   212E~            			endif
0214   212E             
0214   2123             
0214   2123 0A          
0214   2124             
0214   2124             
0214   2124~            			endif
0214   2124~            			endif
0214   2124~            			endif
0214   2124             
0214   212E             
0214   212E~            			endif
0214   212E~            			endif
0214   212E             
0215   212E 20 5E 21    			jsr	ocdat					;Pointer to data in Y
0216   2131 C8          			iny
0217   2132 C8          			iny						;Pass two bytes close data
0218   2133 D0 1C       			bne	?bad1					;Output new bytes
0219   2135             		else
0219   2135             
0219   2135             
0219   2135             
0219   2135             
0219   210D             
0219   210D             
0219   210D 2A          
0219   2135             
0219   2135             
0219   2135 4C 35 21    
0219   2138~            		else
0219   2138~            		else
0219   2138~            		else
0219   2138~            		else
0219   2138~            		else
0219   2138             
0219   2138~            		else
0219   2138~            		else
0219   2138             
0219   2138~            		else
0219   2138~            		else
0219   2138             
0220   2138 AD 00 08    			lda	gamest
0221   213B 29 20       			and	#$20					;In Maze??
0222   213D             			ifne						;yep
0222   213D             
0222   213D F0 FE       
0223   213F 2C 1D 03    				bit	mzgrnd				;On the ground??
0224   2142             				ifmi						;Okay to do this now
0224   2142             
0224   2142 10 FE       
0225   2144 AD 04 08    					lda	openflg				;Maze open??
0226   2147             					ifmi						;Yes, close it!
0226   2147             
0226   2147 10 FE       
0227   2149 A9 00       ?ocd10					lda	#00
0228   214B 8D 04 08    						sta	openflg				;Set open bit
0229   214E 20 5E 21    						jsr	ocdat					;Pointer to data in Y
0230   2151 B1 0F       ?bad1						lda	(mazpt,Y)
0231   2153 9D 00 09    						sta	mazer,X				;Store new data
0232   2156 C8          						iny
0233   2157 E8          						inx
0234   2158 B1 0F       						lda	(mazpt,Y)
0235   215A 9D 00 09    						sta	mazer,X
0236   215D             					endif
0236   215D             
0236   215D             
0236   215D             
0236   215D             
0236   215D             
0236   215D~            					endif
0236   215D~            					endif
0236   215D             
0236   215D~            					endif
0236   215D~            					endif
0236   215D             
0236   2148             
0236   2148 14          
0236   2149             
0236   2149             
0236   2149~            					endif
0236   2149~            					endif
0236   2149~            					endif
0236   2149             
0236   215D             
0236   215D~            					endif
0236   215D~            					endif
0236   215D             
0237   215D             				endif
0237   215D             
0237   215D             
0237   215D             
0237   215D             
0237   215D             
0237   215D~            				endif
0237   215D~            				endif
0237   215D             
0237   215D~            				endif
0237   215D~            				endif
0237   215D             
0237   2143             
0237   2143 19          
0237   2144             
0237   2144             
0237   2144~            				endif
0237   2144~            				endif
0237   2144~            				endif
0237   2144             
0237   215D             
0237   215D~            				endif
0237   215D~            				endif
0237   215D             
0238   215D             			endif
0238   215D             
0238   215D             
0238   215D             
0238   215D             
0238   215D             
0238   215D~            			endif
0238   215D~            			endif
0238   215D             
0238   215D~            			endif
0238   215D~            			endif
0238   215D             
0238   213E             
0238   213E 1E          
0238   213F             
0238   213F             
0238   213F~            			endif
0238   213F~            			endif
0238   213F~            			endif
0238   213F             
0238   215D             
0238   215D~            			endif
0238   215D~            			endif
0238   215D             
0239   215D             		endif
0239   215D             
0239   215D             
0239   215D             
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D~            		endif
0239   215D             
0239   2136             
0239   2136 5D 21       
0239   2138             
0239   215D             
0239   215D~            		endif
0239   215D~            		endif
0239   215D             
0240   215D 60          		rts
0241   215E             			
0242   215E AD 0B 03    ocdat		lda	maznum
0243   2161 0A          		asl	A
0244   2162 A8          		tay	
0245   2163 B9 3F 2E    		lda	mzocd+1,Y
0246   2166 85 10       		sta	mazpt+1
0247   2168 B9 3E 2E    		lda	mzocd,Y
0248   216B 85 0F       		sta	mazpt
0249   216D A0 00       		ldy	#00
0250   216F B1 0F       		lda	(mazpt,Y)					;First Byte
0251   2171 AA          		tax							;RAM output location pointer
0252   2172             		; (mazpt,Y) points to close data at this point
0253   2172 C8          		iny
0254   2173 60          		rts
0255   2174             		
0256   2174             ;**************************************************
0257   2174             	.sbttl "Trap Doors (Or shut your trap!)"
0258   2174             ;**************************************************
0259   2174             ;* For Trap Doors:                                *
0260   2174             ;* Database:	Index to pg1,offset to time,    *
0261   2174             ;*  			time, open data, close data     *
0262   2174             ;*                                                *
0263   2174             ;* Executed once every 16 frames minimum          *
0264   2174             ;**************************************************
0265   2174 AD 0D 03    trapal	lda	dif4mz			;Executed only once, permanant changes
0266   2177 0A          		asl	A
0267   2178 AA          		tax	
0268   2179 BD 2C 2F    		lda	mztdal,X
0269   217C 85 15       		sta	temp3
0270   217E BD 2D 2F    		lda	mztdal+1,X
0271   2181 85 16       		sta	temp3+1
0272   2183 A0 00       		ldy	#00
0273   2185 B1 15       ?td10		lda	(temp3,Y)
0274   2187             		ifeq
0274   2187             
0274   2187 D0 FE       
0275   2189 60          ?td20			rts
0276   218A             		endif
0276   218A             
0276   218A             
0276   218A             
0276   218A             
0276   218A             
0276   218A~            		endif
0276   218A~            		endif
0276   218A             
0276   218A~            		endif
0276   218A~            		endif
0276   218A             
0276   2188             
0276   2188 01          
0276   2189             
0276   2189             
0276   2189~            		endif
0276   2189~            		endif
0276   2189~            		endif
0276   2189             
0276   218A             
0276   218A~            		endif
0276   218A~            		endif
0276   218A             
0277   218A AA          		tax	
0278   218B C8          		iny	
0279   218C B1 15       		lda	(temp3,Y)
0280   218E 9D 00 09    		sta	mazer,X
0281   2191 C8          		iny	
0282   2192 4C 85 21    		jmp	?td10
0283   2195             		
0284   2195 A5 95       trap		lda	frame
0285   2197 29 0F       		and	#$0F
0286   2199 49 0F       		eor	#$0F
0287   219B             		ifne
0287   219B             
0287   219B F0 FE       
0288   219D 60          			rts
0289   219E             		endif
0289   219E             
0289   219E             
0289   219E             
0289   219E             
0289   219E             
0289   219E~            		endif
0289   219E~            		endif
0289   219E             
0289   219E~            		endif
0289   219E~            		endif
0289   219E             
0289   219C             
0289   219C 01          
0289   219D             
0289   219D             
0289   219D~            		endif
0289   219D~            		endif
0289   219D~            		endif
0289   219D             
0289   219E             
0289   219E~            		endif
0289   219E~            		endif
0289   219E             
0290   219E AD 0D 03    trap2		lda	dif4mz
0291   21A1 0A          		asl	A
0292   21A2 AA          		tax					;Get pointer for this maze
0293   21A3 C9 10       		cmp	#$10
0294   21A5 90 20       		bcc	?trp20
0295   21A7 BD 3C 2F    		lda	mztd-$10,X			;Trap door data
0296   21AA 85 15       		sta	temp3
0297   21AC BD 3D 2F    		lda	mztd-$0f,X
0298   21AF 85 16       		sta	temp3+1			;Ind pointer
0299   21B1 A0 00       		ldy	#00
0300   21B3 A5 96       		lda	frame+1
0301   21B5 85 11       		sta	temp1
0302   21B7 A5 95       		lda	frame
0303   21B9 A2 03       		ldx	#03
0304   21BB             		begin
0304   21BB             
0305   21BB 46 11       			lsr	temp1
0306   21BD 6A          			ror	A
0307   21BE CA          			dex
0308   21BF             		miend
0308   21BF             
0308   21BF             
0308   21BF~            		miend
0308   21BF~            		miend
0308   21BF~            		miend
0308   21BF             
0308   21BF 10 FA       
0308   21C1             
0308   21C1~            		miend
0308   21C1~            		miend
0308   21C1             
0309   21C1 85 11       		sta	temp1				;Time counter
0310   21C3 B1 15       ?trp10	lda	(temp3,Y)			;Get index (0 = end)
0311   21C5             		ifeq
0311   21C5             
0311   21C5 D0 FE       
0312   21C7 60          ?trp20		rts
0313   21C8             		endif
0313   21C8             
0313   21C8             
0313   21C8             
0313   21C8             
0313   21C8             
0313   21C8~            		endif
0313   21C8~            		endif
0313   21C8             
0313   21C8~            		endif
0313   21C8~            		endif
0313   21C8             
0313   21C6             
0313   21C6 01          
0313   21C7             
0313   21C7             
0313   21C7~            		endif
0313   21C7~            		endif
0313   21C7~            		endif
0313   21C7             
0313   21C8             
0313   21C8~            		endif
0313   21C8~            		endif
0313   21C8             
0314   21C8 AA          		tax					;Save pointer to pg1
0315   21C9 C8          		iny					;Point to time additive
0316   21CA A5 11       		lda	temp1
0317   21CC 18          		clc	
0318   21CD 71 15       		adc	(temp3,Y)			;Add time
0319   21CF C8          		iny	
0320   21D0 31 15       		and	(temp3,Y)			;Duty cycle
0321   21D2             		ifeq
0321   21D2             
0321   21D2 D0 FE       
0322   21D4 C8          			iny	
0323   21D5 B1 15       			lda	(temp3,Y)			;Open it (less than or equal to half the time)
0324   21D7 C8          			iny
0325   21D8             		else
0325   21D8             
0325   21D8             
0325   21D8             
0325   21D8             
0325   21D3             
0325   21D3             
0325   21D3 07          
0325   21D8             
0325   21D8             
0325   21D8 4C D8 21    
0325   21DB~            		else
0325   21DB~            		else
0325   21DB~            		else
0325   21DB~            		else
0325   21DB~            		else
0325   21DB             
0325   21DB~            		else
0325   21DB~            		else
0325   21DB             
0325   21DB~            		else
0325   21DB~            		else
0325   21DB             
0326   21DB C8          			iny
0327   21DC C8          			iny
0328   21DD B1 15       			lda	(temp3,Y)
0329   21DF             		endif
0329   21DF             
0329   21DF             
0329   21DF             
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF             
0329   21D9             
0329   21D9 DF 21       
0329   21DB             
0329   21DF             
0329   21DF~            		endif
0329   21DF~            		endif
0329   21DF             
0330   21DF C8          		iny
0331   21E0 9D 00 09    		sta	mazer,X			;Do this one
0332   21E3 4C C3 21    		jmp	?trp10
0333   21E6             
0334   21E6             ;***************************************************
0335   21E6             	.sbttl "Skip Unit"
0336   21E6             ;***************************************************
0337   21E6             ;* Will skip one horiz unit and update pointers    *
0338   21E6             ;* for next unit (if one).                         *
0339   21E6             ;*                                                 *
0340   21E6             ;* Can also be used to skip to end of current unit.*
0341   21E6             ;***************************************************
0342   21E6 EE 97 08    skunit	inc	linen				;Next line
0343   21E9 20 42 A8    		jsr	unitp				;Get next pointers
0344   21EC A0 00       		ldy	#00
0345   21EE B1 0F       		lda	(mazpt,Y)
0346   21F0 60          		rts					;End of maze
0347   21F1             		
0348   21F1             ;***************************************************
0349   21F1             	.sbttl "Draw Unit (H line)"
0350   21F1             ;***************************************************
0351   21F1             ;* Draws 1 horizontal line of maze. Assumes        *
0352   21F1             ;* position of vector already set. Will draw 10d   *
0353   21F1             ;* segments or until end of current line, which    *
0354   21F1             ;* ever occurs first.                              *
0355   21F1             ;*                                                 *
0356   21F1             ;* RAM:	mazpt,mazpt+1	Pointer to current   *
0357   21F1             ;*                            maze stamp. 0 is end *
0358   21F1             ;*                            of line or end of    *
0359   21F1             ;*                            maze if the only     *
0360   21F1             ;*                            number in a unit.    *
0361   21F1             ;*                                                 *
0362   21F1             ;* Uses:	temp9, temp2                           *
0363   21F1             ;***************************************************
0364   21F1 A0 00       unit		ldy	#00				;For indirect pointers
0365   21F3 A9 06       		lda	#hunits-1			;10 stamps to right max
0366   21F5 85 21       		sta	temp9				;Guess correct
0367   21F7 AD 2E 05    		lda	mazexh
0368   21FA             		ifmi					;Another weird fudge factor
0368   21FA             
0368   21FA 10 FE       
0369   21FC 18          			clc
0370   21FD 69 01       			adc	#01
0371   21FF             		endif
0371   21FF             
0371   21FF             
0371   21FF             
0371   21FF             
0371   21FF             
0371   21FF~            		endif
0371   21FF~            		endif
0371   21FF             
0371   21FF~            		endif
0371   21FF~            		endif
0371   21FF             
0371   21FB             
0371   21FB 03          
0371   21FC             
0371   21FC             
0371   21FC~            		endif
0371   21FC~            		endif
0371   21FC~            		endif
0371   21FC             
0371   21FF             
0371   21FF~            		endif
0371   21FF~            		endif
0371   21FF             
0372   21FF 24 0C       		bit	xmot+1			;Moving left or right?
0373   2201             		ifmi
0373   2201             
0373   2201 10 FE       
0374   2203 38          			sec	
0375   2204 E5 0C       			sbc	xmot+1
0376   2206 E5 1F       			sbc	temp8
0377   2208 18          			clc	
0378   2209 69 01       			adc	#01
0379   220B             		endif
0379   220B             
0379   220B             
0379   220B             
0379   220B             
0379   220B             
0379   220B~            		endif
0379   220B~            		endif
0379   220B             
0379   220B~            		endif
0379   220B~            		endif
0379   220B             
0379   2202             
0379   2202 08          
0379   2203             
0379   2203             
0379   2203~            		endif
0379   2203~            		endif
0379   2203~            		endif
0379   2203             
0379   220B             
0379   220B~            		endif
0379   220B~            		endif
0379   220B             
0380   220B AA          		tax
0381   220C             		ifne					;Skip for 0
0381   220C             
0381   220C F0 FE       
0382   220E             			ifpl					;Skip for minus
0382   220E             
0382   220E 30 FE       
0383   2210             				begin
0383   2210             
0384   2210 B1 0F       					lda	(mazpt,Y)
0385   2212 10 01       					bpl	?dmu10			;End of maze if -
0386   2214 60          ?dmu5					rts
0387   2215 F0 FD       ?dmu10				beq	?dmu5				;End of unit if 0
0388   2217 20 6C 2A    					jsr	incmaz
0389   221A CA          					dex					;Any more stamps?
0390   221B             				eqend
0390   221B             
0390   221B             
0390   221B~            				eqend
0390   221B~            				eqend
0390   221B~            				eqend
0390   221B             
0390   221B D0 F3       
0390   221D             
0390   221D~            				eqend
0390   221D~            				eqend
0390   221D             
0391   221D             			else						;We want to skip a few on right now
0391   221D             
0391   221D             
0391   221D             
0391   221D             
0391   220F             
0391   220F             
0391   220F 10          
0391   221D             
0391   221D             
0391   221D 4C 1D 22    
0391   2220~            			else						;We want to skip a few on right now
0391   2220~            			else						;We want to skip a few on right now
0391   2220~            			else						;We want to skip a few on right now
0391   2220~            			else						;We want to skip a few on right now
0391   2220~            			else						;We want to skip a few on right now
0391   2220             
0391   2220~            			else						;We want to skip a few on right now
0391   2220~            			else						;We want to skip a few on right now
0391   2220             
0391   2220~            			else						;We want to skip a few on right now
0391   2220~            			else						;We want to skip a few on right now
0391   2220             
0392   2220 A5 21       				lda	temp9
0393   2222 18          				clc						;A = temp9
0394   2223 6D 2E 05    				adc	mazexh				;Adding a negative number
0395   2226 24 0C       				bit	xmot+1				;Did we move right?
0396   2228             				ifpl
0396   2228             
0396   2228 30 FE       
0397   222A 38          					sec
0398   222B E5 0C       					sbc	xmot+1				;Skip this many
0399   222D             				endif
0399   222D             
0399   222D             
0399   222D             
0399   222D             
0399   222D             
0399   222D~            				endif
0399   222D~            				endif
0399   222D             
0399   222D~            				endif
0399   222D~            				endif
0399   222D             
0399   2229             
0399   2229 03          
0399   222A             
0399   222A             
0399   222A~            				endif
0399   222A~            				endif
0399   222A~            				endif
0399   222A             
0399   222D             
0399   222D~            				endif
0399   222D~            				endif
0399   222D             
0400   222D 85 21       				sta	temp9					;Update count (less than 12d)
0401   222F             			endif
0401   222F             
0401   222F             
0401   222F             
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F~            			endif
0401   222F             
0401   221E             
0401   221E 2F 22       
0401   2220             
0401   222F             
0401   222F~            			endif
0401   222F~            			endif
0401   222F             
0402   222F             		endif
0402   222F             
0402   222F             
0402   222F             
0402   222F             
0402   222F             
0402   222F~            		endif
0402   222F~            		endif
0402   222F             
0402   222F~            		endif
0402   222F~            		endif
0402   222F             
0402   220D             
0402   220D 21          
0402   220E             
0402   220E             
0402   220E~            		endif
0402   220E~            		endif
0402   220E~            		endif
0402   220E             
0402   222F             
0402   222F~            		endif
0402   222F~            		endif
0402   222F             
0403   222F B1 0F       		lda	(mazpt,Y)			;Get first stamp
0404   2231             		ifeq
0404   2231             
0404   2231 D0 FE       
0405   2233 60          			rts					;Started at end of line
0406   2234             		endif
0406   2234             
0406   2234             
0406   2234             
0406   2234             
0406   2234             
0406   2234~            		endif
0406   2234~            		endif
0406   2234             
0406   2234~            		endif
0406   2234~            		endif
0406   2234             
0406   2232             
0406   2232 01          
0406   2233             
0406   2233             
0406   2233~            		endif
0406   2233~            		endif
0406   2233~            		endif
0406   2233             
0406   2234             
0406   2234~            		endif
0406   2234~            		endif
0406   2234             
0407   2234             		ifpl					;Not end of maze
0407   2234             
0407   2234 30 FE       
0408   2236             			begin
0408   2236             
0409   2236 29 0F       				and	#$0F				;Stamp code
0410   2238 0A          				asl	A				;Need a word pointer
0411   2239 A8          				tay	
0412   223A B9 B4 55    				lda	mazet-2,Y			;Get maze JSRL
0413   223D BE B5 55    				ldx	mazet-2+1,Y			;-2 because there is no stamp 0!!!!!
0414   2240 20 5D 99    				jsr	vgadd2
0415   2243 C6 21       				dec	temp9				;Did one
0416   2245 30 0B       				bmi	badhab			;Escape out
0417   2247 20 6C 2A    				jsr	incmaz			;Bump pointer
0418   224A B1 0F       				lda	(mazpt,Y)			;Next stamp
0419   224C             			eqend					;*** Always!!! ***
0419   224C             
0419   224C             
0419   224C~            			eqend					;*** Always!!! ***
0419   224C~            			eqend					;*** Always!!! ***
0419   224C~            			eqend					;*** Always!!! ***
0419   224C             
0419   224C D0 E8       
0419   224E             
0419   224E~            			eqend					;*** Always!!! ***
0419   224E~            			eqend					;*** Always!!! ***
0419   224E             
0420   224E             		else					;Must be end of maze
0420   224E             
0420   224E             
0420   224E             
0420   224E             
0420   2235             
0420   2235             
0420   2235 1B          
0420   224E             
0420   224E             
0420   224E 4C 4E 22    
0420   2251~            		else					;Must be end of maze
0420   2251~            		else					;Must be end of maze
0420   2251~            		else					;Must be end of maze
0420   2251~            		else					;Must be end of maze
0420   2251~            		else					;Must be end of maze
0420   2251             
0420   2251~            		else					;Must be end of maze
0420   2251~            		else					;Must be end of maze
0420   2251             
0420   2251~            		else					;Must be end of maze
0420   2251~            		else					;Must be end of maze
0420   2251             
0421   2251 60          			rts					;Return A = 80
0422   2252             		endif			
0422   2252             
0422   2252             
0422   2252             
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252             
0422   224F             
0422   224F 52 22       
0422   2251             
0422   2252             
0422   2252~            		endif			
0422   2252~            		endif			
0422   2252             
0423   2252 60          badhab	rts
0424   2253             
0425   2253             ;******************************************************
0426   2253             	.sbttl "Generate New Maze"
0427   2253             ;******************************************************
0428   2253             ;* Generates a new maze, places all objects and such  *
0429   2253             ;* in the maze.                                       *
0430   2253             ;******************************************************
0431   2253 20 DC 23    newmaze	jsr	placeall			;Place always objects
0432   2256 AD 0E 03    		lda	holmz				;if new maze, zero all statuses
0433   2259             		ifeq
0433   2259             
0433   2259 D0 FE       
0434   225B A2 0F       			ldx	#nmfire-1
0435   225D             			begin
0435   225D             
0436   225D 9D B7 03    				sta	objst+zfire,X
0437   2260 CA          				dex
0438   2261             			miend
0438   2261             
0438   2261             
0438   2261~            			miend
0438   2261~            			miend
0438   2261~            			miend
0438   2261             
0438   2261 10 FA       
0438   2263             
0438   2263~            			miend
0438   2263~            			miend
0438   2263             
0439   2263 A2 09       			ldx	#nmrob-1
0440   2265             			begin
0440   2265             
0441   2265 9D D3 03    				sta	objst+zrobot,X
0442   2268 CA          				dex
0443   2269             			miend
0443   2269             
0443   2269             
0443   2269~            			miend
0443   2269~            			miend
0443   2269~            			miend
0443   2269             
0443   2269 10 FA       
0443   226B             
0443   226B~            			miend
0443   226B~            			miend
0443   226B             
0444   226B A2 07       			ldx	#nmlock+nmkeys-1
0445   226D             			begin
0445   226D             
0446   226D 9D F5 03    				sta	objst+zlock,X
0447   2270 CA          				dex
0448   2271             			miend
0448   2271             
0448   2271             
0448   2271~            			miend
0448   2271~            			miend
0448   2271~            			miend
0448   2271             
0448   2271 10 FA       
0448   2273             
0448   2273~            			miend
0448   2273~            			miend
0448   2273             
0449   2273             		endif
0449   2273             
0449   2273             
0449   2273             
0449   2273             
0449   2273             
0449   2273~            		endif
0449   2273~            		endif
0449   2273             
0449   2273~            		endif
0449   2273~            		endif
0449   2273             
0449   225A             
0449   225A 18          
0449   225B             
0449   225B             
0449   225B~            		endif
0449   225B~            		endif
0449   225B~            		endif
0449   225B             
0449   2273             
0449   2273~            		endif
0449   2273~            		endif
0449   2273             
0450   2273 AD 0D 03    		lda	dif4mz			;Load in reactor time
0451   2276 C9 0F       		cmp	#$0F
0452   2278             		ifcs
0452   2278             
0452   2278 90 FE       
0453   227A 29 03       			and	#03
0454   227C 09 08       			ora	#08
0455   227E             		endif
0455   227E             
0455   227E             
0455   227E             
0455   227E             
0455   227E             
0455   227E~            		endif
0455   227E~            		endif
0455   227E             
0455   227E~            		endif
0455   227E~            		endif
0455   227E             
0455   2279             
0455   2279 04          
0455   227A             
0455   227A             
0455   227A~            		endif
0455   227A~            		endif
0455   227A~            		endif
0455   227A             
0455   227E             
0455   227E~            		endif
0455   227E~            		endif
0455   227E             
0456   227E AA          		tax
0457   227F BD 3A 3C    		lda	outime,X			;Need this now that reactor can be turned back off
0458   2282 8D 08 07    		sta	reacst
0459   2285 A9 FF       		lda	#$FF
0460   2287 8D 09 07    		sta	reacst+1			;Reactor status LSB
0461   228A AD 0F 03    		lda	difcty
0462   228D C9 05       		cmp	#maxdif+2
0463   228F             		ifcs
0463   228F             
0463   228F 90 FE       
0464   2291 A9 04       			lda	#maxdif+1
0465   2293             		endif
0465   2293             
0465   2293             
0465   2293             
0465   2293             
0465   2293             
0465   2293~            		endif
0465   2293~            		endif
0465   2293             
0465   2293~            		endif
0465   2293~            		endif
0465   2293             
0465   2290             
0465   2290 02          
0465   2291             
0465   2291             
0465   2291~            		endif
0465   2291~            		endif
0465   2291~            		endif
0465   2291             
0465   2293             
0465   2293~            		endif
0465   2293~            		endif
0465   2293             
0466   2293 0A          		asl	A
0467   2294 0A          		asl	A
0468   2295 6D 0B 03    		adc	maznum
0469   2298 0A          		asl	A				;Everything in words
0470   2299 AA          		tax					;Get init data for maze
0471   229A BD 66 2E    		lda	mzinit,X			;Maze fireball source
0472   229D 85 11       		sta	temp1
0473   229F BD 67 2E    		lda	mzinit+1,X			;Init data location
0474   22A2 85 12       		sta	temp1+1
0475   22A4 A0 00       		ldy	#00				;Get the data
0476   22A6 A9 01       		lda	#01
0477   22A8 8D B6 03    		sta	objst+zreactor		;Turn on reactor
0478   22AB B1 11       		lda	(temp1,Y)			;Reactor XL
0479   22AD 8D CA 04    		sta	objxl+zreactor
0480   22B0 C8          		iny	
0481   22B1 B1 11       		lda	(temp1,Y)			;Reactor XH
0482   22B3 8D 2F 05    		sta	objxh+zreactor		
0483   22B6 C8          		iny	
0484   22B7 B1 11       		lda	(temp1,Y)			;Reactor YL
0485   22B9 8D AF 05    		sta	objyl+zreactor
0486   22BC C8          		iny	
0487   22BD B1 11       		lda	(temp1,Y)			;Reactor YH
0488   22BF 8D E2 05    		sta	objyh+zreactor
0489   22C2 A2 02       		ldx	#zfire			;Place for first fireball
0490   22C4 C8          		iny	
0491   22C5             		begin					;Now do fireballs and robots
0491   22C5             
0492   22C5 B1 11       			lda	(temp1,Y)
0493   22C7 C9 FF       			cmp	#$FF
0494   22C9 F0 6C       			beq	?gnm10			;$ff ends list
0495   22CB C9 FE       			cmp	#$FE				;$fe ends fireballs, starts robots
0496   22CD             			ifeq
0496   22CD             
0496   22CD D0 FE       
0497   22CF A2 1E       				ldx	#zrobot
0498   22D1 C8          				iny
0499   22D2 B1 11       				lda	(temp1,Y)
0500   22D4             			endif
0500   22D4             
0500   22D4             
0500   22D4             
0500   22D4             
0500   22D4             
0500   22D4~            			endif
0500   22D4~            			endif
0500   22D4             
0500   22D4~            			endif
0500   22D4~            			endif
0500   22D4             
0500   22CE             
0500   22CE 05          
0500   22CF             
0500   22CF             
0500   22CF~            			endif
0500   22CF~            			endif
0500   22CF~            			endif
0500   22CF             
0500   22D4             
0500   22D4~            			endif
0500   22D4~            			endif
0500   22D4             
0501   22D4 9D C9 04    			sta	objxl,X
0502   22D7 9D FC 04    			sta	oldxl,X
0503   22DA A9 00       			lda	#00
0504   22DC 95 2B       			sta	ltcol,X			;Make sure collisions
0505   22DE 95 5D       			sta	rtcol,X
0506   22E0 9D 83 03    			sta	headcol,X
0507   22E3 C8          			iny	
0508   22E4 B1 11       			lda	(temp1,Y)
0509   22E6 9D 2E 05    			sta	objxh,X			;Fireball XH
0510   22E9 C8          			iny	
0511   22EA B1 11       			lda	(temp1,Y)
0512   22EC 9D AE 05    			sta	objyl,X			;Fireball YL
0513   22EF C8          			iny	
0514   22F0 B1 11       			lda	(temp1,Y)
0515   22F2 9D E1 05    			sta	objyh,X			;Fireball YH
0516   22F5 C8          			iny	
0517   22F6 B1 11       			lda	(temp1,Y)
0518   22F8 20 99 23    			jsr	incvel			;Check to see if this is an incrementing velocity
0519   22FB 9D 33 04    			sta	velxh,X
0520   22FE E0 1E       			cpx	#zrobot
0521   2300             			ifcs					;Might be a robot??
0521   2300             
0521   2300 90 FE       
0522   2302 9D 4D 06    				sta	robdir-zrobot,X		;Save initial direction
0523   2305 9D 57 06    				sta	robvel-zrobot,X		;Save his velocity too!
0524   2308             			endif
0524   2308             
0524   2308             
0524   2308             
0524   2308             
0524   2308             
0524   2308~            			endif
0524   2308~            			endif
0524   2308             
0524   2308~            			endif
0524   2308~            			endif
0524   2308             
0524   2301             
0524   2301 06          
0524   2302             
0524   2302             
0524   2302~            			endif
0524   2302~            			endif
0524   2302~            			endif
0524   2302             
0524   2308             
0524   2308~            			endif
0524   2308~            			endif
0524   2308             
0525   2308 C8          			iny	
0526   2309 B1 11       			lda	(temp1,Y)
0527   230B 20 99 23    			jsr	incvel
0528   230E 9D 97 04    			sta	velyh,X			;Fireball Y velocity
0529   2311 2C 0E 03    			bit	holmz				;Only old objects??
0530   2314             			ifpl
0530   2314             
0530   2314 30 FE       
0531   2316 FE B5 03    				inc	objst,X			;if first time around, turn on objects
0532   2319             			else
0532   2319             
0532   2319             
0532   2319             
0532   2319             
0532   2315             
0532   2315             
0532   2315 06          
0532   2319             
0532   2319             
0532   2319 4C 19 23    
0532   231C~            			else
0532   231C~            			else
0532   231C~            			else
0532   231C~            			else
0532   231C~            			else
0532   231C             
0532   231C~            			else
0532   231C~            			else
0532   231C             
0532   231C~            			else
0532   231C~            			else
0532   231C             
0533   231C BD B5 03    				lda	objst,X
0534   231F             				ifmi
0534   231F             
0534   231F 10 FE       
0535   2321 A9 00       ?gnm9					lda	#00
0536   2323 9D B5 03    					sta	objst,X			;Bring back to initial status
0537   2326             				else
0537   2326             
0537   2326             
0537   2326             
0537   2326             
0537   2320             
0537   2320             
0537   2320 08          
0537   2326             
0537   2326             
0537   2326 4C 26 23    
0537   2329~            				else
0537   2329~            				else
0537   2329~            				else
0537   2329~            				else
0537   2329~            				else
0537   2329             
0537   2329~            				else
0537   2329~            				else
0537   2329             
0537   2329~            				else
0537   2329~            				else
0537   2329             
0538   2329 1D 83 06    					ora	limbo,X			;if alive or transporting when man died
0539   232C F0 F3       					beq	?gnm9
0540   232E A9 01       					lda	#01
0541   2330 9D B5 03    					sta	objst,X			;Bring back to initial status
0542   2333             				endif
0542   2333             
0542   2333             
0542   2333             
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333~            				endif
0542   2333             
0542   2327             
0542   2327 33 23       
0542   2329             
0542   2333             
0542   2333~            				endif
0542   2333~            				endif
0542   2333             
0543   2333             			endif
0543   2333             
0543   2333             
0543   2333             
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333~            			endif
0543   2333             
0543   231A             
0543   231A 33 23       
0543   231C             
0543   2333             
0543   2333~            			endif
0543   2333~            			endif
0543   2333             
0544   2333 C8          			iny
0545   2334 E8          			inx
0546   2335             		eqend					;Never!
0546   2335             
0546   2335             
0546   2335~            		eqend					;Never!
0546   2335~            		eqend					;Never!
0546   2335~            		eqend					;Never!
0546   2335             
0546   2335 D0 8E       
0546   2337             
0546   2337~            		eqend					;Never!
0546   2337~            		eqend					;Never!
0546   2337             
0547   2337 A2 00       ?gnm10	ldx	#00				;Initialize Keys and Locks
0548   2339 A0 00       		ldy	#00
0549   233B 2C 0E 03    		bit	holmz
0550   233E             		ifpl
0550   233E             
0550   233E 30 FE       
0551   2340             			begin
0551   2340             
0552   2340 B1 C9       				lda	(perm1,Y)			;Color of set
0553   2342 F0 26       				beq	?gnm20			;No more
0554   2344 9D F9 03    				sta	objst+zkeys,X
0555   2347 9D F5 03    				sta	objst+zlock,X
0556   234A C8          				iny
0557   234B B1 C9       				lda	(perm1,Y)
0558   234D 20 87 23    				jsr	crack
0559   2350 9D 72 05    				sta	objxh+zkeys,X
0560   2353 A5 D1       				lda	perm5
0561   2355 9D 25 06    				sta	objyh+zkeys,X
0562   2358 C8          				iny	
0563   2359 B1 C9       				lda	(perm1,Y)
0564   235B 20 87 23    				jsr	crack
0565   235E 9D 6E 05    				sta	objxh+zlock,X
0566   2361 A5 D1       				lda	perm5
0567   2363 9D 21 06    				sta	objyh+zlock,X
0568   2366 C8          				iny	
0569   2367 E8          				inx
0570   2368             			eqend					;Never
0570   2368             
0570   2368             
0570   2368~            			eqend					;Never
0570   2368~            			eqend					;Never
0570   2368~            			eqend					;Never
0570   2368             
0570   2368 D0 D6       
0570   236A             
0570   236A~            			eqend					;Never
0570   236A~            			eqend					;Never
0570   236A             
0571   236A             		endif
0571   236A             
0571   236A             
0571   236A             
0571   236A             
0571   236A             
0571   236A~            		endif
0571   236A~            		endif
0571   236A             
0571   236A~            		endif
0571   236A~            		endif
0571   236A             
0571   233F             
0571   233F 2A          
0571   2340             
0571   2340             
0571   2340~            		endif
0571   2340~            		endif
0571   2340~            		endif
0571   2340             
0571   236A             
0571   236A~            		endif
0571   236A~            		endif
0571   236A             
0572   236A A9 80       ?gnm20	lda	#$80
0573   236C 8D 0E 03    		sta	holmz				;Hold init until next new maze
0574   236F A5 95       		lda	frame
0575   2371 29 FC       		and	#$FC
0576   2373 85 95       		sta	frame				;Force start
0577   2375 A9 00       		lda	#00				;Make sure no objects are in limbo at wave start
0578   2377 A2 31       		ldx	#nmobj-1
0579   2379             		begin
0579   2379             
0580   2379 9D 83 06    			sta	limbo,X
0581   237C CA          			dex
0582   237D             		miend
0582   237D             
0582   237D             
0582   237D~            		miend
0582   237D~            		miend
0582   237D~            		miend
0582   237D             
0582   237D 10 FA       
0582   237F             
0582   237F~            		miend
0582   237F~            		miend
0582   237F             
0583   237F A9 83       		lda	#$83
0584   2381 8D 74 07    		sta	objfrm			;Create new map buffer
0585   2384 4C C2 23    		jmp	copym				;Do pre-map stuff
0586   2387             		
0587   2387 85 D2       crack		sta	perm5+1			;Store away initial data
0588   2389 4A          		lsr	A
0589   238A 4A          		lsr	A
0590   238B 4A          		lsr	A
0591   238C 4A          		lsr	A
0592   238D 09 F0       		ora	#$F0				;Recreate Y coordinate
0593   238F 85 D1       		sta	perm5
0594   2391 A5 D2       		lda	perm5+1
0595   2393 29 0F       		and	#$0F
0596   2395 18          		clc	
0597   2396 69 01       		adc	#01				;X coordinate in accumulator
0598   2398 60          		rts	
0599   2399             		
0600   2399 C9 70       incvel	cmp	#$70
0601   239B             		ifcs
0601   239B             
0601   239B 90 FE       
0602   239D C9 90       			cmp	#$90				;Is this an incrementing velocity??
0603   239F             			ifcc					;yes
0603   239F             
0603   239F B0 FE       
0604   23A1 C9 00       				cmp	#00
0605   23A3             				ifmi
0605   23A3             
0605   23A3 10 FE       
0606   23A5 29 7F       					and	#$7F			;Sign extend to all 8 bits
0607   23A7             				else
0607   23A7             
0607   23A7             
0607   23A7             
0607   23A7             
0607   23A4             
0607   23A4             
0607   23A4 05          
0607   23A7             
0607   23A7             
0607   23A7 4C A7 23    
0607   23AA~            				else
0607   23AA~            				else
0607   23AA~            				else
0607   23AA~            				else
0607   23AA~            				else
0607   23AA             
0607   23AA~            				else
0607   23AA~            				else
0607   23AA             
0607   23AA~            				else
0607   23AA~            				else
0607   23AA             
0608   23AA 09 80       					ora	#$80
0609   23AC             				endif
0609   23AC             
0609   23AC             
0609   23AC             
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC             
0609   23A8             
0609   23A8 AC 23       
0609   23AA             
0609   23AC             
0609   23AC~            				endif
0609   23AC~            				endif
0609   23AC             
0610   23AC 85 CF       				sta	perm4				;Amount to be added to velocity for each difficulty level
0611   23AE C8          				iny
0612   23AF B1 11       				lda	(temp1,Y)			;Base velocity
0613   23B1 86 D0       				stx	perm4+1
0614   23B3 AE F6 02    				ldx	incdif
0615   23B6 CA          				dex
0616   23B7             				ifpl					;Don't add anything if difficulty zero
0616   23B7             
0616   23B7 30 FE       
0617   23B9             					begin
0617   23B9             
0618   23B9 18          						clc
0619   23BA 65 CF       						adc	perm4
0620   23BC CA          						dex	
0621   23BD             					miend
0621   23BD             
0621   23BD             
0621   23BD~            					miend
0621   23BD~            					miend
0621   23BD~            					miend
0621   23BD             
0621   23BD 10 FA       
0621   23BF             
0621   23BF~            					miend
0621   23BF~            					miend
0621   23BF             
0622   23BF             				endif
0622   23BF             
0622   23BF             
0622   23BF             
0622   23BF             
0622   23BF             
0622   23BF~            				endif
0622   23BF~            				endif
0622   23BF             
0622   23BF~            				endif
0622   23BF~            				endif
0622   23BF             
0622   23B8             
0622   23B8 06          
0622   23B9             
0622   23B9             
0622   23B9~            				endif
0622   23B9~            				endif
0622   23B9~            				endif
0622   23B9             
0622   23BF             
0622   23BF~            				endif
0622   23BF~            				endif
0622   23BF             
0623   23BF A6 D0       				ldx	perm4+1			;Restore X
0624   23C1             			endif
0624   23C1             
0624   23C1             
0624   23C1             
0624   23C1             
0624   23C1             
0624   23C1~            			endif
0624   23C1~            			endif
0624   23C1             
0624   23C1~            			endif
0624   23C1~            			endif
0624   23C1             
0624   23A0             
0624   23A0 20          
0624   23A1             
0624   23A1             
0624   23A1~            			endif
0624   23A1~            			endif
0624   23A1~            			endif
0624   23A1             
0624   23C1             
0624   23C1~            			endif
0624   23C1~            			endif
0624   23C1             
0625   23C1             		endif
0625   23C1             
0625   23C1             
0625   23C1             
0625   23C1             
0625   23C1             
0625   23C1~            		endif
0625   23C1~            		endif
0625   23C1             
0625   23C1~            		endif
0625   23C1~            		endif
0625   23C1             
0625   239C             
0625   239C 24          
0625   239D             
0625   239D             
0625   239D~            		endif
0625   239D~            		endif
0625   239D~            		endif
0625   239D             
0625   23C1             
0625   23C1~            		endif
0625   23C1~            		endif
0625   23C1             
0626   23C1 60          		rts
0627   23C2             		
0628   23C2             ;********************************************8
0629   23C2             	.sbttl "Copy Maze to RAM"
0630   23C2             ;********************************************
0631   23C2             ;* This routine copies the current maze to  *
0632   23C2             ;* RAM so that dynamic maze changes may take*
0633   23C2             ;* place.                                   *
0634   23C2             ;********************************************
0635   23C2 AD 0B 03    copym		lda	maznum
0636   23C5 0A          		asl	A				;To words
0637   23C6 A8          		tay	
0638   23C7 B9 57 2E    		lda	mazsrc+1,Y
0639   23CA 85 10       		sta	mazpt+1
0640   23CC B9 56 2E    		lda	mazsrc,Y
0641   23CF 85 0F       		sta	mazpt				;Point to maze top
0642   23D1 A0 FF       		ldy	#-1				;Will bump to 0 next time
0643   23D3             		begin
0643   23D3             
0644   23D3 C8          			iny					;Next byte
0645   23D4 B1 0F       			lda	(mazpt,Y)
0646   23D6 99 00 09    			sta	mazer,Y			;Store into RAM
0647   23D9             		miend
0647   23D9             
0647   23D9             
0647   23D9~            		miend
0647   23D9~            		miend
0647   23D9~            		miend
0647   23D9             
0647   23D9 10 F8       
0647   23DB             
0647   23DB~            		miend
0647   23DB~            		miend
0647   23DB             
0648   23DB 60          		rts
0649   23DC             		
0650   23DC             ;********************************************
0651   23DC             	.sbttl "Place Discs, Arrows and Trip Points"
0652   23DC             ;********************************************
0653   23DC             ;* This routine is used to  place all the   *
0654   23DC             ;* discs and arrows back in the maze        *
0655   23DC             ;* whenever needed without having to        *
0656   23DC             ;* re-init all other objects.               *
0657   23DC             ;********************************************			
0658   23DC AD 0F 03    placeall	lda	difcty
0659   23DF C9 05       		cmp	#maxdif+2
0660   23E1             		ifcs
0660   23E1             
0660   23E1 90 FE       
0661   23E3 A9 04       			lda	#maxdif+1
0662   23E5             		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5             
0662   23E5             
0662   23E5             
0662   23E5             
0662   23E5             
0662   23E5~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5             
0662   23E5~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5             
0662   23E2             
0662   23E2 02          
0662   23E3             
0662   23E3             
0662   23E3~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E3~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E3~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E3             
0662   23E5             
0662   23E5~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5~            		endif					;Maximize difcty at 4 (waves 17 thru 20)
0662   23E5             
0663   23E5 0A          		asl	A
0664   23E6 0A          		asl	A
0665   23E7 6D 0B 03    		adc	maznum
0666   23EA 0A          		asl	A
0667   23EB AA          		tax	
0668   23EC BD 8E 2E    		lda	mzdc,X			;Disc Source Data
0669   23EF 85 11       		sta	temp1				
0670   23F1 BD 8F 2E    		lda	mzdc+1,X
0671   23F4 85 12       		sta	temp1+1
0672   23F6 BD DE 2E    		lda	mzar,X			;Arrow Source Data
0673   23F9 85 15       		sta	temp3				
0674   23FB BD DF 2E    		lda	mzar+1,X
0675   23FE 85 16       		sta	temp3+1
0676   2400 BD 04 2F    		lda	mztr-8,X			;No Trip Pads on first four waves
0677   2403 85 17       		sta	temp4
0678   2405 BD 05 2F    		lda	mztr-7,X
0679   2408 85 18       		sta	temp4+1
0680   240A BD B6 2E    		lda	mzlg,X			;Lightning Source Data
0681   240D 85 19       		sta	temp5
0682   240F BD B7 2E    		lda	mzlg+1,X
0683   2412 85 1A       		sta	temp5+1
0684   2414 BD 5C 2F    		lda	mone,X			;One Way Arrows Source Data
0685   2417 85 1B       		sta	temp6
0686   2419 BD 5D 2F    		lda	mone+1,X
0687   241C 85 1C       		sta	temp6+1
0688   241E BD 8E 2F    		lda	mtite-$0a,X			;No Stalactites on first 5 waves
0689   2421 85 1D       		sta	temp7
0690   2423 BD 8F 2F    		lda	mtite-9,X
0691   2426 85 1E       		sta	temp7+1
0692   2428 BD B6 2F    		lda	mlock,X			;Lock Source Data
0693   242B 85 C9       		sta	perm1
0694   242D BD B7 2F    		lda	mlock+1,X
0695   2430 85 CA       		sta	perm1+1
0696   2432 BD DE 2F    		lda	mtran,X			;Transporter Source Data
0697   2435 85 CB       		sta	perm2
0698   2437 BD DF 2F    		lda	mtran+1,X
0699   243A 85 CC       		sta	perm2+1
0700   243C BD FA 2F    		lda	mhand-$0c,X			;No Hands on first six waves
0701   243F 85 CD       		sta	perm3
0702   2441 BD FB 2F    		lda	mhand-$0b,X
0703   2444 85 CE       		sta	perm3+1
0704   2446 A9 00       		lda	#00
0705   2448 A2 0B       		ldx	#nmlsht+nmcann-1		;No laser shots or laser cannons
0706   244A             		begin
0706   244A             
0707   244A 9D C7 03    			sta	objst+zlsht,X
0708   244D CA          			dex
0709   244E             		miend
0709   244E             
0709   244E             
0709   244E~            		miend
0709   244E~            		miend
0709   244E~            		miend
0709   244E             
0709   244E 10 FA       
0709   2450             
0709   2450~            		miend
0709   2450~            		miend
0709   2450             
0710   2450 A2 17       		ldx	#nmshot+nmtite+nmtran	;No robot shots or tites or transporters
0711   2452             		begin					;Also zero's player ship byte
0711   2452             
0712   2452 9D DD 03    			sta	objst+zshot,X
0713   2455 CA          			dex
0714   2456             		miend
0714   2456             
0714   2456             
0714   2456~            		miend
0714   2456~            		miend
0714   2456~            		miend
0714   2456             
0714   2456 10 FA       
0714   2458             
0714   2458~            		miend
0714   2458~            		miend
0714   2458             
0715   2458 A2 03       		ldx	#nmstuf-1
0716   245A             		begin
0716   245A             
0717   245A 9D FD 03    			sta	objst+zstuf,X		;No One of a Kinds
0718   245D CA          			dex
0719   245E             		miend
0719   245E             
0719   245E             
0719   245E~            		miend
0719   245E~            		miend
0719   245E~            		miend
0719   245E             
0719   245E 10 FA       
0719   2460             
0719   2460~            		miend
0719   2460~            		miend
0719   2460             
0720   2460 A2 33       		ldx	#nmdisc+nmligh+nmfrfl+nmtrpp+nmonew+nmarow-1
0721   2462             		begin
0721   2462             
0722   2462 9D 7A 05    			sta	objxh+zdisc,X		;No static objects
0723   2465 CA          			dex
0724   2466             		miend
0724   2466             
0724   2466             
0724   2466~            		miend
0724   2466~            		miend
0724   2466~            		miend
0724   2466             
0724   2466 10 FA       
0724   2468             
0724   2468~            		miend
0724   2468~            		miend
0724   2468             
0725   2468 A2 03       		ldx	#nmonew-1			;No one way signs
0726   246A             		begin
0726   246A             
0727   246A 9D 7F 06    			sta	onewst,X
0728   246D CA          			dex
0729   246E             		miend
0729   246E             
0729   246E             
0729   246E~            		miend
0729   246E~            		miend
0729   246E~            		miend
0729   246E             
0729   246E 10 FA       
0729   2470             
0729   2470~            		miend
0729   2470~            		miend
0729   2470             
0730   2470 AD 0D 03    		lda	dif4mz
0731   2473 AA          		tax					;Initialize clock and boots
0732   2474 A0 00       		ldy	#00
0733   2476             		begin
0733   2476             
0734   2476 BD 75 3B    			lda	mclock,X
0735   2479             			ifne
0735   2479             
0735   2479 F0 FE       
0736   247B 20 87 23    				jsr	crack
0737   247E 99 76 05    				sta	objxh+zstuf,Y
0738   2481 A5 D1       				lda	perm5
0739   2483 99 29 06    				sta	objyh+zstuf,Y
0740   2486 A9 01       				lda	#01
0741   2488 99 FD 03    				sta	objst+zstuf,Y
0742   248B             			endif
0742   248B             
0742   248B             
0742   248B             
0742   248B             
0742   248B             
0742   248B~            			endif
0742   248B~            			endif
0742   248B             
0742   248B~            			endif
0742   248B~            			endif
0742   248B             
0742   247A             
0742   247A 10          
0742   247B             
0742   247B             
0742   247B~            			endif
0742   247B~            			endif
0742   247B~            			endif
0742   247B             
0742   248B             
0742   248B~            			endif
0742   248B~            			endif
0742   248B             
0743   248B 8A          			txa
0744   248C 18          			clc
0745   248D 69 10       			adc	#numaze			;Access next set of 2 bytes per maze
0746   248F AA          			tax
0747   2490 C8          			iny
0748   2491 C0 02       			cpy	#02
0749   2493             		eqend
0749   2493             
0749   2493             
0749   2493~            		eqend
0749   2493~            		eqend
0749   2493~            		eqend
0749   2493             
0749   2493 D0 E1       
0749   2495             
0749   2495~            		eqend
0749   2495~            		eqend
0749   2495             
0750   2495 AD 0B 03    		lda	maznum			;Init Escape Pod
0751   2498 C9 01       		cmp	#01
0752   249A             		ifeq
0752   249A             
0752   249A D0 FE       
0753   249C AE 0F 03    			ldx	difcty
0754   249F E0 03       			cpx	#numaze/4-1
0755   24A1             			ifcs
0755   24A1             
0755   24A1 90 FE       
0756   24A3 A2 03       				ldx	#numaze/4-1
0757   24A5             			endif
0757   24A5             
0757   24A5             
0757   24A5             
0757   24A5             
0757   24A5             
0757   24A5~            			endif
0757   24A5~            			endif
0757   24A5             
0757   24A5~            			endif
0757   24A5~            			endif
0757   24A5             
0757   24A2             
0757   24A2 02          
0757   24A3             
0757   24A3             
0757   24A3~            			endif
0757   24A3~            			endif
0757   24A3~            			endif
0757   24A3             
0757   24A5             
0757   24A5~            			endif
0757   24A5~            			endif
0757   24A5             
0758   24A5 BD E4 3B    			lda	mpod,X
0759   24A8             			ifne
0759   24A8             
0759   24A8 F0 FE       
0760   24AA A9 01       				lda	#01
0761   24AC             			endif
0761   24AC             
0761   24AC             
0761   24AC             
0761   24AC             
0761   24AC             
0761   24AC~            			endif
0761   24AC~            			endif
0761   24AC             
0761   24AC~            			endif
0761   24AC~            			endif
0761   24AC             
0761   24A9             
0761   24A9 02          
0761   24AA             
0761   24AA             
0761   24AA~            			endif
0761   24AA~            			endif
0761   24AA~            			endif
0761   24AA             
0761   24AC             
0761   24AC~            			endif
0761   24AC~            			endif
0761   24AC             
0762   24AC 8D FF 03    			sta	objst+zstuf+2
0763   24AF A9 10       			lda	#$10
0764   24B1 8D 78 05    			sta	objxh+zstuf+2
0765   24B4 A9 F6       			lda	#$F6
0766   24B6 8D 2B 06    			sta	objyh+zstuf+2
0767   24B9 A9 00       			lda	#00
0768   24BB 8D 03 07    			sta	epodfr
0769   24BE 8D 04 07    			sta	epodgr
0770   24C1             		endif
0770   24C1             
0770   24C1             
0770   24C1             
0770   24C1             
0770   24C1             
0770   24C1~            		endif
0770   24C1~            		endif
0770   24C1             
0770   24C1~            		endif
0770   24C1~            		endif
0770   24C1             
0770   249B             
0770   249B 25          
0770   249C             
0770   249C             
0770   249C~            		endif
0770   249C~            		endif
0770   249C~            		endif
0770   249C             
0770   24C1             
0770   24C1~            		endif
0770   24C1~            		endif
0770   24C1             
0771   24C1 AD 0D 03    		lda	dif4mz
0772   24C4 C9 06       		cmp	#06
0773   24C6             		ifcs					;Init Hand, wave 6 and over
0773   24C6             
0773   24C6 90 FE       
0774   24C8 A0 00       			ldy	#00
0775   24CA B1 CD       			lda	(perm3,Y)
0776   24CC             			ifne
0776   24CC             
0776   24CC F0 FE       
0777   24CE A9 01       				lda	#01
0778   24D0 8D 00 04    				sta	objst+zstuf+3
0779   24D3 A9 00       				lda	#00
0780   24D5 8D 6F 07    				sta	daccx				;Starts under the box
0781   24D8 B1 CD       				lda	(perm3,Y)
0782   24DA 8D 79 05    				sta	objxh+zstuf+3
0783   24DD C8          				iny	
0784   24DE B1 CD       				lda	(perm3,Y)
0785   24E0 8D 2C 06    				sta	objyh+zstuf+3
0786   24E3 C8          				iny	
0787   24E4 B1 CD       				lda	(perm3,Y)
0788   24E6 8D 6D 07    				sta	naccx				;Number of X accordians
0789   24E9 C8          				iny	
0790   24EA B1 CD       				lda	(perm3,Y)
0791   24EC 8D 6E 07    				sta	naccy				;Number of Y accordians
0792   24EF C8          				iny	
0793   24F0 B1 CD       				lda	(perm3,Y)
0794   24F2 8D 71 07    				sta	maccx				;Maximum X degrees
0795   24F5 C8          				iny	
0796   24F6 B1 CD       				lda	(perm3,Y)
0797   24F8 8D 73 07    				sta	raccy				;Rest Y degrees
0798   24FB 8D 70 07    				sta	daccy				;Is what it starts at
0799   24FE C8          				iny	
0800   24FF B1 CD       				lda	(perm3,Y)
0801   2501 8D 72 07    				sta	maccy				;Maximum Y degrees
0802   2504 C8          				iny	
0803   2505 B1 CD       				lda	(perm3,Y)
0804   2507 8D 6B 07    				sta	hxtend			;Visual Size, so draw accordian properly
0805   250A C8          				iny	
0806   250B B1 CD       				lda	(perm3,Y)
0807   250D 8D 6C 07    				sta	hytend
0808   2510             			endif
0808   2510             
0808   2510             
0808   2510             
0808   2510             
0808   2510             
0808   2510~            			endif
0808   2510~            			endif
0808   2510             
0808   2510~            			endif
0808   2510~            			endif
0808   2510             
0808   24CD             
0808   24CD 42          
0808   24CE             
0808   24CE             
0808   24CE~            			endif
0808   24CE~            			endif
0808   24CE~            			endif
0808   24CE             
0808   2510             
0808   2510~            			endif
0808   2510~            			endif
0808   2510             
0809   2510             		endif
0809   2510             
0809   2510             
0809   2510             
0809   2510             
0809   2510             
0809   2510~            		endif
0809   2510~            		endif
0809   2510             
0809   2510~            		endif
0809   2510~            		endif
0809   2510             
0809   24C7             
0809   24C7 48          
0809   24C8             
0809   24C8             
0809   24C8~            		endif
0809   24C8~            		endif
0809   24C8~            		endif
0809   24C8             
0809   2510             
0809   2510~            		endif
0809   2510~            		endif
0809   2510             
0810   2510 AD 0D 03    		lda	dif4mz
0811   2513 C9 05       		cmp	#05				;Initialize Stalactites, wave 5 and over
0812   2515             		ifcs
0812   2515             
0812   2515 90 FE       
0813   2517 A2 33       			ldx	#ztite
0814   2519 A0 00       			ldy	#00
0815   251B             			begin
0815   251B             
0816   251B B1 1D       				lda	(temp7,Y)
0817   251D F0 12       				beq	?pla10
0818   251F 20 87 23    				jsr	crack
0819   2522 9D 2E 05    				sta	objxh,X
0820   2525 A5 D1       				lda	perm5
0821   2527 9D E1 05    				sta	objyh,X
0822   252A FE B5 03    				inc	objst,X			;Turn on
0823   252D E8          				inx
0824   252E C8          				iny
0825   252F             			eqend					;Never
0825   252F             
0825   252F             
0825   252F~            			eqend					;Never
0825   252F~            			eqend					;Never
0825   252F~            			eqend					;Never
0825   252F             
0825   252F D0 EA       
0825   2531             
0825   2531~            			eqend					;Never
0825   2531~            			eqend					;Never
0825   2531             
0826   2531             		endif
0826   2531             
0826   2531             
0826   2531             
0826   2531             
0826   2531             
0826   2531~            		endif
0826   2531~            		endif
0826   2531             
0826   2531~            		endif
0826   2531~            		endif
0826   2531             
0826   2516             
0826   2516 1A          
0826   2517             
0826   2517             
0826   2517~            		endif
0826   2517~            		endif
0826   2517~            		endif
0826   2517             
0826   2531             
0826   2531~            		endif
0826   2531~            		endif
0826   2531             
0827   2531 A2 00       ?pla10	ldx	#00
0828   2533 A0 00       		ldy	#00
0829   2535             		begin
0829   2535             
0830   2535 B1 1B       			lda	(temp6,Y)			;Init wall positions
0831   2537 F0 1F       			beq	?pla15			;End of data
0832   2539 C9 FF       			cmp	#$FF				;Points to left if $80
0833   253B             			ifeq
0833   253B             
0833   253B D0 FE       
0834   253D C8          				iny
0835   253E A9 80       				lda	#$80
0836   2540             			else_ne
0836   2540             
0836   2540             
0836   2540             
0836   2540             
0836   253C             
0836   253C~            			else_ne
0836   253C~            			else_ne
0836   253C~            			else_ne
0836   253C~            			else_ne
0836   253C~            			else_ne
0836   253C             
0836   253C 05          
0836   2540             
0836   2540             
0836   2540 D0 FE       
0836   2542             
0836   2542~            			else_ne
0836   2542~            			else_ne
0836   2542             
0836   2542~            			else_ne
0836   2542~            			else_ne
0836   2542             
0837   2542 A9 01       				lda	#01				;Points to right
0838   2544             			endif
0838   2544             
0838   2544             
0838   2544             
0838   2544             
0838   2544             
0838   2544~            			endif
0838   2544~            			endif
0838   2544             
0838   2544~            			endif
0838   2544~            			endif
0838   2544             
0838   2541             
0838   2541 02          
0838   2542             
0838   2542             
0838   2542~            			endif
0838   2542~            			endif
0838   2542~            			endif
0838   2542             
0838   2544             
0838   2544~            			endif
0838   2544~            			endif
0838   2544             
0839   2544 9D 7F 06    			sta	onewst,X
0840   2547 B1 1B       			lda	(temp6,Y)
0841   2549 20 87 23    			jsr	crack
0842   254C 9D A0 05    			sta	objxh+zonew,X
0843   254F A5 D1       			lda	perm5
0844   2551 9D 53 06    			sta	objyh+zonew,X
0845   2554 E8          			inx
0846   2555 C8          			iny
0847   2556             		eqend					;Never
0847   2556             
0847   2556             
0847   2556~            		eqend					;Never
0847   2556~            		eqend					;Never
0847   2556~            		eqend					;Never
0847   2556             
0847   2556 D0 DD       
0847   2558             
0847   2558~            		eqend					;Never
0847   2558~            		eqend					;Never
0847   2558             
0848   2558 A0 00       ?pla15	ldy	#00
0849   255A A2 00       		ldx	#00
0850   255C             		begin
0850   255C             
0851   255C B1 11       			lda	(temp1,Y)			;Init disc positions
0852   255E F0 0F       			beq	?pla20			;End of data
0853   2560 20 87 23    			jsr	crack
0854   2563 9D 7A 05    			sta	objxh+zdisc,X
0855   2566 A5 D1       			lda	perm5
0856   2568 9D 2D 06    			sta	objyh+zdisc,X
0857   256B E8          			inx
0858   256C C8          			iny
0859   256D             		eqend					;Never
0859   256D             
0859   256D             
0859   256D~            		eqend					;Never
0859   256D~            		eqend					;Never
0859   256D~            		eqend					;Never
0859   256D             
0859   256D D0 ED       
0859   256F             
0859   256F~            		eqend					;Never
0859   256F~            		eqend					;Never
0859   256F             
0860   256F A0 00       ?pla20	ldy	#00
0861   2571 A2 00       		ldx	#00
0862   2573             		begin
0862   2573             
0863   2573 B1 15       			lda	(temp3,Y)			;Init arrow positions
0864   2575 F0 15       			beq	?pla25			;End of data
0865   2577 20 87 23    			jsr	crack
0866   257A 9D A4 05    			sta	objxh+zarow,X
0867   257D A5 D1       			lda	perm5
0868   257F 9D 57 06    			sta	objyh+zarow,X
0869   2582 C8          			iny
0870   2583 B1 15       			lda	(temp3,Y)
0871   2585 9D 61 06    			sta	ardir,X			;Direction of arrow
0872   2588 E8          			inx
0873   2589 C8          			iny
0874   258A             		eqend					;Never
0874   258A             
0874   258A             
0874   258A~            		eqend					;Never
0874   258A~            		eqend					;Never
0874   258A~            		eqend					;Never
0874   258A             
0874   258A D0 E7       
0874   258C             
0874   258C~            		eqend					;Never
0874   258C~            		eqend					;Never
0874   258C             
0875   258C A0 00       ?pla25	ldy	#00
0876   258E A2 00       		ldx	#00
0877   2590             		begin
0877   2590             
0878   2590 B1 19       			lda	(temp5,Y)			;Init lightning positions
0879   2592 F0 18       			beq	?pla30
0880   2594 C9 FF       			cmp	#$FF
0881   2596             			ifeq					;Goto vertical ones
0881   2596             
0881   2596 D0 FE       
0882   2598 A2 07       				ldx	#nmligh
0883   259A C8          				iny
0884   259B B1 19       				lda	(temp5,Y)
0885   259D             			endif
0885   259D             
0885   259D             
0885   259D             
0885   259D             
0885   259D             
0885   259D~            			endif
0885   259D~            			endif
0885   259D             
0885   259D~            			endif
0885   259D~            			endif
0885   259D             
0885   2597             
0885   2597 05          
0885   2598             
0885   2598             
0885   2598~            			endif
0885   2598~            			endif
0885   2598~            			endif
0885   2598             
0885   259D             
0885   259D~            			endif
0885   259D~            			endif
0885   259D             
0886   259D 20 87 23    			jsr	crack
0887   25A0 9D 8A 05    			sta	objxh+zligh,X
0888   25A3 A5 D1       			lda	perm5
0889   25A5 9D 3D 06    			sta	objyh+zligh,X
0890   25A8 E8          			inx
0891   25A9 C8          			iny
0892   25AA             		eqend					;Never
0892   25AA             
0892   25AA             
0892   25AA~            		eqend					;Never
0892   25AA~            		eqend					;Never
0892   25AA~            		eqend					;Never
0892   25AA             
0892   25AA D0 E4       
0892   25AC             
0892   25AC~            		eqend					;Never
0892   25AC~            		eqend					;Never
0892   25AC             
0893   25AC AD 0D 03    ?pla30	lda	dif4mz
0894   25AF C9 04       		cmp	#04
0895   25B1 90 17       		bcc	?pla35
0896   25B3 A0 00       		ldy	#00
0897   25B5 A2 00       		ldx	#00
0898   25B7             		begin
0898   25B7             
0899   25B7 B1 17       			lda	(temp4,Y)			;Init Point positions
0900   25B9 F0 0F       			beq	?pla35			;End of data
0901   25BB 20 87 23    			jsr	crack
0902   25BE 9D 98 05    			sta	objxh+ztrpp,X
0903   25C1 A5 D1       			lda	perm5
0904   25C3 9D 4B 06    			sta	objyh+ztrpp,X
0905   25C6 E8          			inx
0906   25C7 C8          			iny
0907   25C8             		eqend					;Never
0907   25C8             
0907   25C8             
0907   25C8~            		eqend					;Never
0907   25C8~            		eqend					;Never
0907   25C8~            		eqend					;Never
0907   25C8             
0907   25C8 D0 ED       
0907   25CA             
0907   25CA~            		eqend					;Never
0907   25CA~            		eqend					;Never
0907   25CA             
0908   25CA AD 0F 03    ?pla35	lda	difcty
0909   25CD C9 05       		cmp	#maxdif+2
0910   25CF             		ifcs
0910   25CF             
0910   25CF 90 FE       
0911   25D1 A9 04       			lda	#maxdif+1
0912   25D3             		endif
0912   25D3             
0912   25D3             
0912   25D3             
0912   25D3             
0912   25D3             
0912   25D3~            		endif
0912   25D3~            		endif
0912   25D3             
0912   25D3~            		endif
0912   25D3~            		endif
0912   25D3             
0912   25D0             
0912   25D0 02          
0912   25D1             
0912   25D1             
0912   25D1~            		endif
0912   25D1~            		endif
0912   25D1~            		endif
0912   25D1             
0912   25D3             
0912   25D3~            		endif
0912   25D3~            		endif
0912   25D3             
0913   25D3 0A          		asl	A
0914   25D4 0A          		asl	A
0915   25D5 6D 0B 03    		adc	maznum
0916   25D8 A8          		tay	
0917   25D9 BE 84 2F    		ldx	mcan,Y			;Start of Laser Pointer Table
0918   25DC             		ifne					;One level deeper than usual because action table for each item is of arbitrary length
0918   25DC             
0918   25DC F0 FE       
0919   25DE A9 FF       			lda	#$FF
0920   25E0 85 1D       			sta	temp7
0921   25E2             			begin
0921   25E2             
0922   25E2 BD 96 39    				lda	mcanst,X			;Start of pointer table
0923   25E5 85 13       				sta	temp2
0924   25E7 BD 97 39    				lda	mcanst+1,X
0925   25EA 85 14       				sta	temp2+1			;Pointer for cannon number temp7
0926   25EC A0 00       				ldy	#00
0927   25EE E8          				inx	
0928   25EF E8          				inx	
0929   25F0 86 1E       				stx	temp7+1
0930   25F2 A6 1D       				ldx	temp7
0931   25F4 E8          				inx	
0932   25F5 86 1D       				stx	temp7
0933   25F7 B1 13       				lda	(temp2,Y)			;X LSB
0934   25F9 C8          				iny	
0935   25FA 9D E3 04    				sta	objxl+zcann,X
0936   25FD B1 13       				lda	(temp2,Y)			;X MSB
0937   25FF C8          				iny	
0938   2600 9D 48 05    				sta	objxh+zcann,X
0939   2603 B1 13       				lda	(temp2,Y)			;Y LSB
0940   2605 C8          				iny	
0941   2606 9D C8 05    				sta	objyl+zcann,X
0942   2609 B1 13       				lda	(temp2,Y)			;Y MSB
0943   260B C8          				iny	
0944   260C 9D FB 05    				sta	objyh+zcann,X
0945   260F A9 00       				lda	#00
0946   2611 9D 4D 04    				sta	velxh+zcann,X		;No initial velocity
0947   2614 9D B1 04    				sta	velyh+zcann,X
0948   2617 9D E7 06    				sta	cannfr,X			;No wait before action
0949   261A 9D EB 06    				sta	cannss,X			;No tube spinning
0950   261D 9D F7 06    				sta	canngr,X			;Point to right barrel all the way out
0951   2620 9D F3 06    				sta	canndf,X			;Difficulty of cannon
0952   2623 A9 04       				lda	#04
0953   2625 9D EF 06    				sta	cannin,X			;Points to start of table
0954   2628 A9 01       				lda	#01
0955   262A 9D CF 03    				sta	objst+zcann,X		;Turn it on!!
0956   262D A5 13       				lda	temp2
0957   262F 9D FB 06    				sta	cannp1,X
0958   2632 A5 14       				lda	temp2+1
0959   2634 9D FF 06    				sta	cannp2,X
0960   2637 A6 1E       				ldx	temp7+1
0961   2639 BD 97 39    				lda	mcanst+1,X			;Is there another one?
0962   263C             			eqend
0962   263C             
0962   263C             
0962   263C~            			eqend
0962   263C~            			eqend
0962   263C~            			eqend
0962   263C             
0962   263C D0 A4       
0962   263E             
0962   263E~            			eqend
0962   263E~            			eqend
0962   263E             
0963   263E             		endif
0963   263E             
0963   263E             
0963   263E             
0963   263E             
0963   263E             
0963   263E~            		endif
0963   263E~            		endif
0963   263E             
0963   263E~            		endif
0963   263E~            		endif
0963   263E             
0963   25DD             
0963   25DD 60          
0963   25DE             
0963   25DE             
0963   25DE~            		endif
0963   25DE~            		endif
0963   25DE~            		endif
0963   25DE             
0963   263E             
0963   263E~            		endif
0963   263E~            		endif
0963   263E             
0964   263E A2 00       		ldx	#00				;Initialize Transporter Booths
0965   2640 8E 06 07    		stx	tspark
0966   2643 86 F0       		stx	mestim
0967   2645 86 EE       		stx	jmptim
0968   2647 86 EF       		stx	fldcnt
0969   2649 86 F1       		stx	jumprv			;Make sure idiot hints are initialized
0970   264B A0 00       		ldy	#00
0971   264D             		begin
0971   264D             
0972   264D B1 CB       			lda	(perm2,Y)			;Color of Pair
0973   264F F0 1A       			beq	?pla40
0974   2651 9D ED 03    			sta	objst+ztran,X
0975   2654 C8          			iny	
0976   2655 B1 CB       			lda	(perm2,Y)
0977   2657 20 87 23    			jsr	crack
0978   265A 9D 66 05    			sta	objxh+ztran,X		;X MSB of first
0979   265D A5 D1       			lda	perm5
0980   265F 9D 19 06    			sta	objyh+ztran,X		;Y MSB of first
0981   2662 A9 00       			lda	#00
0982   2664 9D 63 07    			sta	tranhi,X			;No sparkels in resting transporter
0983   2667 C8          			iny	
0984   2668 E8          			inx
0985   2669             		eqend					;Never
0985   2669             
0985   2669             
0985   2669~            		eqend					;Never
0985   2669~            		eqend					;Never
0985   2669~            		eqend					;Never
0985   2669             
0985   2669 D0 E2       
0985   266B             
0985   266B~            		eqend					;Never
0985   266B~            		eqend					;Never
0985   266B             
0986   266B C8          ?pla40	iny	
0987   266C A9 00       		lda	#00				;Load compacted trasportability info
0988   266E 85 13       		sta	temp2
0989   2670             		begin
0989   2670             
0990   2670 B1 CB       			lda	(perm2,Y)
0991   2672 C9 EE       			cmp	#$EE
0992   2674 F0 1E       			beq	?pla45			;$ee ends list
0993   2676 84 14       			sty	temp2+1
0994   2678 A2 07       			ldx	#07
0995   267A             			begin
0995   267A             
0996   267A A4 14       				ldy	temp2+1
0997   267C B1 CB       				lda	(perm2,Y)
0998   267E 3D A8 26    				and	transmsk,X			;Crack data
0999   2681             				ifne
0999   2681             
0999   2681 F0 FE       
1000   2683 A9 80       					lda	#$80
1001   2685             				endif
1001   2685             
1001   2685             
1001   2685             
1001   2685             
1001   2685             
1001   2685~            				endif
1001   2685~            				endif
1001   2685             
1001   2685~            				endif
1001   2685~            				endif
1001   2685             
1001   2682             
1001   2682 02          
1001   2683             
1001   2683             
1001   2683~            				endif
1001   2683~            				endif
1001   2683~            				endif
1001   2683             
1001   2685             
1001   2685~            				endif
1001   2685~            				endif
1001   2685             
1002   2685 A4 13       				ldy	temp2
1003   2687 99 09 07    				sta	cktran,Y
1004   268A E6 13       				inc	temp2
1005   268C CA          				dex
1006   268D             			miend
1006   268D             
1006   268D             
1006   268D~            			miend
1006   268D~            			miend
1006   268D~            			miend
1006   268D             
1006   268D 10 EB       
1006   268F             
1006   268F~            			miend
1006   268F~            			miend
1006   268F             
1007   268F A4 14       			ldy	temp2+1
1008   2691 C8          			iny
1009   2692             		eqend
1009   2692             
1009   2692             
1009   2692~            		eqend
1009   2692~            		eqend
1009   2692~            		eqend
1009   2692             
1009   2692 D0 DC       
1009   2694             
1009   2694~            		eqend
1009   2694~            		eqend
1009   2694             
1010   2694 A2 07       ?pla45	ldx	#ntrans-1
1011   2696             		begin
1011   2696             
1012   2696 BD A0 26    			lda	tspkls,X
1013   2699 9D 53 07    			sta	ttran,X			;Stagger Transporter Sparkels
1014   269C CA          			dex
1015   269D             		miend
1015   269D             
1015   269D             
1015   269D~            		miend
1015   269D~            		miend
1015   269D~            		miend
1015   269D             
1015   269D 10 F7       
1015   269F             
1015   269F~            		miend
1015   269F~            		miend
1015   269F             
1016   269F 60          		rts
1017   26A0             			
1018   26A0 060305020501tspkls	.byte $06,$03,$05,$02,$05,$01,$04,$00
1018   26A6 0400
1019   26A8             
1020   26A8 804020100804transmsk	.byte $80,$40,$20,$10,$08,$04,$02,$01
1020   26AE 0201
1021   26B0             
1022   26B0             ;***************************************************
1023   26B0             	.sbttl "Initialize Maze Exit Arrows"
1024   26B0             ;***************************************************
1025   26B0 AD 0D 03    newarrow	lda	dif4mz
1026   26B3 0A          		asl	A
1027   26B4 AA          		tax	
1028   26B5 E0 06       		cpx	#06
1029   26B7             		ifcc
1029   26B7             
1029   26B7 B0 FE       
1030   26B9 BD 06 2F    			lda	mzor,X
1031   26BC 85 23       			sta	tempa
1032   26BE BD 07 2F    			lda	mzor+1,X
1033   26C1 85 24       			sta	tempa+1
1034   26C3 A9 00       			lda	#00
1035   26C5 A2 09       			ldx	#nmarow-1
1036   26C7             			begin
1036   26C7             
1037   26C7 9D A4 05    				sta	objxh+zarow,X
1038   26CA CA          				dex
1039   26CB             			miend
1039   26CB             
1039   26CB             
1039   26CB~            			miend
1039   26CB~            			miend
1039   26CB~            			miend
1039   26CB             
1039   26CB 10 FA       
1039   26CD             
1039   26CD~            			miend
1039   26CD~            			miend
1039   26CD             
1040   26CD AA          			tax	
1041   26CE A8          			tay
1042   26CF             			begin
1042   26CF             
1043   26CF B1 23       				lda	(tempa,Y)			;Init arrow positions
1044   26D1 F0 15       				beq	?nar10			;End of data
1045   26D3 20 87 23    				jsr	crack
1046   26D6 9D A4 05    				sta	objxh+zarow,X
1047   26D9 A5 D1       				lda	perm5
1048   26DB 9D 57 06    				sta	objyh+zarow,X
1049   26DE C8          				iny
1050   26DF B1 23       				lda	(tempa,Y)
1051   26E1 9D 61 06    				sta	ardir,X			;Direction of arrow
1052   26E4 E8          				inx
1053   26E5 C8          				iny
1054   26E6             			eqend
1054   26E6             
1054   26E6             
1054   26E6~            			eqend
1054   26E6~            			eqend
1054   26E6~            			eqend
1054   26E6             
1054   26E6 D0 E7       
1054   26E8             
1054   26E8~            			eqend
1054   26E8~            			eqend
1054   26E8             
1055   26E8             		endif
1055   26E8             
1055   26E8             
1055   26E8             
1055   26E8             
1055   26E8             
1055   26E8~            		endif
1055   26E8~            		endif
1055   26E8             
1055   26E8~            		endif
1055   26E8~            		endif
1055   26E8             
1055   26B8             
1055   26B8 2F          
1055   26B9             
1055   26B9             
1055   26B9~            		endif
1055   26B9~            		endif
1055   26B9~            		endif
1055   26B9             
1055   26E8             
1055   26E8~            		endif
1055   26E8~            		endif
1055   26E8             
1056   26E8 60          ?nar10	rts	
1057   26E9             
1058   26E9             ;*************************************************
1059   26E9             	.sbttl "Place All Objects"
1060   26E9             ;*************************************************
1061   26E9             ;* This routine will place and draw all objects  *
1062   26E9             ;* that are active into the map on the top of the*
1063   26E9             ;* screen.                                       *
1064   26E9             ;*                                               *
1065   26E9             ;* Inputs:	frame,objst,objxh,objyh              *
1066   26E9             ;*                                               *
1067   26E9             ;* Outputs: vectors to vglist                    *
1068   26E9             ;*                                               *
1069   26E9             ;* Uses:	temp6,vglist(see also locmap)        *
1070   26E9             ;*************************************************
1071   26E9 A9 20       domap		lda	#$20
1072   26EB A2 80       		ldx	#$80
1073   26ED 20 5D 99    		jsr	vgadd2			;All vector JSRL's assume that the generator is
1074   26F0 A9 00       		lda	#00
1075   26F2 85 00       		sta	vgbrit
1076   26F4 A2 72       		ldx	#$72
1077   26F6 20 5D 99    		jsr	vgadd2			;Scaled and centered
1078   26F9 AD B5 03    		lda	objst				;Display man if alive
1079   26FC             		ifpl
1079   26FC             
1079   26FC 30 FE       
1080   26FE             			ifne
1080   26FE             
1080   26FE F0 FE       
1081   2700 A2 00       				ldx	#00
1082   2702 20 C7 27    				jsr	locmap
1083   2705             			endif
1083   2705             
1083   2705             
1083   2705             
1083   2705             
1083   2705             
1083   2705~            			endif
1083   2705~            			endif
1083   2705             
1083   2705~            			endif
1083   2705~            			endif
1083   2705             
1083   26FF             
1083   26FF 05          
1083   2700             
1083   2700             
1083   2700~            			endif
1083   2700~            			endif
1083   2700~            			endif
1083   2700             
1083   2705             
1083   2705~            			endif
1083   2705~            			endif
1083   2705             
1084   2705             		endif
1084   2705             
1084   2705             
1084   2705             
1084   2705             
1084   2705             
1084   2705~            		endif
1084   2705~            		endif
1084   2705             
1084   2705~            		endif
1084   2705~            		endif
1084   2705             
1084   26FD             
1084   26FD 07          
1084   26FE             
1084   26FE             
1084   26FE~            		endif
1084   26FE~            		endif
1084   26FE~            		endif
1084   26FE             
1084   2705             
1084   2705~            		endif
1084   2705~            		endif
1084   2705             
1085   2705 EE 74 07    		inc	objfrm
1086   2708 AD 74 07    		lda	objfrm			;Keep track of which buffer to display or update
1087   270B 29 7F       		and	#$7F
1088   270D C9 04       		cmp	#04
1089   270F             		ifcs
1089   270F             
1089   270F 90 FE       
1090   2711 AD 74 07    			lda	objfrm
1091   2714 29 80       			and	#$80
1092   2716 49 80       			eor	#$80
1093   2718 8D 74 07    			sta	objfrm
1094   271B 20 32 28    			jsr	newobuf			;Update Buffer
1095   271E             		endif
1095   271E             
1095   271E             
1095   271E             
1095   271E             
1095   271E             
1095   271E~            		endif
1095   271E~            		endif
1095   271E             
1095   271E~            		endif
1095   271E~            		endif
1095   271E             
1095   2710             
1095   2710 0D          
1095   2711             
1095   2711             
1095   2711~            		endif
1095   2711~            		endif
1095   2711~            		endif
1095   2711             
1095   271E             
1095   271E~            		endif
1095   271E~            		endif
1095   271E             
1096   271E A0 00       		ldy	#00
1097   2720 AD 74 07    		lda	objfrm
1098   2723             		ifmi
1098   2723             
1098   2723 10 FE       
1099   2725 A0 02       			ldy	#02
1100   2727             		endif
1100   2727             
1100   2727             
1100   2727             
1100   2727             
1100   2727             
1100   2727~            		endif
1100   2727~            		endif
1100   2727             
1100   2727~            		endif
1100   2727~            		endif
1100   2727             
1100   2724             
1100   2724 02          
1100   2725             
1100   2725             
1100   2725~            		endif
1100   2725~            		endif
1100   2725~            		endif
1100   2725             
1100   2727             
1100   2727~            		endif
1100   2727~            		endif
1100   2727             
1101   2727 B9 73 27    		lda	objsr-4,Y			;Call relevant buffer
1102   272A BE 74 27    		ldx	objsr-3,Y
1103   272D 20 5D 99    		jsr	vgadd2
1104   2730 A0 03       		ldy	#nmkeys-1			;Draw keys next to map
1105   2732 84 21       		sty	temp9
1106   2734             		begin
1106   2734             
1107   2734 B9 F9 03    			lda	objst+zkeys,Y		;In Rex's Pocket?
1108   2737 C9 10       			cmp	#$10
1109   2739             			ifcs
1109   2739             
1109   2739 90 FE       
1110   273B 20 59 99    				jsr	vgcntr
1111   273E A9 00       				lda	#00
1112   2740 A2 71       				ldx	#$71
1113   2742 20 5D 99    				jsr	vgadd2
1114   2745 A4 21       				ldy	temp9
1115   2747 B9 6F 27    				lda	topkeypos,Y				;X to key position
1116   274A A2 27       				ldx	#$27					;Y to key position
1117   274C A0 00       				ldy	#00
1118   274E 20 7B 99    				jsr	$vgvtr
1119   2751 A4 21       				ldy	temp9
1120   2753 B9 F9 03    				lda	objst+zkeys,Y
1121   2756 29 0F       				and	#$0F
1122   2758 09 E0       				ora	#$E0
1123   275A A2 63       				ldx	#lock7
1124   275C 20 5D 99    				jsr	vgadd2
1125   275F AD CE 58    				lda	glock+2
1126   2762 AE CF 58    				ldx	glock+3
1127   2765 20 5D 99    				jsr	vgadd2
1128   2768             			endif
1128   2768             
1128   2768             
1128   2768             
1128   2768             
1128   2768             
1128   2768~            			endif
1128   2768~            			endif
1128   2768             
1128   2768~            			endif
1128   2768~            			endif
1128   2768             
1128   273A             
1128   273A 2D          
1128   273B             
1128   273B             
1128   273B~            			endif
1128   273B~            			endif
1128   273B~            			endif
1128   273B             
1128   2768             
1128   2768~            			endif
1128   2768~            			endif
1128   2768             
1129   2768 C6 21       			dec	temp9
1130   276A A4 21       			ldy	temp9
1131   276C             		miend
1131   276C             
1131   276C             
1131   276C~            		miend
1131   276C~            		miend
1131   276C~            		miend
1131   276C             
1131   276C 10 C6       
1131   276E             
1131   276E~            		miend
1131   276E~            		miend
1131   276E             
1132   276E 60          		rts	
1133   276F             		
1134   276F CC D2 D8 DE topkeypos	.byte $CC,$D2,$D8,$DE
1135   2773             
1136   2773 87 A1       		jsrl(crsbuf)
1137   2775 87 A5       		jsrl(crsbuf+$800)
1138   2777             	
1139   2777 D7 AD       objsr		jsrl(crman)
1140   2779 DD AD       		jsrl(crreac)
1141   277B E3 AD       		jsrl(crfire)
1142   277D E3 AD       		jsrl(crfire)
1143   277F E3 AD       		jsrl(crfire)
1144   2781 E3 AD       		jsrl(crfire)
1145   2783 E3 AD       		jsrl(crfire)
1146   2785 E3 AD       		jsrl(crfire)
1147   2787 E3 AD       		jsrl(crfire)
1148   2789 E3 AD       		jsrl(crfire)
1149   278B E3 AD       		jsrl(crfire)
1150   278D E3 AD       		jsrl(crfire)
1151   278F E3 AD       		jsrl(crfire)
1152   2791 E3 AD       		jsrl(crfire)
1153   2793 E3 AD       		jsrl(crfire)
1154   2795 E3 AD       		jsrl(crfire)
1155   2797 E3 AD       		jsrl(crfire)
1156   2799 E3 AD       		jsrl(crfire)
1157   279B E9 AD       		jsrl(crlsht)
1158   279D E9 AD       		jsrl(crlsht)
1159   279F E9 AD       		jsrl(crlsht)
1160   27A1 E9 AD       		jsrl(crlsht)
1161   27A3 E9 AD       		jsrl(crlsht)
1162   27A5 E9 AD       		jsrl(crlsht)
1163   27A7 E9 AD       		jsrl(crlsht)
1164   27A9 E9 AD       		jsrl(crlsht)
1165   27AB EF AD       		jsrl(crcann)
1166   27AD EF AD       		jsrl(crcann)
1167   27AF EF AD       		jsrl(crcann)
1168   27B1 EF AD       		jsrl(crcann)
1169   27B3 F5 AD       		jsrl(crrob)
1170   27B5 F5 AD       		jsrl(crrob)
1171   27B7 F5 AD       		jsrl(crrob)
1172   27B9 F5 AD       		jsrl(crrob)
1173   27BB F5 AD       		jsrl(crrob)
1174   27BD F5 AD       		jsrl(crrob)
1175   27BF F5 AD       		jsrl(crrob)
1176   27C1 F5 AD       		jsrl(crrob)
1177   27C3 F5 AD       		jsrl(crrob)
1178   27C5 F5 AD       		jsrl(crrob)
1179   27C7             
1180   27C7             ;*****************************************************
1181   27C7             	.sbttl "Locate in Map"
1182   27C7             ;*****************************************************
1183   27C7             ;* This routine places and object in the map at the  *
1184   27C7             ;* top of the screen.                                *
1185   27C7             ;*                                                   *
1186   27C7             ;* Input:	(X) = object number                      *
1187   27C7             ;*                                                   *
1188   27C7             ;* Output:	vector drawn to map position             *
1189   27C7             ;*                                                   *
1190   27C7             ;* Uses:	temp1, temp2, xcomp                      *
1191   27C7             ;*****************************************************
1192   27C7 86 C9       locmap	stx	perm1				;Save X
1193   27C9 A9 4B       		lda	#$4B				;Assumed centered and scaled
1194   27CB 85 27       		sta	xcomp				;Assume vgbrit is zero
1195   27CD A9 FF       		lda	#-1
1196   27CF 85 28       		sta	xcomp+1			;Position of upper left corner
1197   27D1 A9 D2       		lda	#$D2				;$C0 + fudge of 12
1198   27D3 85 29       		sta	xcomp+2
1199   27D5 A9 01       		lda	#01
1200   27D7 85 2A       		sta	xcomp+3
1201   27D9 A6 C9       		ldx	perm1
1202   27DB BD C9 04    		lda	objxl,X
1203   27DE 85 13       		sta	temp2
1204   27E0 BD 2E 05    		lda	objxh,X
1205   27E3 A0 03       		ldy	#03
1206   27E5             		begin
1206   27E5             
1207   27E5 C9 80       			cmp	#$80
1208   27E7 6A          			ror	A
1209   27E8 66 13       			ror	temp2
1210   27EA 88          			dey
1211   27EB             		miend					;Shift 4 times
1211   27EB             
1211   27EB             
1211   27EB~            		miend					;Shift 4 times
1211   27EB~            		miend					;Shift 4 times
1211   27EB~            		miend					;Shift 4 times
1211   27EB             
1211   27EB 10 F8       
1211   27ED             
1211   27ED~            		miend					;Shift 4 times
1211   27ED~            		miend					;Shift 4 times
1211   27ED             
1212   27ED 85 14       		sta	temp2+1			;High byte
1213   27EF 18          		clc	
1214   27F0 A5 27       		lda	xcomp
1215   27F2 65 13       		adc	temp2
1216   27F4 85 27       		sta	xcomp
1217   27F6 A5 28       		lda	xcomp+1
1218   27F8 65 14       		adc	temp2+1
1219   27FA 85 28       		sta	xcomp+1			;Corrected X position
1220   27FC BD AE 05    		lda	objyl,X
1221   27FF 85 13       		sta	temp2
1222   2801 BD E1 05    		lda	objyh,X
1223   2804 85 14       		sta	temp2+1
1224   2806 A0 03       		ldy	#03				;Divide 4 times
1225   2808             		begin
1225   2808             
1226   2808 C9 80       			cmp	#$80
1227   280A 6A          			ror	A
1228   280B 66 13       			ror	temp2
1229   280D 88          			dey
1230   280E             		miend
1230   280E             
1230   280E             
1230   280E~            		miend
1230   280E~            		miend
1230   280E~            		miend
1230   280E             
1230   280E 10 F8       
1230   2810             
1230   2810~            		miend
1230   2810~            		miend
1230   2810             
1231   2810 85 14       		sta	temp2+1
1232   2812 A5 29       		lda	xcomp+2
1233   2814 18          		clc	
1234   2815 65 13       		adc	temp2
1235   2817 85 29       		sta	xcomp+2
1236   2819 A5 2A       		lda	xcomp+3
1237   281B 65 14       		adc	temp2+1
1238   281D 85 2A       		sta	xcomp+3
1239   281F 20 98 99    		jsr	vgvtr2
1240   2822 A5 C9       		lda	perm1
1241   2824 0A          		asl	A
1242   2825 A8          		tay	
1243   2826 B9 77 27    		lda	objsr,Y
1244   2829 BE 78 27    		ldx	objsr+1,Y
1245   282C 20 5D 99    		jsr	vgadd2			;Add the JSRL to the cross
1246   282F A6 C9       		ldx	perm1
1247   2831 60          		rts	
1248   2832             		
1249   2832             ;************************************************
1250   2832             	.sbttl "Create new cross buffer for radar"
1251   2832             ;************************************************
1252   2832 A5 02       newobuf	lda	vglist+1
1253   2834 48          		pha	
1254   2835 A5 01       		lda	vglist
1255   2837 48          		pha	
1256   2838 AD 74 07    		lda	objfrm			;Set vglist to appropriate buffer
1257   283B 4A          		lsr	A
1258   283C 4A          		lsr	A
1259   283D 4A          		lsr	A
1260   283E 4A          		lsr	A
1261   283F 09 43       		ora	#crsbuf/$100
1262   2841 85 02       		sta	vglist+1
1263   2843 A9 0E       		lda	#crsbuf&$ff
1264   2845 85 01       		sta	vglist
1265   2847 A2 27       		ldx	#zshot-1
1266   2849             		begin
1266   2849             
1267   2849 BD B5 03    			lda	objst,X
1268   284C             			ifne
1268   284C             
1268   284C F0 FE       
1269   284E             				ifpl
1269   284E             
1269   284E 30 FE       
1270   2850 20 C7 27    					jsr	locmap
1271   2853             				endif
1271   2853             
1271   2853             
1271   2853             
1271   2853             
1271   2853             
1271   2853~            				endif
1271   2853~            				endif
1271   2853             
1271   2853~            				endif
1271   2853~            				endif
1271   2853             
1271   284F             
1271   284F 03          
1271   2850             
1271   2850             
1271   2850~            				endif
1271   2850~            				endif
1271   2850~            				endif
1271   2850             
1271   2853             
1271   2853~            				endif
1271   2853~            				endif
1271   2853             
1272   2853             			endif
1272   2853             
1272   2853             
1272   2853             
1272   2853             
1272   2853             
1272   2853~            			endif
1272   2853~            			endif
1272   2853             
1272   2853~            			endif
1272   2853~            			endif
1272   2853             
1272   284D             
1272   284D 05          
1272   284E             
1272   284E             
1272   284E~            			endif
1272   284E~            			endif
1272   284E~            			endif
1272   284E             
1272   2853             
1272   2853~            			endif
1272   2853~            			endif
1272   2853             
1273   2853 CA          			dex
1274   2854 E0 01       			cpx	#01
1275   2856             		eqend
1275   2856             
1275   2856             
1275   2856~            		eqend
1275   2856~            		eqend
1275   2856~            		eqend
1275   2856             
1275   2856 D0 F1       
1275   2858             
1275   2858~            		eqend
1275   2858~            		eqend
1275   2858             
1276   2858 AD 74 07    		lda	objfrm
1277   285B             		ifpl
1277   285B             
1277   285B 30 FE       
1278   285D A2 01       			ldx	#01
1279   285F 20 C7 27    			jsr	locmap
1280   2862             		endif
1280   2862             
1280   2862             
1280   2862             
1280   2862             
1280   2862             
1280   2862~            		endif
1280   2862~            		endif
1280   2862             
1280   2862~            		endif
1280   2862~            		endif
1280   2862             
1280   285C             
1280   285C 05          
1280   285D             
1280   285D             
1280   285D~            		endif
1280   285D~            		endif
1280   285D~            		endif
1280   285D             
1280   2862             
1280   2862~            		endif
1280   2862~            		endif
1280   2862             
1281   2862 A2 C0       		ldx	#$C0
1282   2864 20 5D 99    		jsr	vgadd2			;RTSL at end of buffer
1283   2867 68          		pla	
1284   2868 85 01       		sta	vglist
1285   286A 68          		pla	
1286   286B 85 02       		sta	vglist+1			;Restore pointer to vgram
1287   286D 60          		rts	
1288   286E             		
1289   286E             ;********************************************
1290   286E             	.sbttl "Draw Map from Bit Map"    
1291   286E             ;********************************************
1292   286E             ;* Draws the map on the top of the screen.  *
1293   286E             ;* Creates a bit map using 'build' and then *
1294   286E             ;* uses ones or zeros to create the map.    *
1295   286E             ;*                                          *
1296   286E             ;* Uses: temp1,temp2,temp3,temp4,temp5,temp6*
1297   286E             ;*       temp7,temp8,temp9,A,X,Y            *
1298   286E             ;********************************************
1299   286E 20 53 22    map		jsr	newmaze			;Init next maze, copy maze to RAM - This also copies maze to page 1 RAM too
1300   2871 20 74 21    		jsr	trapal
1301   2874 A9 00       		lda	#mapbuf&$ff
1302   2876 85 01       		sta	vglist
1303   2878 A9 44       		lda	#mapbuf/$100
1304   287A 85 02       		sta	vglist+1
1305   287C A9 02       		lda	#02
1306   287E A0 00       		ldy	#00
1307   2880 8C 97 08    		sty	linen				;Line 0
1308   2883 84 17       		sty	temp3+2
1309   2885 84 18       		sty	temp3+3			;Set future Y component to 0 for mapline
1310   2887 84 1D       		sty	temp7				;Set flag for H
1311   2889 20 72 99    		jsr	vgscal			;Set scale
1312   288C A9 00       		lda	#00				;Set to black, game will change later
1313   288E A2 60       		ldx	#$60
1314   2890 20 5D 99    		jsr	vgadd2			;Set color of map
1315   2893 20 0B 2B    		jsr	getpt2			;Get maze source pointer
1316   2896 A9 60       		lda	#$60
1317   2898 85 27       		sta	xcomp				;Now set up map position
1318   289A A9 FF       		lda	#-1
1319   289C 85 28       		sta	xcomp+1			;XH
1320   289E A9 90       		lda	#$90
1321   28A0 85 29       		sta	xcomp+2			;YL
1322   28A2 A9 01       		lda	#01
1323   28A4 85 2A       		sta	xcomp+3			;YH
1324   28A6             		begin
1324   28A6             
1325   28A6 20 1A 2B    			jsr	clr8
1326   28A9 20 59 99    			jsr	vgcntr			;Center for position
1327   28AC A9 04       			lda	#04
1328   28AE 85 19       			sta	temp5				;Will do 3 before another center
1329   28B0 A0 00       			ldy	#00
1330   28B2 A2 27       			ldx	#xcomp			;Position this line
1331   28B4 20 D6 2A    			jsr	advec2			;Do vgvctr and clear temp3
1332   28B7             			begin
1332   28B7             
1333   28B7 A0 00       				ldy	#00				;Restore Y
1334   28B9 20 9C 29    				jsr	build				;Build first line of this maze
1335   28BC             				ifne					;Either maze of end
1335   28BC             
1335   28BC F0 FE       
1336   28BE 20 17 2A    					jsr	shift				;Look at first bit
1337   28C1             					ifcs
1337   28C1             
1337   28C1 90 FE       
1338   28C3 20 33 2A    						jsr	ones
1339   28C6             					else
1339   28C6             
1339   28C6             
1339   28C6             
1339   28C6             
1339   28C2             
1339   28C2             
1339   28C2 06          
1339   28C6             
1339   28C6             
1339   28C6 4C C6 28    
1339   28C9~            					else
1339   28C9~            					else
1339   28C9~            					else
1339   28C9~            					else
1339   28C9~            					else
1339   28C9             
1339   28C9~            					else
1339   28C9~            					else
1339   28C9             
1339   28C9~            					else
1339   28C9~            					else
1339   28C9             
1340   28C9 20 51 2A    						jsr	zeros
1341   28CC             					endif
1341   28CC             
1341   28CC             
1341   28CC             
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC             
1341   28C7             
1341   28C7 CC 28       
1341   28C9             
1341   28CC             
1341   28CC~            					endif
1341   28CC~            					endif
1341   28CC             
1342   28CC             				endif
1342   28CC             
1342   28CC             
1342   28CC             
1342   28CC             
1342   28CC             
1342   28CC~            				endif
1342   28CC~            				endif
1342   28CC             
1342   28CC~            				endif
1342   28CC~            				endif
1342   28CC             
1342   28BD             
1342   28BD 0E          
1342   28BE             
1342   28BE             
1342   28BE~            				endif
1342   28BE~            				endif
1342   28BE~            				endif
1342   28BE             
1342   28CC             
1342   28CC~            				endif
1342   28CC~            				endif
1342   28CC             
1343   28CC A0 01       				ldy	#01
1344   28CE B1 0F       				lda	(mazpt,Y)			;Look at first stamp, next line
1345   28D0 30 32       				bmi	done3				;Is end of maze
1346   28D2 A5 0F       				lda	mazpt
1347   28D4 18          				clc	
1348   28D5 69 05       				adc	#05				;Pass blank ends
1349   28D7 85 0F       				sta	mazpt
1350   28D9             				ifcs
1350   28D9             
1350   28D9 90 FE       
1351   28DB E6 10       					inc	mazpt+1
1352   28DD             				endif
1352   28DD             
1352   28DD             
1352   28DD             
1352   28DD             
1352   28DD             
1352   28DD~            				endif
1352   28DD~            				endif
1352   28DD             
1352   28DD~            				endif
1352   28DD~            				endif
1352   28DD             
1352   28DA             
1352   28DA 02          
1352   28DB             
1352   28DB             
1352   28DB~            				endif
1352   28DB~            				endif
1352   28DB~            				endif
1352   28DB             
1352   28DD             
1352   28DD~            				endif
1352   28DD~            				endif
1352   28DD             
1353   28DD C6 19       				dec	temp5
1354   28DF 30 14       				bmi	?dmb10			;Done here, reposition
1355   28E1 A9 F0       				lda	#-$10
1356   28E3 85 21       				sta	temp8+2
1357   28E5 A9 FF       				lda	#$FF
1358   28E7 85 22       				sta	temp8+3
1359   28E9 A2 1F       				ldx	#temp8
1360   28EB A0 00       				ldy	#00
1361   28ED 20 D6 2A    				jsr	advec2
1362   28F0 20 1A 2B    				jsr	clr8
1363   28F3             			neend
1363   28F3             
1363   28F3             
1363   28F3~            			neend
1363   28F3~            			neend
1363   28F3~            			neend
1363   28F3             
1363   28F3 F0 C2       
1363   28F5             
1363   28F5~            			neend
1363   28F5~            			neend
1363   28F5             
1364   28F5 A5 29       ?dmb10	 	lda	xcomp+2			;Point next line
1365   28F7 38          			sec	
1366   28F8 E9 50       			sbc	#$50
1367   28FA 85 29       			sta	xcomp+2
1368   28FC             			ifcc
1368   28FC             
1368   28FC B0 FE       
1369   28FE C6 2A       				dec	xcomp+3
1370   2900             			endif
1370   2900             
1370   2900             
1370   2900             
1370   2900             
1370   2900             
1370   2900~            			endif
1370   2900~            			endif
1370   2900             
1370   2900~            			endif
1370   2900~            			endif
1370   2900             
1370   28FD             
1370   28FD 02          
1370   28FE             
1370   28FE             
1370   28FE~            			endif
1370   28FE~            			endif
1370   28FE~            			endif
1370   28FE             
1370   2900             
1370   2900~            			endif
1370   2900~            			endif
1370   2900             
1371   2900 A9 00       			lda	#00
1372   2902             		neend					;Always loop
1372   2902             
1372   2902             
1372   2902~            		neend					;Always loop
1372   2902~            		neend					;Always loop
1372   2902~            		neend					;Always loop
1372   2902             
1372   2902 F0 A2       
1372   2904             
1372   2904~            		neend					;Always loop
1372   2904~            		neend					;Always loop
1372   2904             
1373   2904 A9 00       done3		lda	#00				;Done with H lines... now do V lines
1374   2906 85 15       		sta	temp3
1375   2908 85 16       		sta	temp3+1			;X component must be 0
1376   290A A9 80       		lda	#$80
1377   290C 85 1D       		sta	temp7				;V flag
1378   290E 20 0B 2B    		jsr	getpt2			;Repoint to top of data
1379   2911 A5 0F       		lda	mazpt
1380   2913 85 1B       		sta	temp6
1381   2915 A5 10       		lda	mazpt+1
1382   2917 85 1C       		sta	temp6+1			;Save this for next line
1383   2919 A9 68       		lda	#$68
1384   291B 85 27       		sta	xcomp
1385   291D A9 FF       		lda	#-1
1386   291F 85 28       		sta	xcomp+1
1387   2921 A9 98       		lda	#$98
1388   2923 85 29       		sta	xcomp+2
1389   2925 A9 01       		lda	#01
1390   2927 85 2A       		sta	xcomp+3			;Position for vert lines
1391   2929 20 1A 2B    		jsr	clr8				;A=0 on return
1392   292C 85 19       		sta	temp5				;Force first line to a center position
1393   292E             		begin
1393   292E             
1394   292E A0 00       			ldy	#00
1395   2930 A5 1B       			lda	temp6				;Reload source pointer
1396   2932 85 0F       			sta	mazpt
1397   2934 A5 1C       			lda	temp6+1
1398   2936 85 10       			sta	mazpt+1			;xfer to mazpt
1399   2938 20 D5 29    			jsr	buildv			;Build vert line
1400   293B 20 17 2A    			jsr	shift			
1401   293E             			ifne					;Assume no short little line on top
1401   293E             
1401   293E F0 FE       
1402   2940 08          				php					;Save carrry
1403   2941 C6 19       				dec	temp5				;Found a good one?
1404   2943             				ifmi					;We need to position here
1404   2943             
1404   2943 10 FE       
1405   2945 20 59 99    					jsr	vgcntr
1406   2948 A9 04       					lda	#04
1407   294A 85 19       					sta	temp5				;Reset count
1408   294C A2 27       					ldx	#xcomp			;Position
1409   294E             				else					;else just add return vector
1409   294E             
1409   294E             
1409   294E             
1409   294E             
1409   2944             
1409   2944             
1409   2944 0C          
1409   294E             
1409   294E             
1409   294E 4C 4E 29    
1409   2951~            				else					;else just add return vector
1409   2951~            				else					;else just add return vector
1409   2951~            				else					;else just add return vector
1409   2951~            				else					;else just add return vector
1409   2951~            				else					;else just add return vector
1409   2951             
1409   2951~            				else					;else just add return vector
1409   2951~            				else					;else just add return vector
1409   2951             
1409   2951~            				else					;else just add return vector
1409   2951~            				else					;else just add return vector
1409   2951             
1410   2951 A2 1F       					ldx	#temp8
1411   2953             				endif
1411   2953             
1411   2953             
1411   2953             
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953~            				endif
1411   2953             
1411   294F             
1411   294F 53 29       
1411   2951             
1411   2953             
1411   2953~            				endif
1411   2953~            				endif
1411   2953             
1412   2953 A0 00       				ldy	#00				;Don't show it!!
1413   2955 20 D6 2A    				jsr	advec2			;Position for this
1414   2958 20 1A 2B    				jsr	clr8
1415   295B 28          				plp					;Restore carry
1416   295C             				ifcs
1416   295C             
1416   295C 90 FE       
1417   295E 20 33 2A    					jsr	ones
1418   2961             				else
1418   2961             
1418   2961             
1418   2961             
1418   2961             
1418   295D             
1418   295D             
1418   295D 06          
1418   2961             
1418   2961             
1418   2961 4C 61 29    
1418   2964~            				else
1418   2964~            				else
1418   2964~            				else
1418   2964~            				else
1418   2964~            				else
1418   2964             
1418   2964~            				else
1418   2964~            				else
1418   2964             
1418   2964~            				else
1418   2964~            				else
1418   2964             
1419   2964 20 51 2A    					jsr	zeros
1420   2967             				endif
1420   2967             
1420   2967             
1420   2967             
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967~            				endif
1420   2967             
1420   2962             
1420   2962 67 29       
1420   2964             
1420   2967             
1420   2967~            				endif
1420   2967~            				endif
1420   2967             
1421   2967             			endif
1421   2967             
1421   2967             
1421   2967             
1421   2967             
1421   2967             
1421   2967~            			endif
1421   2967~            			endif
1421   2967             
1421   2967~            			endif
1421   2967~            			endif
1421   2967             
1421   293F             
1421   293F 27          
1421   2940             
1421   2940             
1421   2940~            			endif
1421   2940~            			endif
1421   2940~            			endif
1421   2940             
1421   2967             
1421   2967~            			endif
1421   2967~            			endif
1421   2967             
1422   2967 A5 1F       			lda	temp8
1423   2969 18          			clc	
1424   296A 69 10       			adc	#$10
1425   296C 85 1F       			sta	temp8
1426   296E             			ifcs
1426   296E             
1426   296E 90 FE       
1427   2970 E6 20       				inc	temp8+1
1428   2972             			endif
1428   2972             
1428   2972             
1428   2972             
1428   2972             
1428   2972             
1428   2972~            			endif
1428   2972~            			endif
1428   2972             
1428   2972~            			endif
1428   2972~            			endif
1428   2972             
1428   296F             
1428   296F 02          
1428   2970             
1428   2970             
1428   2970~            			endif
1428   2970~            			endif
1428   2970~            			endif
1428   2970             
1428   2972             
1428   2972~            			endif
1428   2972~            			endif
1428   2972             
1429   2972 A5 27       			lda	xcomp
1430   2974 18          			clc	
1431   2975 69 10       			adc	#$10
1432   2977 85 27       			sta	xcomp
1433   2979             			ifcs
1433   2979             
1433   2979 90 FE       
1434   297B E6 28       				inc	xcomp+1
1435   297D             			endif					;Point to next line
1435   297D             
1435   297D             
1435   297D             
1435   297D             
1435   297D             
1435   297D~            			endif					;Point to next line
1435   297D~            			endif					;Point to next line
1435   297D             
1435   297D~            			endif					;Point to next line
1435   297D~            			endif					;Point to next line
1435   297D             
1435   297A             
1435   297A 02          
1435   297B             
1435   297B             
1435   297B~            			endif					;Point to next line
1435   297B~            			endif					;Point to next line
1435   297B~            			endif					;Point to next line
1435   297B             
1435   297D             
1435   297D~            			endif					;Point to next line
1435   297D~            			endif					;Point to next line
1435   297D             
1436   297D A5 1B       			lda	temp6
1437   297F 18          			clc	
1438   2980 69 01       			adc	#01
1439   2982 85 1B       			sta	temp6
1440   2984             			ifcs
1440   2984             
1440   2984 90 FE       
1441   2986 E6 1C       				inc	temp6+1
1442   2988             			endif
1442   2988             
1442   2988             
1442   2988             
1442   2988             
1442   2988             
1442   2988~            			endif
1442   2988~            			endif
1442   2988             
1442   2988~            			endif
1442   2988~            			endif
1442   2988             
1442   2985             
1442   2985 02          
1442   2986             
1442   2986             
1442   2986~            			endif
1442   2986~            			endif
1442   2986~            			endif
1442   2986             
1442   2988             
1442   2988~            			endif
1442   2988~            			endif
1442   2988             
1443   2988 A0 00       			ldy	#00
1444   298A B1 1B       			lda	(temp6,Y)			;End of maze
1445   298C             		eqend
1445   298C             
1445   298C             
1445   298C~            		eqend
1445   298C~            		eqend
1445   298C~            		eqend
1445   298C             
1445   298C D0 A0       
1445   298E             
1445   298E~            		eqend
1445   298E~            		eqend
1445   298E             
1446   298E A9 4E       		lda	#(retbuf/$100)&$ff
1447   2990 A2 60       		ldx	#retbuf&$ff
1448   2992 20 46 99    		jsr	vgjsrl
1449   2995 A9 4E       		lda	#(timbuf/$100)&$ff
1450   2997 A2 90       		ldx	#timbuf&$ff
1451   2999 4C 35 99    		jmp	vgjmpl
1452   299C             		
1453   299C             ;****************************************************
1454   299C             	.sbttl "Build Line"
1455   299C             ;****************************************************
1456   299C A9 1B       build		lda	#27d				;28 Max Across
1457   299E 85 13       		sta	temp2
1458   29A0 B1 0F       		lda	(mazpt,Y)
1459   29A2             		ifeq
1459   29A2             
1459   29A2 D0 FE       
1460   29A4 60          			rts					;Skip if no line
1461   29A5             		endif
1461   29A5             
1461   29A5             
1461   29A5             
1461   29A5             
1461   29A5             
1461   29A5~            		endif
1461   29A5~            		endif
1461   29A5             
1461   29A5~            		endif
1461   29A5~            		endif
1461   29A5             
1461   29A3             
1461   29A3 01          
1461   29A4             
1461   29A4             
1461   29A4~            		endif
1461   29A4~            		endif
1461   29A4~            		endif
1461   29A4             
1461   29A5             
1461   29A5~            		endif
1461   29A5~            		endif
1461   29A5             
1462   29A5             		ifpl
1462   29A5             
1462   29A5 30 FE       
1463   29A7             			begin
1463   29A7             
1464   29A7 29 0F       				and	#$0F				;Drop any special bits
1465   29A9 AA          				tax
1466   29AA BD 46 2E    				lda	mapbits,X
1467   29AD 20 0A 2A    				jsr	shiftin
1468   29B0 C6 13       				dec	temp2				;Another one down
1469   29B2 C8          				iny
1470   29B3 B1 0F       				lda	(mazpt,Y)
1471   29B5             			eqend
1471   29B5             
1471   29B5             
1471   29B5~            			eqend
1471   29B5~            			eqend
1471   29B5~            			eqend
1471   29B5             
1471   29B5 D0 F0       
1471   29B7             
1471   29B7~            			eqend
1471   29B7~            			eqend
1471   29B7             
1472   29B7 A5 13       			lda	temp2				;Did we do all?
1473   29B9             			ifpl					;Nope
1473   29B9             
1473   29B9 30 FE       
1474   29BB             				begin
1474   29BB             
1475   29BB A9 00       ?bl4					lda	#00
1476   29BD 20 0A 2A    					jsr	shiftin			;0 fill
1477   29C0 C6 13       					dec	temp2
1478   29C2             				miend
1478   29C2             
1478   29C2             
1478   29C2~            				miend
1478   29C2~            				miend
1478   29C2~            				miend
1478   29C2             
1478   29C2 10 F7       
1478   29C4             
1478   29C4~            				miend
1478   29C4~            				miend
1478   29C4             
1479   29C4             			endif
1479   29C4             
1479   29C4             
1479   29C4             
1479   29C4             
1479   29C4             
1479   29C4~            			endif
1479   29C4~            			endif
1479   29C4             
1479   29C4~            			endif
1479   29C4~            			endif
1479   29C4             
1479   29BA             
1479   29BA 09          
1479   29BB             
1479   29BB             
1479   29BB~            			endif
1479   29BB~            			endif
1479   29BB~            			endif
1479   29BB             
1479   29C4             
1479   29C4~            			endif
1479   29C4~            			endif
1479   29C4             
1480   29C4 A9 00       			lda	#00				;Flag for + return
1481   29C6             		endif					;Returns - if skipped
1481   29C6             
1481   29C6             
1481   29C6             
1481   29C6             
1481   29C6             
1481   29C6~            		endif					;Returns - if skipped
1481   29C6~            		endif					;Returns - if skipped
1481   29C6             
1481   29C6~            		endif					;Returns - if skipped
1481   29C6~            		endif					;Returns - if skipped
1481   29C6             
1481   29A6             
1481   29A6 1F          
1481   29A7             
1481   29A7             
1481   29A7~            		endif					;Returns - if skipped
1481   29A7~            		endif					;Returns - if skipped
1481   29A7~            		endif					;Returns - if skipped
1481   29A7             
1481   29C6             
1481   29C6~            		endif					;Returns - if skipped
1481   29C6~            		endif					;Returns - if skipped
1481   29C6             
1482   29C6             		ifpl
1482   29C6             
1482   29C6 30 FE       
1483   29C8 98          			tya
1484   29C9 18          			clc
1485   29CA 65 0F       			adc	mazpt				;Update source pointer
1486   29CC 85 0F       			sta	mazpt
1487   29CE             			ifcs
1487   29CE             
1487   29CE 90 FE       
1488   29D0 E6 10       				inc	mazpt+1
1489   29D2             			endif
1489   29D2             
1489   29D2             
1489   29D2             
1489   29D2             
1489   29D2             
1489   29D2~            			endif
1489   29D2~            			endif
1489   29D2             
1489   29D2~            			endif
1489   29D2~            			endif
1489   29D2             
1489   29CF             
1489   29CF 02          
1489   29D0             
1489   29D0             
1489   29D0~            			endif
1489   29D0~            			endif
1489   29D0~            			endif
1489   29D0             
1489   29D2             
1489   29D2~            			endif
1489   29D2~            			endif
1489   29D2             
1490   29D2 A9 01       			lda	#01				;Set draw flag
1491   29D4             		endif
1491   29D4             
1491   29D4             
1491   29D4             
1491   29D4             
1491   29D4             
1491   29D4~            		endif
1491   29D4~            		endif
1491   29D4             
1491   29D4~            		endif
1491   29D4~            		endif
1491   29D4             
1491   29C7             
1491   29C7 0C          
1491   29C8             
1491   29C8             
1491   29C8~            		endif
1491   29C8~            		endif
1491   29C8~            		endif
1491   29C8             
1491   29D4             
1491   29D4~            		endif
1491   29D4~            		endif
1491   29D4             
1492   29D4 60          		rts
1493   29D5             		
1494   29D5             ;******************************************
1495   29D5             	.sbttl "Build V line" 
1496   29D5             ;******************************************
1497   29D5 AE 0B 03    buildv	ldx	maznum
1498   29D8 BD 5E 2E    		lda	mazdep,X			;Count of lines
1499   29DB 85 13       		sta	temp2
1500   29DD A0 00       		ldy	#00
1501   29DF B1 0F       		lda	(mazpt,Y)
1502   29E1             		begin
1502   29E1             
1503   29E1 29 0F       			and	#$0F				;Drop special bits
1504   29E3 AA          			tax	
1505   29E4 BD 4E 2E    			lda	mapvbt,X			;Bit pattern vert
1506   29E7 20 0A 2A    			jsr	shiftin
1507   29EA AE 0B 03    			ldx	maznum
1508   29ED A5 0F       			lda	mazpt
1509   29EF 18          			clc	
1510   29F0 7D 62 2E    			adc	mazlen,X			;Add length to next line
1511   29F3 85 0F       			sta	mazpt
1512   29F5             			ifcs
1512   29F5             
1512   29F5 90 FE       
1513   29F7 E6 10       				inc	mazpt+1
1514   29F9             			endif
1514   29F9             
1514   29F9             
1514   29F9             
1514   29F9             
1514   29F9             
1514   29F9~            			endif
1514   29F9~            			endif
1514   29F9             
1514   29F9~            			endif
1514   29F9~            			endif
1514   29F9             
1514   29F6             
1514   29F6 02          
1514   29F7             
1514   29F7             
1514   29F7~            			endif
1514   29F7~            			endif
1514   29F7~            			endif
1514   29F7             
1514   29F9             
1514   29F9~            			endif
1514   29F9~            			endif
1514   29F9             
1515   29F9 B1 0F       			lda	(mazpt,Y)			;Next stamp
1516   29FB C6 13       			dec	temp2
1517   29FD             		eqend					;All lines
1517   29FD             
1517   29FD             
1517   29FD~            		eqend					;All lines
1517   29FD~            		eqend					;All lines
1517   29FD~            		eqend					;All lines
1517   29FD             
1517   29FD D0 E2       
1517   29FF             
1517   29FF~            		eqend					;All lines
1517   29FF~            		eqend					;All lines
1517   29FF             
1518   29FF A9 1B       		lda	#27d				;Force shift left
1519   2A01 38          		sec	
1520   2A02 FD 5E 2E    		sbc	mazdep,X
1521   2A05 85 13       		sta	temp2
1522   2A07 10 B2       		bpl	?bl4
1523   2A09 60          		rts	
1524   2A0A             		
1525   2A0A             ;*****************************************
1526   2A0A             	.sbttl "Shift in to Map"
1527   2A0A             ;*****************************************
1528   2A0A             ;* A = Shift pattern                     *
1529   2A0A             ;*****************************************
1530   2A0A A2 01       shiftin	ldx	#01				;Shift in 2 bits
1531   2A0C             		begin
1531   2A0C             
1532   2A0C 0A          			asl	A
1533   2A0D 2E 82 08    			rol	map6
1534   2A10 20 25 2B    			jsr	rol50
1535   2A13 CA          			dex
1536   2A14             		miend
1536   2A14             
1536   2A14             
1536   2A14~            		miend
1536   2A14~            		miend
1536   2A14~            		miend
1536   2A14             
1536   2A14 10 F6       
1536   2A16             
1536   2A16~            		miend
1536   2A16~            		miend
1536   2A16             
1537   2A16 60          		rts	
1538   2A17             		
1539   2A17             ;*****************************************
1540   2A17             	.sbttl "Shift 'Bit Map'"          
1541   2A17             ;*****************************************
1542   2A17 0E 82 08    shift		asl	map6				;Next shift
1543   2A1A 20 25 2B    		jsr	rol50
1544   2A1D AD 7C 08    		lda	map0
1545   2A20 0D 7D 08    		ora	map1
1546   2A23 0D 7E 08    		ora	map2
1547   2A26 0D 7F 08    		ora	map3
1548   2A29 0D 80 08    		ora	map4
1549   2A2C 0D 81 08    		ora	map5
1550   2A2F 0D 82 08    		ora	map6
1551   2A32 60          		rts	
1552   2A33             		
1553   2A33             ;*****************************************
1554   2A33             	.sbttl "Ones Routine" 
1555   2A33             ;*****************************************
1556   2A33             ones		begin				;Entered with a known 1
1556   2A33             
1557   2A33 20 ED 2A    			jsr	add8			;Add 8 to temp3
1558   2A36 20 17 2A    			jsr	shift
1559   2A39             			ifeq
1559   2A39             
1559   2A39 D0 FE       
1560   2A3B             				ifcs				;Was 1 on last carry out
1560   2A3B             
1560   2A3B 90 FE       
1561   2A3D 20 ED 2A    					jsr	add8
1562   2A40             				endif
1562   2A40             
1562   2A40             
1562   2A40             
1562   2A40             
1562   2A40             
1562   2A40~            				endif
1562   2A40~            				endif
1562   2A40             
1562   2A40~            				endif
1562   2A40~            				endif
1562   2A40             
1562   2A3C             
1562   2A3C 03          
1562   2A3D             
1562   2A3D             
1562   2A3D~            				endif
1562   2A3D~            				endif
1562   2A3D~            				endif
1562   2A3D             
1562   2A40             
1562   2A40~            				endif
1562   2A40~            				endif
1562   2A40             
1563   2A40 A0 C0       				ldy	#$C0
1564   2A42 4C 75 2A    				jmp	advec
1565   2A45             			endif
1565   2A45             
1565   2A45             
1565   2A45             
1565   2A45             
1565   2A45             
1565   2A45~            			endif
1565   2A45~            			endif
1565   2A45             
1565   2A45~            			endif
1565   2A45~            			endif
1565   2A45             
1565   2A3A             
1565   2A3A 0A          
1565   2A3B             
1565   2A3B             
1565   2A3B~            			endif
1565   2A3B~            			endif
1565   2A3B~            			endif
1565   2A3B             
1565   2A45             
1565   2A45~            			endif
1565   2A45~            			endif
1565   2A45             
1566   2A45             			ifcc				;We changed
1566   2A45             
1566   2A45 B0 FE       
1567   2A47 A0 C0       				ldy	#$C0			;So output this vector
1568   2A49 20 75 2A    				jsr	advec
1569   2A4C 18          				clc				;And do another routine
1570   2A4D 90 02       				bcc	zeros			;Change routines
1571   2A4F             			endif
1571   2A4F             
1571   2A4F             
1571   2A4F             
1571   2A4F             
1571   2A4F             
1571   2A4F~            			endif
1571   2A4F~            			endif
1571   2A4F             
1571   2A4F~            			endif
1571   2A4F~            			endif
1571   2A4F             
1571   2A46             
1571   2A46 08          
1571   2A47             
1571   2A47             
1571   2A47~            			endif
1571   2A47~            			endif
1571   2A47~            			endif
1571   2A47             
1571   2A4F             
1571   2A4F~            			endif
1571   2A4F~            			endif
1571   2A4F             
1572   2A4F             		ccend
1572   2A4F             
1572   2A4F             
1572   2A4F~            		ccend
1572   2A4F~            		ccend
1572   2A4F~            		ccend
1572   2A4F             
1572   2A4F B0 E2       
1572   2A51             
1572   2A51~            		ccend
1572   2A51~            		ccend
1572   2A51             
1573   2A51             ;*****************************************
1574   2A51             	.sbttl "Zeros Routine"
1575   2A51             ;*****************************************
1576   2A51             zeros		begin
1576   2A51             
1577   2A51 20 ED 2A    			jsr	add8
1578   2A54 20 17 2A    			jsr	shift			;Next bit
1579   2A57             			ifeq
1579   2A57             
1579   2A57 D0 FE       
1580   2A59 B0 07       				bcs	?zer8			;Might have been one left
1581   2A5B A0 00       				ldy	#00
1582   2A5D 4C 75 2A    				jmp	advec
1583   2A60             			endif
1583   2A60             
1583   2A60             
1583   2A60             
1583   2A60             
1583   2A60             
1583   2A60~            			endif
1583   2A60~            			endif
1583   2A60             
1583   2A60~            			endif
1583   2A60~            			endif
1583   2A60             
1583   2A58             
1583   2A58 07          
1583   2A59             
1583   2A59             
1583   2A59~            			endif
1583   2A59~            			endif
1583   2A59~            			endif
1583   2A59             
1583   2A60             
1583   2A60~            			endif
1583   2A60~            			endif
1583   2A60             
1584   2A60             			ifcs				;A change occured
1584   2A60             
1584   2A60 90 FE       
1585   2A62 A0 00       ?zer8				ldy	#00
1586   2A64 20 75 2A    				jsr	advec
1587   2A67 38          				sec
1588   2A68 B0 C9       				bcs	ones			;Go do ones routine
1589   2A6A             			endif
1589   2A6A             
1589   2A6A             
1589   2A6A             
1589   2A6A             
1589   2A6A             
1589   2A6A~            			endif
1589   2A6A~            			endif
1589   2A6A             
1589   2A6A~            			endif
1589   2A6A~            			endif
1589   2A6A             
1589   2A61             
1589   2A61 08          
1589   2A62             
1589   2A62             
1589   2A62~            			endif
1589   2A62~            			endif
1589   2A62~            			endif
1589   2A62             
1589   2A6A             
1589   2A6A~            			endif
1589   2A6A~            			endif
1589   2A6A             
1590   2A6A             		csend				;Always loop!!
1590   2A6A             
1590   2A6A             
1590   2A6A~            		csend				;Always loop!!
1590   2A6A~            		csend				;Always loop!!
1590   2A6A~            		csend				;Always loop!!
1590   2A6A             
1590   2A6A 90 E5       
1590   2A6C             
1590   2A6C~            		csend				;Always loop!!
1590   2A6C~            		csend				;Always loop!!
1590   2A6C             
1591   2A6C             
1592   2A6C             ;*****************************************
1593   2A6C             	.sbttl "Bump Maze Pointer"
1594   2A6C             ;*****************************************
1595   2A6C             ;* Bump indirect pointer for maze draw   *
1596   2A6C             ;* routines and leave Y=0 for indirect   *
1597   2A6C             ;* use.                                  *
1598   2A6C             ;*****************************************
1599   2A6C E6 0F       incmaz	inc	mazpt
1600   2A6E             		ifeq
1600   2A6E             
1600   2A6E D0 FE       
1601   2A70 E6 10       			inc	mazpt+1
1602   2A72             		endif
1602   2A72             
1602   2A72             
1602   2A72             
1602   2A72             
1602   2A72             
1602   2A72~            		endif
1602   2A72~            		endif
1602   2A72             
1602   2A72~            		endif
1602   2A72~            		endif
1602   2A72             
1602   2A6F             
1602   2A6F 02          
1602   2A70             
1602   2A70             
1602   2A70~            		endif
1602   2A70~            		endif
1602   2A70~            		endif
1602   2A70             
1602   2A72             
1602   2A72~            		endif
1602   2A72~            		endif
1602   2A72             
1603   2A72 A0 00       		ldy	#00				;Always 0
1604   2A74 60          		rts
1605   2A75             		
1606   2A75             ;*****************************************
1607   2A75             	.sbttl "Add vector to List"  
1608   2A75             ;*****************************************
1609   2A75             ;* Adds a vector to the vglist. Length   *
1610   2A75             ;* of vector is in temp3(4). If the      *
1611   2A75             ;* vector is under length of +/-32d then *
1612   2A75             ;* a short vector will be generated.     *
1613   2A75             ;*****************************************
1614   2A75             ;*** (Y) = 80 to draw, 0 Not to draw   ***
1615   2A75             ;*****************************************
1616   2A75 84 00       advec		sty	vgbrit
1617   2A77 A5 1F       		lda	temp8
1618   2A79 38          		sec	
1619   2A7A E5 15       		sbc	temp3				;Running total for return
1620   2A7C 85 1F       		sta	temp8				;Subtract to create return vector
1621   2A7E A5 20       		lda	temp8+1
1622   2A80 E5 16       		sbc	temp3+1
1623   2A82 85 20       		sta	temp8+1
1624   2A84 38          		sec	
1625   2A85 A5 21       		lda	temp8+2
1626   2A87 E5 17       		sbc	temp3+2
1627   2A89 85 21       		sta	temp8+2
1628   2A8B A5 22       		lda	temp8+3
1629   2A8D E5 18       		sbc	temp3+3
1630   2A8F 85 22       		sta	temp8+3			;Total updated for return later
1631   2A91 A5 15       		lda	temp3
1632   2A93 85 11       		sta	temp1
1633   2A95 A5 16       		lda	temp3+1
1634   2A97 85 12       		sta	temp1+1
1635   2A99             		ifmi					;Need absolute value
1635   2A99             
1635   2A99 10 FE       
1636   2A9B 20 56 90    			jsr	dblneg			;Get positive number
1637   2A9E             		endif
1637   2A9E             
1637   2A9E             
1637   2A9E             
1637   2A9E             
1637   2A9E             
1637   2A9E~            		endif
1637   2A9E~            		endif
1637   2A9E             
1637   2A9E~            		endif
1637   2A9E~            		endif
1637   2A9E             
1637   2A9A             
1637   2A9A 03          
1637   2A9B             
1637   2A9B             
1637   2A9B~            		endif
1637   2A9B~            		endif
1637   2A9B~            		endif
1637   2A9B             
1637   2A9E             
1637   2A9E~            		endif
1637   2A9E~            		endif
1637   2A9E             
1638   2A9E             		ifeq					;Testing temp1+1
1638   2A9E             
1638   2A9E D0 FE       
1639   2AA0 A5 11       			lda	temp1
1640   2AA2 C9 20       			cmp	#32d				;Is X less than 32d?
1641   2AA4             			ifcc					;yep!
1641   2AA4             
1641   2AA4 B0 FE       
1642   2AA6 A5 17       				lda	temp3+2
1643   2AA8 85 11       				sta	temp1
1644   2AAA A5 18       				lda	temp3+3
1645   2AAC 85 12       				sta	temp1+1
1646   2AAE             				ifmi				;Now check Y (absolute value)
1646   2AAE             
1646   2AAE 10 FE       
1647   2AB0 20 56 90    					jsr	dblneg
1648   2AB3             				endif
1648   2AB3             
1648   2AB3             
1648   2AB3             
1648   2AB3             
1648   2AB3             
1648   2AB3~            				endif
1648   2AB3~            				endif
1648   2AB3             
1648   2AB3~            				endif
1648   2AB3~            				endif
1648   2AB3             
1648   2AAF             
1648   2AAF 03          
1648   2AB0             
1648   2AB0             
1648   2AB0~            				endif
1648   2AB0~            				endif
1648   2AB0~            				endif
1648   2AB0             
1648   2AB3             
1648   2AB3~            				endif
1648   2AB3~            				endif
1648   2AB3             
1649   2AB3             				ifeq
1649   2AB3             
1649   2AB3 D0 FE       
1650   2AB5 A5 11       					lda	temp1
1651   2AB7 C9 20       					cmp	#32d
1652   2AB9             					ifcc				;Both X and Y less than 32d
1652   2AB9             
1652   2AB9 B0 FE       
1653   2ABB A5 17       						lda	temp3+2		;Output vector (get del Y)
1654   2ABD C9 80       						cmp	#$80
1655   2ABF 6A          						ror	A			;/2
1656   2AC0 29 1F       						and	#$1F
1657   2AC2 09 40       						ora	#$40			;Add instruction
1658   2AC4 AA          						tax
1659   2AC5 A5 15       						lda	temp3			;delta X
1660   2AC7 C9 80       						cmp	#$80
1661   2AC9 6A          						ror	A
1662   2ACA 29 1F       						and	#$1F
1663   2ACC 05 00       						ora	vgbrit		;Add brightness
1664   2ACE 20 5D 99    						jsr	vgadd2
1665   2AD1 4C DE 2A    						jmp	?av7
1666   2AD4             					endif
1666   2AD4             
1666   2AD4             
1666   2AD4             
1666   2AD4             
1666   2AD4             
1666   2AD4~            					endif
1666   2AD4~            					endif
1666   2AD4             
1666   2AD4~            					endif
1666   2AD4~            					endif
1666   2AD4             
1666   2ABA             
1666   2ABA 19          
1666   2ABB             
1666   2ABB             
1666   2ABB~            					endif
1666   2ABB~            					endif
1666   2ABB~            					endif
1666   2ABB             
1666   2AD4             
1666   2AD4~            					endif
1666   2AD4~            					endif
1666   2AD4             
1667   2AD4             				endif
1667   2AD4             
1667   2AD4             
1667   2AD4             
1667   2AD4             
1667   2AD4             
1667   2AD4~            				endif
1667   2AD4~            				endif
1667   2AD4             
1667   2AD4~            				endif
1667   2AD4~            				endif
1667   2AD4             
1667   2AB4             
1667   2AB4 1F          
1667   2AB5             
1667   2AB5             
1667   2AB5~            				endif
1667   2AB5~            				endif
1667   2AB5~            				endif
1667   2AB5             
1667   2AD4             
1667   2AD4~            				endif
1667   2AD4~            				endif
1667   2AD4             
1668   2AD4             			endif
1668   2AD4             
1668   2AD4             
1668   2AD4             
1668   2AD4             
1668   2AD4             
1668   2AD4~            			endif
1668   2AD4~            			endif
1668   2AD4             
1668   2AD4~            			endif
1668   2AD4~            			endif
1668   2AD4             
1668   2AA5             
1668   2AA5 2E          
1668   2AA6             
1668   2AA6             
1668   2AA6~            			endif
1668   2AA6~            			endif
1668   2AA6~            			endif
1668   2AA6             
1668   2AD4             
1668   2AD4~            			endif
1668   2AD4~            			endif
1668   2AD4             
1669   2AD4             		endif
1669   2AD4             
1669   2AD4             
1669   2AD4             
1669   2AD4             
1669   2AD4             
1669   2AD4~            		endif
1669   2AD4~            		endif
1669   2AD4             
1669   2AD4~            		endif
1669   2AD4~            		endif
1669   2AD4             
1669   2A9F             
1669   2A9F 34          
1669   2AA0             
1669   2AA0             
1669   2AA0~            		endif
1669   2AA0~            		endif
1669   2AA0~            		endif
1669   2AA0             
1669   2AD4             
1669   2AD4~            		endif
1669   2AD4~            		endif
1669   2AD4             
1670   2AD4 A2 15       		ldx	#temp3			;Vector data location
1671   2AD6 84 00       advec2	sty	vgbrit
1672   2AD8 8D 80 16    		sta	watchdog			;Kick the doggie!!
1673   2ADB 20 9A 99    		jsr	vgvctr			;Add the vector
1674   2ADE A9 00       ?av7		lda	#00
1675   2AE0 A2 00       		ldx	#00
1676   2AE2 24 1D       		bit	temp7
1677   2AE4             		ifmi
1677   2AE4             
1677   2AE4 10 FE       
1678   2AE6 A2 02       			ldx	#02
1679   2AE8             		endif
1679   2AE8             
1679   2AE8             
1679   2AE8             
1679   2AE8             
1679   2AE8             
1679   2AE8~            		endif
1679   2AE8~            		endif
1679   2AE8             
1679   2AE8~            		endif
1679   2AE8~            		endif
1679   2AE8             
1679   2AE5             
1679   2AE5 02          
1679   2AE6             
1679   2AE6             
1679   2AE6~            		endif
1679   2AE6~            		endif
1679   2AE6~            		endif
1679   2AE6             
1679   2AE8             
1679   2AE8~            		endif
1679   2AE8~            		endif
1679   2AE8             
1680   2AE8 95 15       		sta	temp3,X
1681   2AEA 95 16       		sta	temp3+1,X			;Clear for next vector
1682   2AEC 60          		rts
1683   2AED             		
1684   2AED             ;**********************************************
1685   2AED             	.sbttl "Add 8 to temp3(2)"             
1686   2AED             ;**********************************************
1687   2AED 24 1D       add8		bit	temp7				;V?
1688   2AEF             		ifpl					;Doing H
1688   2AEF             
1688   2AEF 30 FE       
1689   2AF1 A5 15       			lda	temp3				;Add half segment
1690   2AF3 18          			clc
1691   2AF4 69 08       			adc	#08
1692   2AF6 85 15       			sta	temp3
1693   2AF8             			ifcs
1693   2AF8             
1693   2AF8 90 FE       
1694   2AFA E6 16       				inc	temp3+1
1695   2AFC             			endif
1695   2AFC             
1695   2AFC             
1695   2AFC             
1695   2AFC             
1695   2AFC             
1695   2AFC~            			endif
1695   2AFC~            			endif
1695   2AFC             
1695   2AFC~            			endif
1695   2AFC~            			endif
1695   2AFC             
1695   2AF9             
1695   2AF9 02          
1695   2AFA             
1695   2AFA             
1695   2AFA~            			endif
1695   2AFA~            			endif
1695   2AFA~            			endif
1695   2AFA             
1695   2AFC             
1695   2AFC~            			endif
1695   2AFC~            			endif
1695   2AFC             
1696   2AFC             		else					;Do V line
1696   2AFC             
1696   2AFC             
1696   2AFC             
1696   2AFC             
1696   2AF0             
1696   2AF0             
1696   2AF0 0E          
1696   2AFC             
1696   2AFC             
1696   2AFC 4C FC 2A    
1696   2AFF~            		else					;Do V line
1696   2AFF~            		else					;Do V line
1696   2AFF~            		else					;Do V line
1696   2AFF~            		else					;Do V line
1696   2AFF~            		else					;Do V line
1696   2AFF             
1696   2AFF~            		else					;Do V line
1696   2AFF~            		else					;Do V line
1696   2AFF             
1696   2AFF~            		else					;Do V line
1696   2AFF~            		else					;Do V line
1696   2AFF             
1697   2AFF A5 17       			lda	temp3+2
1698   2B01 38          			sec
1699   2B02 E9 08       			sbc	#08
1700   2B04 85 17       			sta	temp3+2
1701   2B06             			ifcc
1701   2B06             
1701   2B06 B0 FE       
1702   2B08 C6 18       				dec	temp3+3
1703   2B0A             			endif
1703   2B0A             
1703   2B0A             
1703   2B0A             
1703   2B0A             
1703   2B0A             
1703   2B0A~            			endif
1703   2B0A~            			endif
1703   2B0A             
1703   2B0A~            			endif
1703   2B0A~            			endif
1703   2B0A             
1703   2B07             
1703   2B07 02          
1703   2B08             
1703   2B08             
1703   2B08~            			endif
1703   2B08~            			endif
1703   2B08~            			endif
1703   2B08             
1703   2B0A             
1703   2B0A~            			endif
1703   2B0A~            			endif
1703   2B0A             
1704   2B0A             		endif
1704   2B0A             
1704   2B0A             
1704   2B0A             
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A             
1704   2AFD             
1704   2AFD 0A 2B       
1704   2AFF             
1704   2B0A             
1704   2B0A~            		endif
1704   2B0A~            		endif
1704   2B0A             
1705   2B0A 60          		rts
1706   2B0B             		
1707   2B0B             ;***********************************************
1708   2B0B             	.sbttl "Get Map Data Pointer"
1709   2B0B             ;***********************************************
1710   2B0B 20 42 A8    getpt2	jsr	getptr			;Points to start of data
1711   2B0E A5 0F       		lda	mazpt				;Now point past top blank lines
1712   2B10 18          		clc	
1713   2B11 69 16       		adc	#m0u1-maz0+4		;Should point to first real data
1714   2B13 85 0F       		sta	mazpt
1715   2B15             		ifcs
1715   2B15             
1715   2B15 90 FE       
1716   2B17 E6 10       			inc	mazpt+1
1717   2B19             		endif
1717   2B19             
1717   2B19             
1717   2B19             
1717   2B19             
1717   2B19             
1717   2B19~            		endif
1717   2B19~            		endif
1717   2B19             
1717   2B19~            		endif
1717   2B19~            		endif
1717   2B19             
1717   2B16             
1717   2B16 02          
1717   2B17             
1717   2B17             
1717   2B17~            		endif
1717   2B17~            		endif
1717   2B17~            		endif
1717   2B17             
1717   2B19             
1717   2B19~            		endif
1717   2B19~            		endif
1717   2B19             
1718   2B19 60          		rts
1719   2B1A             		
1720   2B1A             ;***********************************************
1721   2B1A             	.sbttl "Clear temp8(4)"             
1722   2B1A             ;***********************************************	
1723   2B1A A9 00       clr8		lda	#00
1724   2B1C 85 1F       		sta	temp8
1725   2B1E 85 20       		sta	temp8+1
1726   2B20 85 21       		sta	temp8+2
1727   2B22 85 22       		sta	temp8+3			;Clear return vector
1728   2B24 60          		rts
1729   2B25             		
1730   2B25             ;***********************************************
1731   2B25             	.sbttl "ROL50"
1732   2B25             ;***********************************************
1733   2B25 2E 81 08    rol50		rol	map5
1734   2B28 2E 80 08    		rol	map4
1735   2B2B 2E 7F 08    		rol	map3
1736   2B2E 2E 7E 08    		rol	map2
1737   2B31 2E 7D 08    		rol	map1
1738   2B34 2E 7C 08    		rol	map0
1739   2B37 60          		rts	
1740   2B38             
1741   2B38             
1742   2B38             ;***********************************************
1743   2B38             ;      MAZE DATA BEGINS HERE!!!
1744   2B38             ;***********************************************
1745   2B38             	.sbttl "Maze 0 Data"
1746   2B38             ;***********************************************
1747   2B38             
1748   2B38             maz0		
1749   2B38 47 47 00    m0ua		.byte $47,$47,$00
1750   2B3B 47 47 00    m0ub		.byte $47,$47,$00
1751   2B3E 47 47 00    m0uc		.byte $47,$47,$00
1752   2B41 47 47 00    m0ud		.byte $47,$47,$00
1753   2B44 47 47 00    m0ue		.byte $47,$47,$00
1754   2B47 47 47 00    m0uf		.byte $47,$47,$00
1755   2B4A             
1756   2B4A             xxx0	=	1
1757   2B4A             
1758   2B4A 47 47 47 47 m0u1		.byte $47,$47,$47,$47
1759   2B4E 474742454141		.byte $47,$47,$42,$45,$41,$41,$41,$41
1759   2B54 4141
1760   2B56 42 47 47 00 		.byte $42,$47,$47,$00
1761   2B5A             		
1762   2B5A             xxx0 	.set  xxx0+1
1763   2B5A             
1764   2B5A 47 47 47 47 m0u2		.byte $47,$47,$47,$47
1765   2B5E 474543040701		.byte $47,$45,$43,$04,$07,$01,$01,$02
1765   2B64 0102
1766   2B66 44 42 47 00 		.byte $44,$42,$47,$00
1767   2B6A             		
1768   2B6A             xxx0 	.set  xxx0+1
1769   2B6A             
1770   2B6A 47 47 47 47 m0u3		.byte $47,$47,$47,$47
1771   2B6E 474605010107		.byte $47,$46,$05,$01,$01,$07,$02,$06
1771   2B74 0206
1772   2B76 07 46 47 00 		.byte $07,$46,$47,$00
1773   2B7A             		
1774   2B7A             xxx0 	.set xxx0+1
1775   2B7A             
1776   2B7A 47 47 47 47 m0u4		.byte $47,$47,$47,$47
1777   2B7E 454306070101		.byte $45,$43,$06,$07,$01,$01,$03,$07
1777   2B84 0307
1778   2B86 06 44 42 00 		.byte $06,$44,$42,$00
1779   2B8A             		
1780   2B8A             xxx0 	.set xxx0+1
1781   2B8A             
1782   2B8A 47 47 47 47 m0u5		.byte $47,$47,$47,$47
1783   2B8E 040204010207		.byte $04,$02,$04,$01,$02,$07,$01,$01
1783   2B94 0101
1784   2B96 03 05 03 00 		.byte $03,$05,$03,$00
1785   2B9A             		
1786   2B9A             xxx0 	.set xxx0+1
1787   2B9A             
1788   2B9A 47 47 47 47 m0u6		.byte $47,$47,$47,$47
1789   2B9E 470401020401		.byte $47,$04,$01,$02,$04,$01,$07,$05
1789   2BA4 0705
1790   2BA6 01 03 47 00 		.byte $01,$03,$47,$00
1791   2BAA             		
1792   2BAA             xxx0 	.set xxx0+1
1793   2BAA             
1794   2BAA 47 47 47 47 mou7		.byte $47,$47,$47,$47
1795   2BAE 474747040101		.byte $47,$47,$47,$04,$01,$01,$01,$03
1795   2BB4 0103
1796   2BB6 47 47 07 00 		.byte $47,$47,$07,$00
1797   2BBA             		
1798   2BBA 80          m0u8		.byte $80
1799   2BBB             
1800   2BBB 28          m0cld		.byte $28		;Offset into RAM change place
1801   2BBC 41 03       		.byte $41,$03	;Closed Data
1802   2BBE 43 04       		.byte $43,$04	;Open Data
1803   2BC0             		
1804   2BC0             ;***********************************************
1805   2BC0             	.sbttl "Maze 1 Data"
1806   2BC0             ;***********************************************
1807   2BC0             maz1
1808   2BC0 47 47 00    m1ua		.byte $47,$47,$00
1809   2BC3 47 47 00    m1ub		.byte $47,$47,$00
1810   2BC6 47 47 00    m1uc		.byte $47,$47,$00
1811   2BC9 47 47 00    m1ud		.byte $47,$47,$00
1812   2BCC 47 47 00    m1ue		.byte $47,$47,$00
1813   2BCF 47 47 00    m1uf		.byte $47,$47,$00
1814   2BD2             
1815   2BD2             xxx1	=	1
1816   2BD2             
1817   2BD2 47 47 47 47 m1u1		.byte $47,$47,$47,$47
1818   2BD6 474747454245		.byte $47,$47,$47,$45,$42,$45,$41,$41
1818   2BDC 4141
1819   2BDE 414141424747		.byte $41,$41,$41,$42,$47,$47,$47,$47
1819   2BE4 4747
1820   2BE6 00          		.byte $00
1821   2BE7             		
1822   2BE7             xxx1	.set	xxx1+1
1823   2BE7             
1824   2BE7 47 47 47 47 m1u2		.byte $47,$47,$47,$47
1825   2BEB 474745434646		.byte $47,$47,$45,$43,$46,$46,$05,$01
1825   2BF1 0501
1826   2BF3 010107444142		.byte $01,$01,$07,$44,$41,$42,$47,$47
1826   2BF9 4747
1827   2BFB 00          		.byte $00
1828   2BFC             		
1829   2BFC             xxx1	.set	xxx1+1		
1830   2BFC             		
1831   2BFC 47 47 47 47 m1u3		.byte $47,$47,$47,$47
1832   2C00 454143014646		.byte $45,$41,$43,$01,$46,$46,$06,$05
1832   2C06 0605
1833   2C08 070101010244		.byte $07,$01,$01,$01,$02,$44,$42,$45
1833   2C0E 4245
1834   2C10 00          		.byte $00
1835   2C11             		
1836   2C11             xxx1	.set	xxx1+1
1837   2C11             
1838   2C11 47 47 47 47 m1u4		.byte $47,$47,$47,$47
1839   2C15 460701024646		.byte $46,$07,$01,$02,$46,$46,$06,$04
1839   2C1B 0604
1840   2C1D 010101020402		.byte $01,$01,$01,$02,$04,$02,$06,$46
1840   2C23 0646
1841   2C25 00          		.byte $00
1842   2C26             		
1843   2C26             xxx1	.set	xxx1+1
1844   2C26             
1845   2C26 47 47 47 47 m1u5		.byte $47,$47,$47,$47
1846   2C2A 460502064646		.byte $46,$05,$02,$06,$46,$46,$04,$01
1846   2C30 0401
1847   2C32 010107060503		.byte $01,$01,$07,$06,$05,$03,$06,$46
1847   2C38 0646
1848   2C3A 00          		.byte $00
1849   2C3B             		
1850   2C3B             xxx1	.set	xxx1+1
1851   2C3B             
1852   2C3B 47 47 47 47 m1u6		.byte $47,$47,$47,$47
1853   2C3F 460406040101		.byte $46,$04,$06,$04,$01,$01,$01,$01
1853   2C45 0101
1854   2C47 010101030305		.byte $01,$01,$01,$03,$03,$05,$03,$46
1854   2C4D 0346
1855   2C4F 00          		.byte $00
1856   2C50             		
1857   2C50             xxx1	.set	xxx1+1
1858   2C50             
1859   2C50 47 47 47 47 m1u7		.byte $47,$47,$47,$47
1860   2C54 040204070501		.byte $04,$02,$04,$07,$05,$01,$01,$01
1860   2C5A 0101
1861   2C5C 010101020503		.byte $01,$01,$01,$02,$05,$03,$05,$03
1861   2C62 0503
1862   2C64 00          		.byte $00
1863   2C65             		
1864   2C65             xxx1	.set	xxx1+1
1865   2C65             
1866   2C65 47 47 47 47 m1u8		.byte $47,$47,$47,$47
1867   2C69 474605010307		.byte $47,$46,$05,$01,$03,$07,$07,$07
1867   2C6F 0707
1868   2C71 070707040101		.byte $07,$07,$07,$04,$01,$01,$03,$47
1868   2C77 0347
1869   2C79 00          		.byte $00
1870   2C7A             		
1871   2C7A 80          m1u9		.byte $80
1872   2C7B             
1873   2C7B 6E          m1cld		.byte $6E		;RAM offset Location
1874   2C7C 44 43       		.byte $44,$43	;Closed data
1875   2C7E 46 46       		.byte $46,$46	;Open data
1876   2C80             		
1877   2C80             ;***********************************************
1878   2C80             	.sbttl "Maze 2 Data"
1879   2C80             ;***********************************************
1880   2C80             maz2
1881   2C80 47 47 00    m2ua		.byte $47,$47,$00
1882   2C83 47 47 00    m2ub		.byte $47,$47,$00
1883   2C86 47 47 00    m2uc		.byte $47,$47,$00
1884   2C89 47 47 00    m2ud		.byte $47,$47,$00
1885   2C8C 47 47 00    m2ue		.byte $47,$47,$00
1886   2C8F 47 47 00    m2uf		.byte $47,$47,$00
1887   2C92             
1888   2C92             xxx2	=	1
1889   2C92             
1890   2C92 47 47 47 47 m2u1		.byte $47,$47,$47,$47
1891   2C96 474747474742		.byte $47,$47,$47,$47,$47,$42,$45,$41
1891   2C9C 4541
1892   2C9E 414142474747		.byte $41,$41,$42,$47,$47,$47,$47,$47
1892   2CA4 4747
1893   2CA6 00          		.byte $00
1894   2CA7             		
1895   2CA7             xxx2	.set 	xxx2+1	
1896   2CA7             
1897   2CA7 47 47 47 47 m2u2		.byte $47,$47,$47,$47
1898   2CAB 474747454143		.byte $47,$47,$47,$45,$41,$43,$04,$07
1898   2CB1 0407
1899   2CB3 010244414247		.byte $01,$02,$44,$41,$42,$47,$47,$47
1899   2CB9 4747
1900   2CBB 00          		.byte $00
1901   2CBC             		
1902   2CBC             xxx2	.set 	xxx2+1
1903   2CBC             
1904   2CBC 47 47 47 47 m2u3		.byte $47,$47,$47,$47
1905   2CC0 454141430501		.byte $45,$41,$41,$43,$05,$01,$01,$01
1905   2CC6 0101
1906   2CC8 020401074441		.byte $02,$04,$01,$07,$44,$41,$42,$47
1906   2CCE 4247
1907   2CD0 00          		.byte $00
1908   2CD1             		
1909   2CD1             xxx2	.set 	xxx2+1
1910   2CD1             
1911   2CD1 47 47 47 47 m2u4		.byte $47,$47,$47,$47
1912   2CD5 460705010305		.byte $46,$07,$05,$01,$03,$05,$01,$07
1912   2CDB 0107
1913   2CDD 040101010107		.byte $04,$01,$01,$01,$01,$07,$44,$42
1913   2CE3 4442
1914   2CE5 00          		.byte $00
1915   2CE6             		
1916   2CE6             xxx2	.set 	xxx2+1
1917   2CE6             
1918   2CE6 47 47 47 47 m2u5		.byte $47,$47,$47,$47
1919   2CEA 460604070103		.byte $46,$06,$04,$07,$01,$03,$05,$01
1919   2CF0 0501
1920   2CF2 010102050101		.byte $01,$01,$02,$05,$01,$01,$02,$46
1920   2CF8 0246
1921   2CFA 00          		.byte $00
1922   2CFB             		
1923   2CFB             xxx2	.set 	xxx2+1
1924   2CFB             
1925   2CFB 47 47 47 47 m2u6		.byte $47,$47,$47,$47
1926   2CFF 460401010102		.byte $46,$04,$01,$01,$01,$02,$04,$07
1926   2D05 0407
1927   2D07 010103050101		.byte $01,$01,$03,$05,$01,$01,$03,$46
1927   2D0D 0346
1928   2D0F 00          		.byte $00
1929   2D10             		
1930   2D10             xxx2	.set 	xxx2+1
1931   2D10             
1932   2D10 47 47 47 47 m2u7		.byte $47,$47,$47,$47
1933   2D14 040101020703		.byte $04,$01,$01,$02,$07,$03,$05,$01
1933   2D1A 0501
1934   2D1C 070501030501		.byte $07,$05,$01,$03,$05,$01,$01,$03
1934   2D22 0103
1935   2D24 00          		.byte $00
1936   2D25             		
1937   2D25             xxx2	.set 	xxx2+1
1938   2D25             
1939   2D25 47 47 47 47 m2u8		.byte $47,$47,$47,$47
1940   2D29 474747040102		.byte $47,$47,$47,$04,$01,$02,$06,$07
1940   2D2F 0607
1941   2D31 010305020647		.byte $01,$03,$05,$02,$06,$47,$47,$47
1941   2D37 4747
1942   2D39 00          		.byte $00
1943   2D3A             		
1944   2D3A             xxx2	.set 	xxx2+1
1945   2D3A             
1946   2D3A 47 47 47 47 m2u9		.byte $47,$47,$47,$47
1947   2D3E 474747474706		.byte $47,$47,$47,$47,$47,$06,$04,$01
1947   2D44 0401
1948   2D46 010103474747		.byte $01,$01,$03,$47,$47,$47,$47,$47
1948   2D4C 4747
1949   2D4E 00          		.byte $00
1950   2D4F             		
1951   2D4F 80          m2u10		.byte $80
1952   2D50             
1953   2D50 30          m2cld		.byte $30		;Offset Location
1954   2D51 41 03       		.byte $41,$03	;Closed data
1955   2D53 43 04       		.byte $43,$04	;Open data
1956   2D55             		
1957   2D55             ;***********************************************
1958   2D55             	.sbttl "Maze 3 Data"
1959   2D55             ;***********************************************		
1960   2D55             maz3
1961   2D55 47 47 00    m3ua		.byte $47,$47,$00
1962   2D58 47 47 00    m3ub		.byte $47,$47,$00
1963   2D5B 47 47 00    m3uc		.byte $47,$47,$00
1964   2D5E 47 47 00    m3ud		.byte $47,$47,$00
1965   2D61 47 47 00    m3ue		.byte $47,$47,$00
1966   2D64 47 47 00    m3uf		.byte $47,$47,$00
1967   2D67             
1968   2D67             xxx3	=	1
1969   2D67             
1970   2D67 47 47 47 47 m3u1		.byte $47,$47,$47,$47
1971   2D6B 474747474245		.byte $47,$47,$47,$47,$42,$45,$41,$41
1971   2D71 4141
1972   2D73 414247474747		.byte $41,$42,$47,$47,$47,$47,$00
1972   2D79 00
1973   2D7A             		
1974   2D7A             xxx3	.set	xxx3+1
1975   2D7A             
1976   2D7A 47 47 47 47 m3u2		.byte $47,$47,$47,$47
1977   2D7E 474745414304		.byte $47,$47,$45,$41,$43,$04,$07,$01
1977   2D84 0701
1978   2D86 024441424747		.byte $02,$44,$41,$42,$47,$47,$00
1978   2D8C 00
1979   2D8D             		
1980   2D8D             xxx3	.set	xxx3+1
1981   2D8D             
1982   2D8D 47 47 47 47 m3u3		.byte $47,$47,$47,$47
1983   2D91 454143050101		.byte $45,$41,$43,$05,$01,$01,$01,$02
1983   2D97 0102
1984   2D99 040102444142		.byte $04,$01,$02,$44,$41,$42,$00
1984   2D9F 00
1985   2DA0             		
1986   2DA0             xxx3	.set	xxx3+1
1987   2DA0             
1988   2DA0 47 47 47 47 m3u4		.byte $47,$47,$47,$47
1989   2DA4 040207030501		.byte $04,$02,$07,$03,$05,$01,$07,$04
1989   2DAA 0704
1990   2DAC 010204020503		.byte $01,$02,$04,$02,$05,$03,$00
1990   2DB2 00
1991   2DB3             		
1992   2DB3             xxx3	.set	xxx3+1
1993   2DB3             
1994   2DB3 47 47 47 47 m3u5		.byte $47,$47,$47,$47
1995   2DB7 474605010305		.byte $47,$46,$05,$01,$03,$05,$01,$01
1995   2DBD 0101
1996   2DBF 070407064647		.byte $07,$04,$07,$06,$46,$47,$00
1996   2DC5 00
1997   2DC6             		
1998   2DC6             xxx3	.set	xxx3+1
1999   2DC6             
2000   2DC6 47 47 47 47 m3u6		.byte $47,$47,$47,$47
2001   2DCA 474606050103		.byte $47,$46,$06,$05,$01,$03,$07,$01
2001   2DD0 0701
2002   2DD2 010101034647		.byte $01,$01,$01,$03,$46,$47,$00
2002   2DD8 00
2003   2DD9             		
2004   2DD9             xxx3	.set	xxx3+1
2005   2DD9             
2006   2DD9 47 47 47 47 m3u7		.byte $47,$47,$47,$47
2007   2DDD 474606060701		.byte $47,$46,$06,$06,$07,$01,$01,$01
2007   2DE3 0101
2008   2DE5 010102074647		.byte $01,$01,$02,$07,$46,$47,$00
2008   2DEB 00
2009   2DEC             	
2010   2DEC             xxx3	.set	xxx3+1
2011   2DEC             
2012   2DEC 47 47 47 47 m3u8		.byte $47,$47,$47,$47
2013   2DF0 454306040107		.byte $45,$43,$06,$04,$01,$07,$05,$01
2013   2DF6 0501
2014   2DF8 010204024442		.byte $01,$02,$04,$02,$44,$42,$00
2014   2DFE 00
2015   2DFF             		
2016   2DFF             xxx3	.set	xxx3+1
2017   2DFF             
2018   2DFF 47 47 47 47 m3u9		.byte $47,$47,$47,$47
2019   2E03 040204010107		.byte $04,$02,$04,$01,$01,$07,$04,$01
2019   2E09 0401
2020   2E0B 010101030503		.byte $01,$01,$01,$03,$05,$03,$00
2020   2E11 00
2021   2E12             		
2022   2E12             xxx3	.set	xxx3+1
2023   2E12             
2024   2E12 47 47 47 47 m3u10		.byte $47,$47,$47,$47
2025   2E16 470401010101		.byte $47,$04,$01,$01,$01,$01,$01,$01
2025   2E1C 0101
2026   2E1E 010205010347		.byte $01,$02,$05,$01,$03,$47,$00
2026   2E24 00
2027   2E25             		
2028   2E25             xxx3	.set	xxx3+1
2029   2E25             
2030   2E25 47 47 47 47 m3u11		.byte $47,$47,$47,$47
2031   2E29 474747040101		.byte $47,$47,$47,$04,$01,$01,$01,$01
2031   2E2F 0101
2032   2E31 010103474747		.byte $01,$01,$03,$47,$47,$47,$00
2032   2E37 00
2033   2E38             		
2034   2E38 80          m3u12		.byte $80
2035   2E39             
2036   2E39 2D          m3cld		.byte $2D		;RAM Offset
2037   2E3A 41 03       		.byte $41,$03	;Closed data
2038   2E3C 43 04       		.byte $43,$04	;Open data
2039   2E3E             		
2040   2E3E             ;**************************************************
2041   2E3E             	.sbttl "Open/Closed Data Locations"
2042   2E3E             ;**************************************************
2043   2E3E             
2044   2E3E BB2B7B2C502Dmzocd		.word	m0cld,m1cld,m2cld,m3cld
2044   2E44 392E
2045   2E46             
2046   2E46             ;**************************************************
2047   2E46             	.sbttl "Bit patterns for each stamp"
2048   2E46             ;**************************************************
2049   2E46             ;* These patterns are used to draw the little map *
2050   2E46             ;* at the top of the screen. For each stamp there *
2051   2E46             ;* is a byte which represents a bit rep of that   *
2052   2E46             ;* stamp. For example.. Stamp 1 -- H line will be *
2053   2E46             ;* $c0 (only top two bits are used) for the horiz *
2054   2E46             ;* rep and will be 0 for vert.                    *
2055   2E46             ;**************************************************
2056   2E46             
2057   2E46 00C080804040mapbits	.byte $00,$C0,$80,$80,$40,$40,$00,$00
2057   2E4C 0000
2058   2E4E             
2059   2E4E 000040808040mapvbt	.byte $00,$00,$40,$80,$80,$40,$C0,$00
2059   2E54 C000
2060   2E56             
2061   2E56             ;*** Maze Index Tables ***
2062   2E56             ;* Source Data Pointers  *
2063   2E56             
2064   2E56 382BC02B802Cmazsrc	.word	maz0,maz1,maz2,maz3
2064   2E5C 552D
2065   2E5E             
2066   2E5E             ;* Vertical Length Counters             *
2067   2E5E             ;* Number of 'drawn' lines in each maze *
2068   2E5E             
2069   2E5E 07 08 09 0B mazdep	.byte xxx0,xxx1,xxx2,xxx3
2070   2E62             
2071   2E62             ;* Horizontal Length of each maze             *
2072   2E62             ;* Assumption: Mazes are rectangular in shape *
2073   2E62             
2074   2E62 10 15 15 13 mazlen	.byte m0u2-m0u1,m1u2-m1u1,m2u2-m2u1,m3u2-m3u1
2075   2E66             
2076   2E66             ;***************************************************
2077   2E66             	.sbttl "Maze Init Data"
2078   2E66             ;***************************************************
2079   2E66             ;* Init Source Pointers *
2080   2E66 2230DD30F531mzinit	.word	mzsc00,mzsc10,mzsc20,mzsc30	;Difficulty=0
2080   2E6C 1833
2081   2E6E 6B303D314832		.word	mzsc01,mzsc11,mzsc21,mzsc31	;Difficulty=1
2081   2E74 7333
2082   2E76 76308F318232		.word	mzsc02,mzsc12,mzsc22,mzsc32	;Difficulty=2
2082   2E7C C033
2083   2E7E B030B531C832		.word	mzsc03,mzsc13,mzsc23,mzsc33	;Difficulty=3
2083   2E84 F633
2084   2E86 B030B531C832		.word	mzsc03,mzsc13,mzsc23,mzsc33	;Difficulty=4
2084   2E8C F633
2085   2E8E             		
2086   2E8E             ;* Init Source Disc Data *
2087   2E8E 21342A343534mzdc		.word	mzdc0,mzdc1,mzdc2,mzdc3
2087   2E94 4334
2088   2E96 21342A343534		.word	mzdc0,mzdc1,mzdc2,mzdc3
2088   2E9C 4334
2089   2E9E 21342A343534		.word	mzdc0,mzdc1,mzdc2,mzdc3
2089   2EA4 4334
2090   2EA6 23342B343534		.word	mzdc30,mzdc31,mzdc2,mzdc3
2090   2EAC 4334
2091   2EAE 23342B343534		.word	mzdc30,mzdc31,mzdc2,mzdc3
2091   2EB4 4334
2092   2EB6             		
2093   2EB6             ;* Init Source Lightning Data *
2094   2EB6 533454345834mzlg		.word	mzlg00,mzlg01,mzlg02,mzlg03
2094   2EBC 5E34
2095   2EBE 66346A346E34		.word	mzlg10,mzlg11,mzlg12,mzlg13
2095   2EC4 7634
2096   2EC6 7B347F348834		.word	mzlg20,mzlg21,mzlg22,mzlg23
2096   2ECC 9434
2097   2ECE 9F34A134A634		.word	mzlg30,mzlg31,mzlg32,mzlg33
2097   2ED4 B234
2098   2ED6 9F34A134A634		.word	mzlg30,mzlg31,mzlg32,mzlg33
2098   2EDC B234
2099   2EDE             
2100   2EDE             ;* Init Source Arrow Data *
2101   2EDE BA34CF34E234mzar		.word mzar00,mzar01,mzar02,mzar03
2101   2EE4 F334
2102   2EE6 02350D351C35		.word mzar10,mzar11,mzar12,mzar13
2102   2EEC 2F35
2103   2EEE 38353B354E35		.word mzar20,mzar21,mzar22,mzar23
2103   2EF4 6335
2104   2EF6 783583359435		.word mzar30,mzar31,mzar32,mzar33
2104   2EFC A535
2105   2EFE 783583359435		.word mzar30,mzar31,mzar32,mzar33
2105   2F04 A535
2106   2F06             		
2107   2F06             ;* Init Source Exit Arrow Data *
2108   2F06 AA35B735CA35mzor		.word mzor00,mzor01,mzor02
2109   2F0C             
2110   2F0C             ;* Init Source Trip Point Data *
2111   2F0C DD35E535EA35mztr		.word mztr10,mztr11,mztr12,mztr13
2111   2F12 F135
2112   2F14 F935FF350636		.word mztr20,mztr21,mztr22,mztr23
2112   2F1A 0B36
2113   2F1C 103613361436		.word mztr30,mztr31,mztr32,mztr33
2113   2F22 1836
2114   2F24 103613361436		.word mztr30,mztr31,mztr32,mztr33
2114   2F2A 1836
2115   2F2C             
2116   2F2C             ;* Init Source Maze Adjustments *
2117   2F2C C337CE37DD37mztdal	.word mzta00,mzta01,mzta02,mzta03
2117   2F32 FE37
2118   2F34 FE37FE37FE37		.word mzta10,mzta11,mzta12,mzta13
2118   2F3A FE37
2119   2F3C 0A382D384E38		.word mzta20,mzta21,mzta22,mzta23
2119   2F42 AF38
2120   2F44 D038DD38FA38		.word mzta30,mzta31,mzta32,mzta33
2120   2F4A 4339
2121   2F4C             
2122   2F4C             ;* Init Source Dynamic Maze Adjustments *
2123   2F4C FF3713383438mztd		.word mztd20,mztd21,mztd22,mztd23
2123   2F52 8138
2124   2F54 DC38EE38F438		.word mztd30,mztd31,mztd32,mztd33
2124   2F5A 7139
2125   2F5C             		
2126   2F5C             ;* Init Source One Way Walls *
2127   2F5C 723973397639mone		.word mone00,mone01,mone02,mone03
2127   2F62 7739
2128   2F64 773978397B39		.word mone10,mone11,mone12,mone13
2128   2F6A 7D39
2129   2F6C 7D397E398139		.word mone20,mone21,mone22,mone23
2129   2F72 8439
2130   2F74 87398C398F39		.word mone30,mone31,mone32,mone33
2130   2F7A 9339
2131   2F7C 87398C398F39		.word mone30,mone31,mone32,mone33
2131   2F82 9339
2132   2F84             		
2133   2F84             ;* Init Source Ion Cannon's *
2134   2F84 00 02 00 00 mcan		.byte 0,mcan01-mcanst,0,0
2135   2F88 00 00 00 00 		.byte 0,0,0,0
2136   2F8C 00 00 00 00 		.byte 0,0,0,0
2137   2F90 06 0A 10 16 		.byte mcan30-mcanst,mcan31-mcanst,mcan32-mcanst,mcan33-mcanst
2138   2F94 20 0A 10 16 		.byte mcan40-mcanst,mcan31-mcanst,mcan32-mcanst,mcan33-mcanst		
2139   2F98             		
2140   2F98             ;* Init Source Stalactites *
2141   2F98 953B983B9E3Bmtite		.word        tite11,tite12,tite13
2142   2F9E A03BA13BA43B		.word tite20,tite21,tite22,tite23
2142   2FA4 A53B
2143   2FA6 A73BA73BA73B		.word tite30,tite31,tite32,tite33
2143   2FAC A83B
2144   2FAE A73BAC3BA73B		.word tite30,tite41,tite32,tite33
2144   2FB4 A83B
2145   2FB6             		
2146   2FB6             ;* Init Source Locks *
2147   2FB6 AD3BAD3BAD3Bmlock		.word lock00,lock00,lock00,lock03		
2147   2FBC AE3B
2148   2FBE AD3BAD3BAD3B		.word lock00,lock00,lock00,lock00
2148   2FC4 AD3B
2149   2FC6 AD3BAD3BAD3B		.word lock00,lock00,lock00,lock00
2149   2FCC AD3B
2150   2FCE B53BAD3BBF3B		.word lock30,lock00,lock32,lock33
2150   2FD4 C63B
2151   2FD6 D03BDA3BBF3B		.word lock40,lock41,lock32,lock33
2151   2FDC C63B
2152   2FDE             
2153   2FDE             ;* Init Source Transporter *
2154   2FDE E83BE83BEA3Bmtran		.word tran00,tran00,tran02,tran00	
2154   2FE4 E83B
2155   2FE6 E83BE83BE83B		.word tran00,tran00,tran00,tran00
2155   2FEC E83B
2156   2FEE E83BE83BE83B		.word tran00,tran00,tran00,tran00
2156   2FF4 E83B
2157   2FF6 E83BF63B0A3C		.word tran00,tran31,tran32,tran33
2157   2FFC 143C
2158   2FFE E83BF63B0A3C		.word tran00,tran31,tran32,tran33
2158   3004 143C
2159   3006             		
2160   3006             ;* Init Source De Hand *
2161   3006 1F 3C 1C 3C mhand		.word               hand12,hand00
2162   300A 1C3C1C3C1C3C		.word hand00,hand00,hand00,hand00
2162   3010 1C3C
2163   3012 283C1C3C1C3C		.word hand30,hand00,hand00,hand33
2163   3018 313C
2164   301A 283C1C3C1C3C		.word hand30,hand00,hand00,hand33	
2164   3020 313C
2165   3022             		
2166   3022             ;**************************************************
2167   3022             	.sbttl "Reactor, Fireball, Robot Init"
2168   3022             ;**************************************************
2169   3022             ;* Init data in the following order:              *
2170   3022             ;*                                                *
2171   3022             ;* 	Reactor 	XL,XH,YL,YH                     *
2172   3022             ;*	Fireballs	XL,XH,YL,YH,VELXH,VELYH		  *
2173   3022             ;*    #FE signals end of fireball data            *
2174   3022             ;*	#FF signals end of all data			  *
2175   3022             ;**************************************************
2176   3022             ;* Maze 0 -- Level 0
2177   3022 30 0B 40 F8 mzsc00	.byte $30,$0B,$40,$F8			;Reactor
2178   3026 900348F71000		.byte $90,$03,$48,$F7,$10,$00 	;F0
2179   302C D80248F70010		.byte $D8,$02,$48,$F7,$00,$10 	;F1
2180   3032 D80248F80010		.byte $D8,$02,$48,$F8,$00,$10		;F2
2181   3038 010748F90800		.byte $01,$07,$48,$F9,$08,$00		;F3
2182   303E 700548F88207		.byte $70,$05,$48,$F8,$82,$07,$00	;F4
2182   3044 00
2183   3045 700648F88207		.byte $70,$06,$48,$F8,$82,$07,$00	;F5
2183   304B 00
2184   304C F00748F80010		.byte $F0,$07,$48,$F8,$00,$10		;F6
2185   3052 F00748F90010		.byte $F0,$07,$48,$F9,$00,$10		;F7
2186   3058 A00748F70800		.byte $A0,$07,$48,$F7,$08,$00		;F8
2187   305E A00848F70800		.byte $A0,$08,$48,$F7,$08,$00		;F9
2188   3064 500648F61000		.byte $50,$06,$48,$F6,$10,$00		;FA
2189   306A FF          		.byte $FF
2190   306B             		
2191   306B             ;* Maze 0 --Level 1
2192   306B 30 0B 40 F8 mzsc01	.byte $30,$0B,$40,$F8			;Reactor
2193   306F 490948F80000		.byte $49,$09,$48,$F8,$00,$00		;F1
2194   3075 FF          		.byte $FF
2195   3076             		
2196   3076             ;* Maze 0 -- Level 2
2197   3076 30 08 40 FB mzsc02	.byte $30,$08,$40,$FB			;Reactor 
2198   307A 490848FA0000		.byte $49,$08,$48,$FA,$00,$00		;F1
2199   3080 010755F70000		.byte $01,$07,$55,$F7,$00,$00		;F2
2200   3086 0107AAF70000		.byte $01,$07,$AA,$F7,$00,$00		;F3
2201   308C 010748F7830D		.byte $01,$07,$48,$F7,$83,$0D,$00	;F4
2201   3092 00
2202   3093 4007B8FA0000		.byte $40,$07,$B8,$FA,$00,$00		;F4
2203   3099 010880FB0081		.byte $01,$08,$80,$FB,$00,$81,$07	;F5
2203   309F 07
2204   30A0 FE          		.byte $FE
2205   30A1 010348F7830D		.byte $01,$03,$48,$F7,$83,$0D,$00	;R0
2205   30A7 00
2206   30A8 010548F8830D		.byte $01,$05,$48,$F8,$83,$0D,$00	;R1
2206   30AE 00
2207   30AF FF          		.byte $FF
2208   30B0             		
2209   30B0             ;* Maze 0 -- Level 3
2210   30B0 30 07 40 F9 mzsc03	.byte $30,$07,$40,$F9			;Reactor
2211   30B4 800880FB0081		.byte $80,$08,$80,$FB,$00,$81,$03	;F1
2211   30BA 03
2212   30BB 000548F68107		.byte $00,$05,$48,$F6,$81,$07,$00	;F2
2212   30C1 00
2213   30C2 000648F68107		.byte $00,$06,$48,$F6,$81,$07,$00	;F3
2213   30C8 00
2214   30C9 C00480F80010		.byte $C0,$04,$80,$F8,$00,$10		;F4
2215   30CF C00480F90010		.byte $C0,$04,$80,$F9,$00,$10		;F5
2216   30D5 FE          		.byte $FE
2217   30D6 000548F80600		.byte $00,$05,$48,$F8,$06,$00		;R0
2218   30DC FF          		.byte $FF
2219   30DD             		
2220   30DD             ;* Maze 1 -- Level 0
2221   30DD 18 0E 49 F8 mzsc10	.byte $18,$0E,$49,$F8			;Reactor
2222   30E1 300848F80084		.byte $30,$08,$48,$F8,$00,$84,$0C	;F1
2222   30E7 0C
2223   30E8 300848F90084		.byte $30,$08,$48,$F9,$00,$84,$0C	;F2
2223   30EE 0C
2224   30EF 190948F9820E		.byte $19,$09,$48,$F9,$82,$0E,$00	;F3
2224   30F5 00
2225   30F6 380B4AF7007D		.byte $38,$0B,$4A,$F7,$00,$7D,$F3	;F4
2225   30FC F3
2226   30FD FE          		.byte $FE
2227   30FE 400401F70200		.byte $40,$04,$01,$F7,$02,$00		;R0
2228   3104 C00301F80200		.byte $C0,$03,$01,$F8,$02,$00		;R1
2229   310A 800E4AF90400		.byte $80,$0E,$4A,$F9,$04,$00		;R2
2230   3110 9B0C49FA0400		.byte $9B,$0C,$49,$FA,$04,$00		;R3
2231   3116 C00D4AF70400		.byte $C0,$0D,$4A,$F7,$04,$00		;R4
2232   311C A30400F80200		.byte $A3,$04,$00,$F8,$02,$00		;R5
2233   3122 EE024AF70000		.byte $EE,$02,$4A,$F7,$00,$00		;R6
2234   3128 A60649F88108		.byte $A6,$06,$49,$F8,$81,$08,$00	;R7
2234   312E 00
2235   312F 010749F88108		.byte $01,$07,$49,$F8,$81,$08,$00	;R8
2235   3135 00
2236   3136 490FC0F70800		.byte $49,$0F,$C0,$F7,$08,$00		;R9
2237   313C FF          		.byte $FF
2238   313D             		
2239   313D             ;* Maze 1 -- Level 1
2240   313D 18 0E 49 F8 mzsc11	.byte $18,$0E,$49,$F8			;Reactor
2241   3141 800AA0F90000		.byte $80,$0A,$A0,$F9,$00,$00		;F0
2242   3147 010830F80083		.byte $01,$08,$30,$F8,$00,$83,$0D	;F1
2242   314D 0D
2243   314E 180B4AF7007D		.byte $18,$0B,$4A,$F7,$00,$7D,$F3	;F2
2243   3154 F3
2244   3155 A30400F81800		.byte $A3,$04,$00,$F8,$18,$00		;F3
2245   315B 700C80F90081		.byte $70,$0C,$80,$F9,$00,$81,$09	;F4
2245   3161 09
2246   3162 010E48F50800		.byte $01,$0E,$48,$F5,$08,$00		;F5
2247   3168 010F48F50800		.byte $01,$0F,$48,$F5,$08,$00		;F6
2248   316E FE          		.byte $FE
2249   316F 010848F8830D		.byte $01,$08,$48,$F8,$83,$0D,$00	;R0
2249   3175 00
2250   3176 EE024AF70000		.byte $EE,$02,$4A,$F7,$00,$00		;R1
2251   317C 500448F91000		.byte $50,$04,$48,$F9,$10,$00		;R2
2252   3182 600700F91000		.byte $60,$07,$00,$F9,$10,$00		;R3
2253   3188 010700F91000		.byte $01,$07,$00,$F9,$10,$00		;R4
2254   318E FF          		.byte $FF
2255   318F             		
2256   318F             ;* Maze 1 -- Level 2
2257   318F 18 0E 49 F8 mzsc12	.byte $18,$0E,$49,$F8			;Reactor
2258   3193 4009A0F70000		.byte $40,$09,$A0,$F7,$00,$00		;F0
2259   3199 600C80F90081		.byte $60,$0C,$80,$F9,$00,$81,$09	;F1
2259   319F 09
2260   31A0 010D40F8820A		.byte $01,$0D,$40,$F8,$82,$0A,$00	;F3
2260   31A6 00
2261   31A7 FE          		.byte $FE
2262   31A8 010800F90800		.byte $01,$08,$00,$F9,$08,$00		;R0
2263   31AE 010800FA0800		.byte $01,$08,$00,$FA,$08,$00		;R1
2264   31B4 FF          		.byte $FF
2265   31B5             		
2266   31B5             ;* Maze 1 -- Level 3
2267   31B5 30 0C 40 F7 mzsc13	.byte $30,$0C,$40,$F7			;Reactor
2268   31B9 000448FA1000		.byte $00,$04,$48,$FA,$10,$00		;F0
2269   31BF 000400F80600		.byte $00,$04,$00,$F8,$06,$00		;F1
2270   31C5 000A80F70081		.byte $00,$0A,$80,$F7,$00,$81,$0B	;F3
2270   31CB 0B
2271   31CC 000B80F70081		.byte $00,$0B,$80,$F7,$00,$81,$0B	;F4
2271   31D2 0B
2272   31D3 FE          		.byte $FE
2273   31D4 000448F98314		.byte $00,$04,$48,$F9,$83,$14,$00	;R0
2273   31DA 00
2274   31DB 000248F68103		.byte $00,$02,$48,$F6,$81,$03,$00	;R1
2274   31E1 00
2275   31E2 000F80F5FF02		.byte $00,$0F,$80,$F5,$FF,$02		;R2
2276   31E8 800980FB0002		.byte $80,$09,$80,$FB,$00,$02		;R3
2277   31EE 000948F90000		.byte $00,$09,$48,$F9,$00,$00		;R4
2278   31F4 FF          		.byte $FF
2279   31F5             		
2280   31F5             ;* Maze 2 -- Level 0
2281   31F5 20 0B 48 F7 mzsc20	.byte $20,$0B,$48,$F7			;Reactor
2282   31F9 370C00FA007C		.byte $37,$0C,$00,$FA,$00,$7C,$F4	;F0
2282   31FF F4
2283   3200 B80C00FA0084		.byte $B8,$0C,$00,$FA,$00,$84,$0C	;F1
2283   3206 0C
2284   3207 FD0A00F50010		.byte $FD,$0A,$00,$F5,$00,$10		;F2
2285   320D 780848FB0010		.byte $78,$08,$48,$FB,$00,$10		;F3
2286   3213 FE          		.byte $FE
2287   3214 010A48F88410		.byte $01,$0A,$48,$F8,$84,$10,$00	;R0
2287   321A 00
2288   321B 010AB7F88410		.byte $01,$0A,$B7,$F8,$84,$10,$00	;R1
2288   3221 00
2289   3222 FD0948F5860F		.byte $FD,$09,$48,$F5,$86,$0F,$00	;R2
2289   3228 00
2290   3229 01044AF71000		.byte $01,$04,$4A,$F7,$10,$00		;R3
2291   322F 010B4AF6FF00		.byte $01,$0B,$4A,$F6,$FF,$00		;R4
2292   3235 010BB6F6FF00		.byte $01,$0B,$B6,$F6,$FF,$00		;R5
2293   323B 98064AF90000		.byte $98,$06,$4A,$F9,$00,$00		;R6
2294   3241 010448F81000		.byte $01,$04,$48,$F8,$10,$00		;R7
2295   3247 FF          		.byte $FF
2296   3248             		
2297   3248             ;* Maze 2 -- Level 1
2298   3248 20 0B 48 F7 mzsc21	.byte $20,$0B,$48,$F7			;Reactor
2299   324C 900380F90081		.byte $90,$03,$80,$F9,$00,$81,$0B	;F0
2299   3252 0B
2300   3253 280480F70010		.byte $28,$04,$80,$F7,$00,$10		;F1
2301   3259 D80480F70010		.byte $D8,$04,$80,$F7,$00,$10		;F2
2302   325F 010A7CF91000		.byte $01,$0A,$7C,$F9,$10,$00		;F3
2303   3265 010F7CF91000		.byte $01,$0F,$7C,$F9,$10,$00		;F4
2304   326B FE          		.byte $FE
2305   326C 800848FA820E		.byte $80,$08,$48,$FA,$82,$0E,$00	;R0
2305   3272 00
2306   3273 C00880F70081		.byte $C0,$08,$80,$F7,$00,$81,$07	;R1
2306   3279 07
2307   327A 800B80F60081		.byte $80,$0B,$80,$F6,$00,$81,$07	;R2
2307   3280 07
2308   3281 FF          		.byte $FF
2309   3282             		
2310   3282             ;* Maze 2 -- Level 2
2311   3282 20 0A 48 FA mzsc22	.byte $20,$0A,$48,$FA			;Reactor
2312   3286 400A01F80000		.byte $40,$0A,$01,$F8,$00,$00		;F0
2313   328C 401040F60000		.byte $40,$10,$40,$F6,$00,$00		;F1
2314   3292 E00101F80200		.byte $E0,$01,$01,$F8,$02,$00		;F2
2315   3298 E00101F8FE00		.byte $E0,$01,$01,$F8,$FE,$00		;F3
2316   329E 010D80F80081		.byte $01,$0D,$80,$F8,$00,$81,$0C	;F4
2316   32A4 0C
2317   32A5 010E80F80081		.byte $01,$0E,$80,$F8,$00,$81,$0C	;F5
2317   32AB 0C
2318   32AC F80E80F80081		.byte $F8,$0E,$80,$F8,$00,$81,$0C	;F6
2318   32B2 0C
2319   32B3 000980FB0081		.byte $00,$09,$80,$FB,$00,$81,$03	;F7
2319   32B9 03
2320   32BA FE          		.byte $FE
2321   32BB 010814F70800		.byte $01,$08,$14,$F7,$08,$00		;R0
2322   32C1 400948FBFF00		.byte $40,$09,$48,$FB,$FF,$00		;R1
2323   32C7 FF          		.byte $FF
2324   32C8             		
2325   32C8             ;Maze 2 -- Level 3
2326   32C8 20 10 48 F6 mzsc23	.byte $20,$10,$48,$F6			;Reactor
2327   32CC 000A48F98216		.byte $00,$0A,$48,$F9,$82,$16,$00	;F0
2327   32D2 00
2328   32D3 800C48F98216		.byte $80,$0C,$48,$F9,$82,$16,$00	;F1
2328   32D9 00
2329   32DA 800980F5810A		.byte $80,$09,$80,$F5,$81,$0A,$00	;F2
2329   32E0 00
2330   32E1 000CA0F48105		.byte $00,$0C,$A0,$F4,$81,$05,$00	;F3
2330   32E7 00
2331   32E8 000C20F48103		.byte $00,$0C,$20,$F4,$81,$03,$00	;F4
2331   32EE 00
2332   32EF A008C0F58105		.byte $A0,$08,$C0,$F5,$81,$05,$00	;F5
2332   32F5 00
2333   32F6 200A40F58105		.byte $20,$0A,$40,$F5,$81,$05,$00	;F6
2333   32FC 00
2334   32FD FE          		.byte $FE
2335   32FE 200B80F4FF00		.byte $20,$0B,$80,$F4,$FF,$00		;R0
2336   3304 200B00F4FF00		.byte $20,$0B,$00,$F4,$FF,$00		;R1
2337   330A 200448F6FF00		.byte $20,$04,$48,$F6,$FF,$00		;R2
2338   3310 800200F90081		.byte $80,$02,$00,$F9,$00,$81,$05	;R3
2338   3316 05
2339   3317 FF          		.byte $FF
2340   3318             		
2341   3318             ;* Maze 3 -- Level 0
2342   3318 28 0C 61 F4 mzsc30	.byte $28,$0C,$61,$F4			;Reactor
2343   331C 600748FA0084		.byte $60,$07,$48,$FA,$00,$84,$0C	;F0
2343   3322 0C
2344   3323 C00748FA0084		.byte $C0,$07,$48,$FA,$00,$84,$0C	;F1
2344   3329 0C
2345   332A 800A48FA820F		.byte $80,$0A,$48,$FA,$82,$0F,$00	;F2
2345   3330 00
2346   3331 010D48F88107		.byte $01,$0D,$48,$F8,$81,$07,$00	;F3
2346   3337 00
2347   3338 010D08F78107		.byte $01,$0D,$08,$F7,$81,$07,$00	;F4
2347   333E 00
2348   333F 800648F31000		.byte $80,$06,$48,$F3,$10,$00		;F5
2349   3345 800848F31000		.byte $80,$08,$48,$F3,$10,$00		;F6
2350   334B 480B48F40020		.byte $48,$0B,$48,$F4,$00,$20		;F7
2351   3351 8003B0F88414		.byte $80,$03,$B0,$F8,$84,$14,$00	;F8
2351   3357 00
2352   3358 FE          		.byte $FE
2353   3359 010248F9830D		.byte $01,$02,$48,$F9,$83,$0D,$00	;R0
2353   335F 00
2354   3360 010748F81000		.byte $01,$07,$48,$F8,$10,$00		;R1
2355   3366 010948F71000		.byte $01,$09,$48,$F7,$10,$00		;R2
2356   336C 010448F41000		.byte $01,$04,$48,$F4,$10,$00		;R3
2357   3372 FF          		.byte $FF
2358   3373             		
2359   3373             ;* Maze 3 -- Level 1
2360   3373 28 0E 61 F4 mzsc31	.byte $28,$0E,$61,$F4			;Reactor
2361   3377 010880F60081		.byte $01,$08,$80,$F6,$00,$81,$0B	;F0
2361   337D 0B
2362   337E 010980F60081		.byte $01,$09,$80,$F6,$00,$81,$0B	;F1
2362   3384 0B
2363   3385 010A80F60081		.byte $01,$0A,$80,$F6,$00,$81,$0B	;F2
2363   338B 0B
2364   338C 800A80F3000E		.byte $80,$0A,$80,$F3,$00,$0E		;F3
2365   3392 010748F31000		.byte $01,$07,$48,$F3,$10,$00		;F4
2366   3398 FE          		.byte $FE
2367   3399 010748F78216		.byte $01,$07,$48,$F7,$82,$16,$00	;R0
2367   339F 00
2368   33A0 010A48F78216		.byte $01,$0A,$48,$F7,$82,$16,$00	;R1
2368   33A6 00
2369   33A7 010448F41800		.byte $01,$04,$48,$F4,$18,$00		;R2
2370   33AD 400440F51000		.byte $40,$04,$40,$F5,$10,$00		;R3
2371   33B3 C00340F61000		.byte $C0,$03,$40,$F6,$10,$00		;R4
2372   33B9 010848F20C00		.byte $01,$08,$48,$F2,$0C,$00		;R5
2373   33BF FF          		.byte $FF
2374   33C0             		
2375   33C0             ;* Maze 3 -- Level 2
2376   33C0 28 0C 61 F4 mzsc32	.byte $28,$0C,$61,$F4			;Reactor
2377   33C4 010A80F60082		.byte $01,$0A,$80,$F6,$00,$82,$0C	;F0
2377   33CA 0C
2378   33CB 0105A0F60000		.byte $01,$05,$A0,$F6,$00,$00		;F1
2379   33D1 010748F51800		.byte $01,$07,$48,$F5,$18,$00		;F2
2380   33D7 010948F51800		.byte $01,$09,$48,$F5,$18,$00		;F3
2381   33DD 010848F5E800		.byte $01,$08,$48,$F5,$E8,$00		;F4
2382   33E3 D00948F40000		.byte $D0,$09,$48,$F4,$00,$00		;F5
2383   33E9 800B48F60000		.byte $80,$0B,$48,$F6,$00,$00		;F6
2384   33EF 800BB8F60000		.byte $80,$0B,$B8,$F6,$00,$00		;F7
2385   33F5 FF          		.byte $FF
2386   33F6             		
2387   33F6             ;* Maze 3 -- Level 3
2388   33F6 30 06 61 F3 mzsc33	.byte $30,$06,$61,$F3			;Reactor
2389   33FA 000B48FA8210		.byte $00,$0B,$48,$FA,$82,$10,$00	;F0
2389   3400 00
2390   3401 000D48F98210		.byte $00,$0D,$48,$F9,$82,$10,$00	;F1
2390   3407 00
2391   3408 300880F40010		.byte $30,$08,$80,$F4,$00,$10		;F2
2392   340E D00880F50010		.byte $D0,$08,$80,$F5,$00,$10		;F3
2393   3414 300A80F400F0		.byte $30,$0A,$80,$F4,$00,$F0		;F4
2394   341A D00A80F500F0		.byte $D0,$0A,$80,$F5,$00,$F0		;F5
2395   3420 FF          		.byte $FF
2396   3421             
2397   3421             ;**************************************
2398   3421             	.sbttl "Disc Placement"    
2399   3421             ;**************************************
2400   3421             ;* X Position, Y Position             *
2401   3421             ;* X value of 0 ends list             *
2402   3421             ;**************************************
2403   3421 A3 B3       mzdc0		.byte $A3,$B3
2404   3423 95837477B680mzdc30	.byte $95,$83,$74,$77,$B6,$80,$00
2404   3429 00
2405   342A 53          mzdc1		.byte $53
2406   342B 607593717D7Bmzdc31	.byte $60,$75,$93,$71,$7D,$7B,$7A,$97,$B6,$00
2406   3431 7A97B600
2407   3435 A6937182886Amzdc2		.byte $A6,$93,$71,$82,$88,$6A,$78,$56,$66,$5A,$6E,$8D,$9C,$00
2407   343B 7856665A6E8D9C00
2408   3443 A69989776557mzdc3		.byte $A6,$99,$89,$77,$65,$57,$48,$3B,$40,$83,$24,$25,$26,$27,$28,$29 ;End is on next line
2408   3449 483B4083242526272829
2409   3453 00          mzlg00	.byte $00
2410   3454             
2411   3454             ;**************************************
2412   3454             	.sbttl "Force Field Placement"
2413   3454             ;**************************************
2414   3454             ;* X + Direction, Y                   *
2415   3454             ;* Note: First 7 horizontal, second   *
2416   3454             ;*       7 vertical. FF finishes off  *
2417   3454             ;*       Horizontal ones, 00 finishes *
2418   3454             ;*       off list.                    *
2419   3454             ;**************************************
2420   3454             ;* Difcty Level 0
2421   3454 42 9F 7C 00 mzlg01	.byte $42,$9F,$7C,$00
2422   3458 4C46FF8B5500mzlg02	.byte $4C,$46,$FF,$8B,$55,$00
2423   345E 8A8B52FF2367mzlg03	.byte $8A,$8B,$52,$FF,$23,$67,$49,$00
2423   3464 4900
2424   3466 FF A3 77 00 mzlg10	.byte $FF,$A3,$77,$00
2425   346A 42 9F 7C 00 mzlg11	.byte $42,$9F,$7C,$00
2426   346E 4C46FF8E48B9mzlg12	.byte $4C,$46,$FF,$8E,$48,$B9,$66,$00
2426   3474 6600
2427   3476 8C72FF2300  mzlg13	.byte $8C,$72,$FF,$23,$00
2428   347B FF A3 B7 00 mzlg20	.byte $FF,$A3,$B7,$00
2429   347F 429F84FFA989mzlg21	.byte $42,$9F,$84,$FF,$A9,$89,$67,$69,$00
2429   3485 676900
2430   3488 464C596C98FFmzlg22	.byte $46,$4C,$59,$6C,$98,$FF,$B9,$99,$87,$55,$48,$00
2430   348E B99987554800
2431   3494 97B9FF364855mzlg23	.byte $97,$B9,$FF,$36,$48,$55,$58,$23,$75,$78,$00
2431   349A 5823757800
2432   349F 67 00       mzlg30	.byte $67,$00
2433   34A1 429FFFBB00  mzlg31	.byte $42,$9F,$FF,$BB,$00
2434   34A6 3738393A3B3Cmzlg32	.byte $37,$38,$39,$3A,$3B,$3C,$FF,$A6,$69,$6F,$4A,$00
2434   34AC FFA6696F4A00
2435   34B2 8CFF34354458mzlg33	.byte $8C,$FF,$34,$35,$44,$58,$5A,$00
2435   34B8 5A00
2436   34BA             
2437   34BA             ;***************************************
2438   34BA             	.sbttl "Arrow Placement"
2439   34BA             ;***************************************
2440   34BA             ;* X Position, Y Position, Direction   *
2441   34BA             ;* 0 in X Position ends list           *
2442   34BA             ;***************************************
2443   34BA A2 00       mzar00	.byte $A2,$00
2444   34BC A3 04       		.byte $A3,$04
2445   34BE B4 00       		.byte $B4,$00
2446   34C0 B5 00       		.byte $B5,$00
2447   34C2 B6 00       		.byte $B6,$00
2448   34C4 B7 07       		.byte $B7,$07
2449   34C6 A8 07       		.byte $A8,$07
2450   34C8 98 03       		.byte $98,$03
2451   34CA 88 07       		.byte $88,$07
2452   34CC 89 00       		.byte $89,$00
2453   34CE 00          		.byte $00
2454   34CF 74 00       mzar01	.byte $74,$00
2455   34D1 76 00       		.byte $76,$00
2456   34D3 89 01       		.byte $89,$01
2457   34D5 86 02       		.byte $86,$02
2458   34D7 A6 00       		.byte $A6,$00
2459   34D9 A7 07       		.byte $A7,$07
2460   34DB 98 00       		.byte $98,$00
2461   34DD 9A 00       		.byte $9A,$00
2462   34DF 9B 07       		.byte $9B,$07
2463   34E1 00          		.byte $00
2464   34E2 A6 00       mzar02	.byte $A6,$00
2465   34E4 A8 07       		.byte $A8,$07
2466   34E6 9D 07       		.byte $9D,$07
2467   34E8 5A 01       		.byte $5A,$01
2468   34EA 57 02       		.byte $57,$02
2469   34EC 67 02       		.byte $67,$02
2470   34EE 77 00       		.byte $77,$00
2471   34F0 78 00       		.byte $78,$00
2472   34F2 00          		.byte $00
2473   34F3 A4 00       mzar03	.byte $A4,$00
2474   34F5 A5 04       		.byte $A5,$04
2475   34F7 9B 03       		.byte $9B,$03
2476   34F9 5B 03       		.byte $5B,$03
2477   34FB 39 01       		.byte $39,$01
2478   34FD 35 02       		.byte $35,$02
2479   34FF 55 04       		.byte $55,$04
2480   3501 00          		.byte $00
2481   3502 A2 01       mzar10	.byte $A2,$01
2482   3504 76 01       		.byte $76,$01
2483   3506 84 01       		.byte $84,$01
2484   3508 A5 01       		.byte $A5,$01
2485   350A A8 03       		.byte $A8,$03
2486   350C 00          		.byte $00
2487   350D 74 00       mzar11	.byte $74,$00
2488   350F 76 00       		.byte $76,$00
2489   3511 89 01       		.byte $89,$01
2490   3513 A7 07       		.byte $A7,$07
2491   3515 99 00       		.byte $99,$00
2492   3517 9B 07       		.byte $9B,$07
2493   3519 86 02       		.byte $86,$02
2494   351B 00          		.byte $00
2495   351C A5 01       mzar12	.byte $A5,$01
2496   351E 91 03       		.byte $91,$03
2497   3520 71 00       		.byte $71,$00
2498   3522 73 00       		.byte $73,$00
2499   3524 75 04       		.byte $75,$04
2500   3526 87 00       		.byte $87,$00
2501   3528 8A 07       		.byte $8A,$07
2502   352A 6A 01       		.byte $6A,$01
2503   352C 67 02       		.byte $67,$02
2504   352E 00          		.byte $00
2505   352F A3 08       mzar13	.byte $A3,$08
2506   3531 A4 08       		.byte $A4,$08
2507   3533 A5 08       		.byte $A5,$08
2508   3535 65 08       		.byte $65,$08
2509   3537 00          		.byte $00
2510   3538 A2 08       mzar20	.byte $A2,$08
2511   353A 00          		.byte $00
2512   353B 74 00       mzar21	.byte $74,$00
2513   353D 76 00       		.byte $76,$00
2514   353F 87 01       		.byte $87,$01
2515   3541 A8 07       		.byte $A8,$07
2516   3543 99 00       		.byte $99,$00
2517   3545 9B 07       		.byte $9B,$07
2518   3547 7B 03       		.byte $7B,$03
2519   3549 6C 04       		.byte $6C,$04
2520   354B AA 06       		.byte $AA,$06
2521   354D 00          		.byte $00
2522   354E A5 01       mzar22	.byte $A5,$01
2523   3550 91 05       		.byte $91,$05
2524   3552 64 02       		.byte $64,$02
2525   3554 86 01       		.byte $86,$01
2526   3556 65 07       		.byte $65,$07
2527   3558 56 04       		.byte $56,$04
2528   355A 77 02       		.byte $77,$02
2529   355C 89 00       		.byte $89,$00
2530   355E 8D 02       		.byte $8D,$02
2531   3560 9D 01       		.byte $9D,$01
2532   3562 00          		.byte $00
2533   3563 A4 01       mzar23	.byte $A4,$01
2534   3565 81 03       		.byte $81,$03
2535   3567 45 06       		.byte $45,$06
2536   3569 54 01       		.byte $54,$01
2537   356B 65 00       		.byte $65,$00
2538   356D 67 00       		.byte $67,$00
2539   356F 69 03       		.byte $69,$03
2540   3571 49 07       		.byte $49,$07
2541   3573 3A 00       		.byte $3A,$00
2542   3575 6B 02       		.byte $6B,$02
2543   3577 00          		.byte $00
2544   3578 A2 01       mzar30	.byte $A2,$01
2545   357A 76 01       		.byte $76,$01
2546   357C 84 01       		.byte $84,$01
2547   357E A5 01       		.byte $A5,$01
2548   3580 A8 03       		.byte $A8,$03
2549   3582 00          		.byte $00
2550   3583 74 01       mzar31	.byte $74,$01
2551   3585 83 02       		.byte $83,$02
2552   3587 81 08       		.byte $81,$08
2553   3589 64 00       		.byte $64,$00
2554   358B 69 00       		.byte $69,$00
2555   358D 98 00       		.byte $98,$00
2556   358F AA 08       		.byte $AA,$08
2557   3591 77 00       		.byte $77,$00
2558   3593 00          		.byte $00
2559   3594 A5 01       mzar32	.byte $A5,$01
2560   3596 80 03       		.byte $80,$03
2561   3598 81 03       		.byte $81,$03
2562   359A 75 04       		.byte $75,$04
2563   359C 8C 06       		.byte $8C,$06
2564   359E 67 07       		.byte $67,$07
2565   35A0 49 00       		.byte $49,$00
2566   35A2 6C 00       		.byte $6C,$00
2567   35A4 00          		.byte $00
2568   35A5 A5 00       mzar33	.byte $A5,$00
2569   35A7 97 00       		.byte $97,$00
2570   35A9 00          		.byte $00
2571   35AA             		
2572   35AA 89 0C       mzor00	.byte $89,$0C
2573   35AC 88 09       		.byte $88,$09
2574   35AE A8 09       		.byte $A8,$09
2575   35B0 B7 0C       		.byte $B7,$0C
2576   35B2 B5 0C       		.byte $B5,$0C
2577   35B4 A2 09       		.byte $A2,$09
2578   35B6 00          		.byte $00
2579   35B7 8B 09       mzor01	.byte $8B,$09
2580   35B9 9A 0C       		.byte $9A,$0C
2581   35BB 98 0C       		.byte $98,$0C
2582   35BD A6 0B       		.byte $A6,$0B
2583   35BF 86 0A       		.byte $86,$0A
2584   35C1 8A 0B       		.byte $8A,$0B
2585   35C3 78 0C       		.byte $78,$0C
2586   35C5 76 0C       		.byte $76,$0C
2587   35C7 74 09       		.byte $74,$09
2588   35C9 00          		.byte $00
2589   35CA 78 0C       mzor02	.byte $78,$0C
2590   35CC 77 0B       		.byte $77,$0B
2591   35CE 67 0B       		.byte $67,$0B
2592   35D0 57 0B       		.byte $57,$0B
2593   35D2 47 0A       		.byte $47,$0A
2594   35D4 86 0C       		.byte $86,$0C
2595   35D6 84 0C       		.byte $84,$0C
2596   35D8 81 09       		.byte $81,$09
2597   35DA 93 0A       		.byte $93,$0A
2598   35DC 00          		.byte $00
2599   35DD             		
2600   35DD             ;**************************************
2601   35DD             	.sbttl "Trip Point Placement"
2602   35DD             ;**************************************
2603   35DD             ;* X Position, Y Position             *
2604   35DD             ;* 0 in X position ends list          *
2605   35DD             ;**************************************
2606   35DD 6483868794B5mztr10	.byte $64,$83,$86,$87,$94,$B5,$78,$00
2606   35E3 7800
2607   35E5 7678989A00  mztr11	.byte $76,$78,$98,$9A,$00
2608   35EA 616154727493mztr12	.byte $61,$61,$54,$72,$74,$93,$00
2608   35F0 00
2609   35F1 A69866676836mztr13	.byte $A6,$98,$66,$67,$68,$36,$37,$00
2609   35F7 3700
2610   35F9 646594A6B500mztr20	.byte $64,$65,$94,$A6,$B5,$00
2611   35FF 7798999AB7B9mztr21	.byte $77,$98,$99,$9A,$B7,$B9,$00
2611   3605 00
2612   3606 8C8D8D6E00  mztr22	.byte $8C,$8D,$8D,$6E,$00
2613   360B 5464694900  mztr23	.byte $54,$64,$69,$49,$00
2614   3610 B5 B6 00    mztr30	.byte $B5,$B6,$00
2615   3613 00          mztr31	.byte $00
2616   3614 8B 8C 8D 00 mztr32	.byte $8B,$8C,$8D,$00
2617   3618 48 4A 00    mztr33	.byte $48,$4A,$00
2618   361B             
2619   361B             ;**************************************************
2620   361B             	.sbttl "Trip Point Action"
2621   361B             ;**************************************************
2622   361B             ;* Table of values for each trip point for each   *
2623   361B             ;* maze and difcy level. Table is organized into  *
2624   361B             ;* 128 byte groups, 1 group for each difcty level *
2625   361B             ;* Each group contains entries for 4 mazes, 8     *
2626   361B             ;* entries per maze, 3 bytes per entry.           *
2627   361B             ;*                                                *
2628   361B             ;* (X Position, Y Position, X vel index)          *
2629   361B             ;*                                                *
2630   361B             ;* X Pos = Position + Flags                       *
2631   361B             ;*   Flag D7 = Only 1 release (bottom or left one)*
2632   361B             ;**************************************************
2633   361B             ;* difcty level 0 not included
2634   361B             ;* difcty level 1
2635   361B             ;* Maze 0
2636   361B 88 F6 84    trtbl		.byte $88,$F6,$84
2637   361E 83 F8 04    		.byte $83,$F8,$04
2638   3621 09 F8 84    		.byte $09,$F8,$84
2639   3624 09 F8 84    		.byte $09,$F8,$84
2640   3627 87 F9 84    		.byte $87,$F9,$84
2641   362A 89 FB 84    		.byte $89,$FB,$84
2642   362D 8A F7 84    		.byte $8A,$F7,$84
2643   3630 00 00 00    		.byte $00,$00,$00
2644   3633             ;* Maze 1
2645   3633 84 F7 06    		.byte $84,$F7,$06
2646   3636 85 F7 06    		.byte $85,$F7,$06
2647   3639 88 F9 06    		.byte $88,$F9,$06
2648   363C 8D F9 86    		.byte $8D,$F9,$86
2649   363F 00 00 00    		.byte $00,$00,$00
2650   3642 00 00 00    		.byte $00,$00,$00
2651   3645 00 00 00    		.byte $00,$00,$00
2652   3648 00 00 00    		.byte $00,$00,$00
2653   364B             ;* Maze 2   
2654   364B 01 F6 06    		.byte $01,$F6,$06
2655   364E 06 F6 86    		.byte $06,$F6,$86
2656   3651 87 F5 84    		.byte $87,$F5,$84
2657   3654 87 F7 84    		.byte $87,$F7,$84
2658   3657 82 F7 04    		.byte $82,$F7,$04
2659   365A 81 F9 04    		.byte $81,$F9,$04
2660   365D 00 00 00    		.byte $00,$00,$00
2661   3660 00 00 00    		.byte $00,$00,$00
2662   3663             ;* Maze 3
2663   3663 89 FA 84    		.byte $89,$FA,$84
2664   3666 8B F9 84    		.byte $8B,$F9,$84
2665   3669 84 F6 04    		.byte $84,$F6,$04
2666   366C 84 F6 04    		.byte $84,$F6,$04
2667   366F 85 F6 04    		.byte $85,$F6,$04
2668   3672 03 F3 04    		.byte $03,$F3,$04
2669   3675 03 F3 04    		.byte $03,$F3,$04
2670   3678 00 00 00    		.byte $00,$00,$00
2671   367B             ;* difcty level 2
2672   367B             ;* Maze 0
2673   367B 08 F6 84    		.byte $08,$F6,$84
2674   367E 08 F6 84    		.byte $08,$F6,$84
2675   3681 06 F9 84    		.byte $06,$F9,$84
2676   3684 08 FA 84    		.byte $08,$FA,$84
2677   3687 09 FB 84    		.byte $09,$FB,$84
2678   368A 00 00 00    		.byte $00,$00,$00
2679   368D 00 00 00    		.byte $00,$00,$00
2680   3690 00 00 00    		.byte $00,$00,$00
2681   3693             ;* Maze 1
2682   3693 05 F7 06    		.byte $05,$F7,$06
2683   3696 08 F9 01    		.byte $08,$F9,$01
2684   3699 08 F9 01    		.byte $08,$F9,$01
2685   369C 08 F9 01    		.byte $08,$F9,$01
2686   369F 0C FB 86    		.byte $0C,$FB,$86
2687   36A2 0C FB 86    		.byte $0C,$FB,$86
2688   36A5 00 00 00    		.byte $00,$00,$00
2689   36A8 00 00 00    		.byte $00,$00,$00
2690   36AB             ;* Maze 2
2691   36AB 89 F8 04    		.byte $89,$F8,$04
2692   36AE 0A F8 01    		.byte $0A,$F8,$01
2693   36B1 0B F9 00    		.byte $0B,$F9,$00
2694   36B4 10 F6 84    		.byte $10,$F6,$84
2695   36B7 00 00 00    		.byte $00,$00,$00
2696   36BA 00 00 00    		.byte $00,$00,$00
2697   36BD 00 00 00    		.byte $00,$00,$00
2698   36C0 00 00 00    		.byte $00,$00,$00
2699   36C3             ;* Maze 3	
2700   36C3 06 F5 82    		.byte $06,$F5,$82
2701   36C6 04 F6 02    		.byte $04,$F6,$02
2702   36C9 0D F6 84    		.byte $0D,$F6,$84
2703   36CC 0C F4 84    		.byte $0C,$F4,$84
2704   36CF 00 00 00    		.byte $00,$00,$00
2705   36D2 00 00 00    		.byte $00,$00,$00
2706   36D5 00 00 00    		.byte $00,$00,$00
2707   36D8 00 00 00    		.byte $00,$00,$00
2708   36DB             ;* difcty level 3
2709   36DB             ;* Maze 0
2710   36DB 09 FB 84    		.byte $09,$FB,$84
2711   36DE 09 FB 84    		.byte $09,$FB,$84
2712   36E1 00 00 00    		.byte $00,$00,$00
2713   36E4 00 00 00    		.byte $00,$00,$00
2714   36E7 00 00 00    		.byte $00,$00,$00
2715   36EA 00 00 00    		.byte $00,$00,$00
2716   36ED 00 00 00    		.byte $00,$00,$00
2717   36F0 00 00 00    		.byte $00,$00,$00
2718   36F3             ;* Maze 1
2719   36F3 00 00 00    		.byte $00,$00,$00
2720   36F6 00 00 00    		.byte $00,$00,$00
2721   36F9 00 00 00    		.byte $00,$00,$00
2722   36FC 00 00 00    		.byte $00,$00,$00
2723   36FF 00 00 00    		.byte $00,$00,$00
2724   3702 00 00 00    		.byte $00,$00,$00
2725   3705 00 00 00    		.byte $00,$00,$00
2726   3708 00 00 00    		.byte $00,$00,$00
2727   370B             ;* Maze 2
2728   370B 10 F8 84    		.byte $10,$F8,$84
2729   370E 10 F8 84    		.byte $10,$F8,$84
2730   3711 10 F8 84    		.byte $10,$F8,$84
2731   3714 00 00 00    		.byte $00,$00,$00
2732   3717 00 00 00    		.byte $00,$00,$00
2733   371A 00 00 00    		.byte $00,$00,$00
2734   371D 00 00 00    		.byte $00,$00,$00
2735   3720 00 00 00    		.byte $00,$00,$00
2736   3723             ;* Maze 3	
2737   3723 0B F4 84    		.byte $0B,$F4,$84
2738   3726 0D F4 84    		.byte $0D,$F4,$84
2739   3729 00 00 00    		.byte $00,$00,$00
2740   372C 00 00 00    		.byte $00,$00,$00
2741   372F 00 00 00    		.byte $00,$00,$00
2742   3732 00 00 00    		.byte $00,$00,$00
2743   3735 00 00 00    		.byte $00,$00,$00
2744   3738 00 00 00    		.byte $00,$00,$00
2745   373B             ;* difcty level 4
2746   373B             ;* Maze 0
2747   373B 09 FB 84    		.byte $09,$FB,$84
2748   373E 09 FB 84    		.byte $09,$FB,$84
2749   3741 00 00 00    		.byte $00,$00,$00
2750   3744 00 00 00    		.byte $00,$00,$00
2751   3747 00 00 00    		.byte $00,$00,$00
2752   374A 00 00 00    		.byte $00,$00,$00
2753   374D 00 00 00    		.byte $00,$00,$00
2754   3750 00 00 00    		.byte $00,$00,$00
2755   3753             ;* Maze 1
2756   3753 00 00 00    		.byte $00,$00,$00
2757   3756 00 00 00    		.byte $00,$00,$00
2758   3759 00 00 00    		.byte $00,$00,$00
2759   375C 00 00 00    		.byte $00,$00,$00
2760   375F 00 00 00    		.byte $00,$00,$00
2761   3762 00 00 00    		.byte $00,$00,$00
2762   3765 00 00 00    		.byte $00,$00,$00
2763   3768 00 00 00    		.byte $00,$00,$00
2764   376B             ;* Maze 2
2765   376B 10 F8 84    		.byte $10,$F8,$84
2766   376E 10 F8 84    		.byte $10,$F8,$84
2767   3771 10 F8 84    		.byte $10,$F8,$84
2768   3774 00 00 00    		.byte $00,$00,$00
2769   3777 00 00 00    		.byte $00,$00,$00
2770   377A 00 00 00    		.byte $00,$00,$00
2771   377D 00 00 00    		.byte $00,$00,$00
2772   3780 00 00 00    		.byte $00,$00,$00
2773   3783             ;* Maze 3
2774   3783 0B F4 84    		.byte $0B,$F4,$84
2775   3786 0D F4 84    		.byte $0D,$F4,$84
2776   3789 00 00 00    		.byte $00,$00,$00
2777   378C 00 00 00    		.byte $00,$00,$00
2778   378F 00 00 00    		.byte $00,$00,$00
2779   3792 00 00 00    		.byte $00,$00,$00
2780   3795 00 00 00    		.byte $00,$00,$00
2781   3798 00 00 00    		.byte $00,$00,$00
2782   379B             		
2783   379B 020507000E00ispeed	.byte $02,$05,$07,$00,$0E,$00,$15,$00
2783   37A1 1500
2784   37A3 030608001000		.byte $03,$06,$08,$00,$10,$00,$18,$00
2784   37A9 1800
2785   37AB 030709001200		.byte $03,$07,$09,$00,$12,$00,$1B,$00
2785   37B1 1B00
2786   37B3 04080A001400		.byte $04,$08,$0A,$00,$14,$00,$1F,$00
2786   37B9 1F00
2787   37BB 04090B001600		.byte $04,$09,$0B,$00,$16,$00,$22,$00
2787   37C1 2200
2788   37C3             		
2789   37C3             ;************************************************
2790   37C3             	.sbttl "Permanant/Dynamic Changes to Maze"
2791   37C3             ;************************************************
2792   37C3             ;* mzta - Permanant Changes                     *
2793   37C3             ;*        byte 1: Stamp Postion                 *
2794   37C3             ;*        byte 2: Stamp Number                  *
2795   37C3             ;*                                              *
2796   37C3             ;* mztd - Dynamic Changes                       *
2797   37C3             ;*        byte 1:
2798   37C3             ;*        byte 2:
2799   37C3             ;*        byte 3:
2800   37C3             ;* 	    byte 4:
2801   37C3             ;*        byte 5: 
2802   37C3             ;************************************************
2803   37C3 3B 02       mzta00	.byte $3B,$02
2804   37C5 3C 05       		.byte $3C,$05
2805   37C7 3D 03       		.byte $3D,$03
2806   37C9 4A 07       		.byte $4A,$07
2807   37CB 4B 04       		.byte $4B,$04
2808   37CD 00          		.byte $00
2809   37CE             		
2810   37CE 32 07       mzta01	.byte $32,$07
2811   37D0 33 05       		.byte $33,$05
2812   37D2 35 02       		.byte $35,$02
2813   37D4 47 07       		.byte $47,$07
2814   37D6 48 03       		.byte $48,$03
2815   37D8 49 07       		.byte $49,$07
2816   37DA 4A 04       		.byte $4A,$04
2817   37DC 00          		.byte $00
2818   37DD             		
2819   37DD 2E 41       mzta02	.byte $2E,$41
2820   37DF 43 01       		.byte $43,$01
2821   37E1 44 07       		.byte $44,$07
2822   37E3 45 05       		.byte $45,$05
2823   37E5 57 01       		.byte $57,$01
2824   37E7 58 01       		.byte $58,$01
2825   37E9 59 01       		.byte $59,$01
2826   37EB 5A 03       		.byte $5A,$03
2827   37ED 5B 07       		.byte $5B,$07
2828   37EF 5C 02       		.byte $5C,$02
2829   37F1 6B 05       		.byte $6B,$05
2830   37F3 6C 01       		.byte $6C,$01
2831   37F5 6D 01       		.byte $6D,$01
2832   37F7 6F 01       		.byte $6F,$01
2833   37F9 70 02       		.byte $70,$02
2834   37FB 71 04       		.byte $71,$04
2835   37FD 00          		.byte $00
2836   37FE             		
2837   37FE             mzta03
2838   37FE             mzta10
2839   37FE             mzta11
2840   37FE             mzta12
2841   37FE 00          mzta13	.byte $00
2842   37FF             
2843   37FF 2C00080701  mztd20	.byte $2C,$00,$08,$07,$01
2844   3804 4B00080403  		.byte $4B,$00,$08,$04,$03
2845   3809 00          		.byte $00
2846   380A             		
2847   380A 3B 05       mzta20	.byte $3B,$05
2848   380C 3C 01       		.byte $3C,$01
2849   380E 3D 03       		.byte $3D,$03
2850   3810 4C 07       		.byte $4C,$07
2851   3812 00          		.byte $00
2852   3813             		
2853   3813 7200060102  mztd21	.byte $72,$00,$06,$01,$02
2854   3818 8700060103  		.byte $87,$00,$06,$01,$03
2855   381D 4800060201  		.byte $48,$00,$06,$02,$01
2856   3822 4900060501  		.byte $49,$00,$06,$05,$01
2857   3827 6300020603  		.byte $63,$00,$02,$06,$03
2858   382C 00          		.byte $00
2859   382D             		
2860   382D 74 02       mzta21	.byte $74,$02
2861   382F 89 03       		.byte $89,$03
2862   3831 62 01       		.byte $62,$01
2863   3833 00          		.byte $00
2864   3834             		
2865   3834 7100060201  mztd22	.byte $71,$00,$06,$02,$01
2866   3839 7200060501  		.byte $72,$00,$06,$05,$01
2867   383E 7500060701  		.byte $75,$00,$06,$07,$01
2868   3843 9A00100406  		.byte $9A,$00,$10,$04,$06
2869   3848 AF00100506  		.byte $AF,$00,$10,$05,$06
2870   384D 00          		.byte $00
2871   384E             		
2872   384E 34 03       mzta22	.byte $34,$03
2873   3850 47 02       		.byte $47,$02
2874   3852 48 05       		.byte $48,$05
2875   3854 49 01       		.byte $49,$01
2876   3856 56 05       		.byte $56,$05
2877   3858 57 01       		.byte $57,$01
2878   385A 5B 07       		.byte $5B,$07
2879   385C 5C 04       		.byte $5C,$04
2880   385E 5D 03       		.byte $5D,$03
2881   3860 62 01       		.byte $62,$01
2882   3862 6C 01       		.byte $6C,$01
2883   3864 6D 01       		.byte $6D,$01
2884   3866 6F 06       		.byte $6F,$06
2885   3868 73 05       		.byte $73,$05
2886   386A 74 01       		.byte $74,$01
2887   386C 75 01       		.byte $75,$01
2888   386E 84 06       		.byte $84,$06
2889   3870 85 06       		.byte $85,$06
2890   3872 87 07       		.byte $87,$07
2891   3874 88 05       		.byte $88,$05
2892   3876 89 01       		.byte $89,$01
2893   3878 8A 01       		.byte $8A,$01
2894   387A 8B 05       		.byte $8B,$05
2895   387C 99 06       		.byte $99,$06
2896   387E B1 04       		.byte $B1,$04
2897   3880 00          		.byte $00
2898   3881             		
2899   3881 7A00020302  mztd23	.byte $7A,$00,$02,$03,$02
2900   3886 7D051C0405  		.byte $7D,$05,$1C,$04,$05
2901   388B 8D00020203  		.byte $8D,$00,$02,$02,$03
2902   3890 90051C0504  		.byte $90,$05,$1C,$05,$04
2903   3895 9100080701  		.byte $91,$00,$08,$07,$01
2904   389A B800010701  		.byte $B8,$00,$01,$07,$01
2905   389F 7C00100107  		.byte $7C,$00,$10,$01,$07
2906   38A4 8E12180107  		.byte $8E,$12,$18,$01,$07
2907   38A9 8F0C180107  		.byte $8F,$0C,$18,$01,$07
2908   38AE 00          		.byte $00
2909   38AF             		
2910   38AF 31 03       mzta23	.byte $31,$03
2911   38B1 42 02       		.byte $42,$02
2912   38B3 43 05       		.byte $43,$05
2913   38B5 44 01       		.byte $44,$01
2914   38B7 55 04       		.byte $55,$04
2915   38B9 56 03       		.byte $56,$03
2916   38BB 6A 02       		.byte $6A,$02
2917   38BD 7C 07       		.byte $7C,$07
2918   38BF 8C 01       		.byte $8C,$01
2919   38C1 8E 07       		.byte $8E,$07
2920   38C3 8F 07       		.byte $8F,$07
2921   38C5 A0 04       		.byte $A0,$04
2922   38C7 A1 01       		.byte $A1,$01
2923   38C9 A3 03       		.byte $A3,$03
2924   38CB A4 07       		.byte $A4,$07
2925   38CD B4 01       		.byte $B4,$01
2926   38CF 00          		.byte $00
2927   38D0             		
2928   38D0 2A 01       mzta30	.byte $2A,$01
2929   38D2 3B 01       		.byte $3B,$01
2930   38D4 5A 01       		.byte $5A,$01
2931   38D6 5B 01       		.byte $5B,$01
2932   38D8 6A 01       		.byte $6A,$01
2933   38DA 6C 02       		.byte $6C,$02
2934   38DC 00          mztd30	.byte $00
2935   38DD             
2936   38DD 33 02       mzta31	.byte $33,$02
2937   38DF 34 07       		.byte $34,$07
2938   38E1 35 01       		.byte $35,$01
2939   38E3 36 01       		.byte $36,$01
2940   38E5 48 04       		.byte $48,$04
2941   38E7 74 01       		.byte $74,$01
2942   38E9 75 02       		.byte $75,$02
2943   38EB A0 01       		.byte $A0,$01
2944   38ED 00          		.byte $00
2945   38EE             		
2946   38EE 4A00020701  mztd31	.byte $4A,$00,$02,$07,$01
2947   38F3 00          		.byte $00
2948   38F4             		
2949   38F4 60000C0701  mztd32	.byte $60,$00,$0C,$07,$01
2950   38F9 00          		.byte $00
2951   38FA             		
2952   38FA 4E 01       mzta32	.byte $4E,$01
2953   38FC 5B 02       		.byte $5B,$02
2954   38FE 62 01       		.byte $62,$01
2955   3900 63 01       		.byte $63,$01
2956   3902 6D 01       		.byte $6D,$01
2957   3904 70 04       		.byte $70,$04
2958   3906 74 01       		.byte $74,$01
2959   3908 75 01       		.byte $75,$01
2960   390A 78 07       		.byte $78,$07
2961   390C 84 01       		.byte $84,$01
2962   390E 85 01       		.byte $85,$01
2963   3910 86 01       		.byte $86,$01
2964   3912 89 01       		.byte $89,$01
2965   3914 8A 01       		.byte $8A,$01
2966   3916 8D 01       		.byte $8D,$01
2967   3918 8E 03       		.byte $8E,$03
2968   391A 99 01       		.byte $99,$01
2969   391C 9A 01       		.byte $9A,$01
2970   391E 9B 02       		.byte $9B,$02
2971   3920 9D 05       		.byte $9D,$05
2972   3922 9E 01       		.byte $9E,$01
2973   3924 9F 02       		.byte $9F,$02
2974   3926 AE 01       		.byte $AE,$01
2975   3928 AF 02       		.byte $AF,$02
2976   392A B0 03       		.byte $B0,$03
2977   392C B1 07       		.byte $B1,$07
2978   392E B3 07       		.byte $B3,$07
2979   3930 B4 04       		.byte $B4,$04
2980   3932 C3 07       		.byte $C3,$07
2981   3934 C4 06       		.byte $C4,$06
2982   3936 C5 07       		.byte $C5,$07
2983   3938 C6 07       		.byte $C6,$07
2984   393A C7 07       		.byte $C7,$07
2985   393C C8 06       		.byte $C8,$06
2986   393E C9 07       		.byte $C9,$07
2987   3940 CA 06       		.byte $CA,$06
2988   3942 00          		.byte $00
2989   3943             		
2990   3943 43 07       mzta33	.byte $43,$07
2991   3945 51 05       		.byte $51,$05
2992   3947 55 01       		.byte $55,$01
2993   3949 56 01       		.byte $56,$01
2994   394B 64 06       		.byte $64,$06
2995   394D 7A 01       		.byte $7A,$01
2996   394F 7B 01       		.byte $7B,$01
2997   3951 92 01       		.byte $92,$01
2998   3953 93 01       		.byte $93,$01
2999   3955 A0 01       		.byte $A0,$01
3000   3957 A1 02       		.byte $A1,$02
3001   3959 A2 07       		.byte $A2,$07
3002   395B A4 07       		.byte $A4,$07
3003   395D A5 01       		.byte $A5,$01
3004   395F A6 07       		.byte $A6,$07
3005   3961 AE 06       		.byte $AE,$06
3006   3963 AF 01       		.byte $AF,$01
3007   3965 B2 03       		.byte $B2,$03
3008   3967 B3 02       		.byte $B3,$02
3009   3969 B9 01       		.byte $B9,$01
3010   396B C1 04       		.byte $C1,$04
3011   396D C2 01       		.byte $C2,$01
3012   396F D7 01       		.byte $D7,$01
3013   3971 00          mztd33	.byte $00
3014   3972             		
3015   3972             ;*****************************************
3016   3972             	.sbttl "One Way Walls"
3017   3972             ;*****************************************
3018   3972             ;* X LSB, Y LSB, 0 Ends List             *
3019   3972             ;* cmright points to right,              *
3020   3972             ;*       cmleft points to left           *
3021   3972             ;*****************************************
3022   3972 00          mone00	.byte $00
3023   3973 92 A3       mone01	.byte $92,$A3
3024   3975 00          		.byte $00
3025   3976 A5          mone02	.byte $A5
3026   3977             mone03
3027   3977 00          mone10	.byte $00
3028   3978 FF B8       mone11	.byte $FF,$B8
3029   397A 00          		.byte $00
3030   397B FF A8       mone12	.byte $FF,$A8
3031   397D             mone13
3032   397D 00          mone20 	.byte $00
3033   397E FF B8       mone21	.byte $FF,$B8
3034   3980 00          		.byte $00
3035   3981 FF A8       mone22	.byte $FF,$A8
3036   3983 00          		.byte $00
3037   3984 FF A7       mone23	.byte $FF,$A7
3038   3986 00          		.byte $00
3039   3987 FF B4       mone30	.byte $FF,$B4
3040   3989 FF A4       		.byte $FF,$A4
3041   398B 00          		.byte $00
3042   398C FF B7       mone31	.byte $FF,$B7
3043   398E 00          		.byte $00
3044   398F 8B          mone32	.byte $8B
3045   3990 FF 8D       		.byte $FF,$8D
3046   3992 00          		.byte $00
3047   3993 29          mone33	.byte $29
3048   3994 3B          		.byte $3B
3049   3995 00          		.byte $00
3050   3996             		
3051   3996             		
3052   3996             ;************************************************
3053   3996             	.sbttl "Data Set for Laser Cannon Actions"
3054   3996             ;************************************************
3055   3996 00 00       mcanst	.word 0
3056   3998 BA 39 00 00 mcan01	.word mcp010,0
3057   399C EB 39 00 00 mcan30	.word mcp003,0
3058   39A0 003A0D3A0000mcan31	.word mcp013,mcp113,0
3059   39A6 183A2C3A0000mcan32	.word mcp023,mcp123,0
3060   39AC 403A4B3A543Amcan33	.word mcp033,mcp133,mcp233,mcp333,0
3060   39B2 DB3A0000
3061   39B6 62 3B 00 00 mcan40	.word mcp004,0
3062   39BA             
3063   39BA             ;************************************************
3064   39BA             	.sbttl "Code for Cannon Data Sets"
3065   39BA             ;************************************************
3066   39BA             ;* First Byte:                                  *
3067   39BA             ;*    D7-D6 = 00	Return to start of list       *
3068   39BA             ;*    D7-D6 = 01 	Move Gun to a new orientation *
3069   39BA             ;*                                              *
3070   39BA             ;*          D5-D3 = Angle of Gun:               *
3071   39BA             ;*                = 000 Top Right               *
3072   39BA             ;*                = 001 Middle Right            *
3073   39BA             ;*                = 010 Bottom Right            *
3074   39BA             ;*                = 011 Point Down              *
3075   39BA             ;*                = 100 Top Left                *
3076   39BA             ;*                = 101 Middle Left             *
3077   39BA             ;*                = 110 Bottom Left             *
3078   39BA             ;*                                              *
3079   39BA             ;*    D7-D6 = 10  Move Gun Location             *
3080   39BA             ;*                                              *
3081   39BA             ;*          D5-D0 = Frames of wait time/4       *
3082   39BA             ;*                = 0  Then Zero X and Y vel.   *
3083   39BA             ;*                >0   Then Velocities Follow   *
3084   39BA             ;*          Second Byte: X MSB Velocity         *
3085   39BA             ;*          Third Byte:  Y MSB Velocity         *
3086   39BA             ;*                                              *
3087   39BA             ;*    D7-D6 = 11  Pause                         *
3088   39BA             ;*          D5-D0 = Frames of wait time/4       *
3089   39BA             ;************************************************
3090   39BA 00 06 80 F6 mcp010	.byte $0,$06,$80,$F6
3091   39BE 411849185118		.byte $41,$18,	$49,$18,	$51,$18
3092   39C4 94 10 00 80 		.byte $94,$10,$00,$80
3093   39C8 611869187118		.byte $61,$18,	$69,$18,	$71,$18
3094   39CE 94 F0 00 80 		.byte $94,$F0,$00,$80
3095   39D2 40 60       		.byte $40,        $60
3096   39D4 84 F0 00 80 		.byte $84,$F0,$00,$80
3097   39D8 59 08       		.byte $59,$08
3098   39DA 88 00 FC 80 		.byte $88,$00,$FC,$80
3099   39DE 69 08 40    		.byte $69,$08,    $40
3100   39E1 88 00 04 80 		.byte $88,$00,$04,$80
3101   39E5 48          		.byte $48
3102   39E6 84 10 00 80 		.byte $84,$10,$00,$80
3103   39EA 00          		.byte $00
3104   39EB 00 09 80 F7 mcp003	.byte $00,$09,$80,$F7
3105   39EF 81 FC 00    		.byte $81,$FC,$00
3106   39F2 7510751054  		.byte $75,$10,$75,$10,$54
3107   39F7 81 04 00    		.byte $81,$04,$00
3108   39FA 5510551074  		.byte $55,$10,$55,$10,$74
3109   39FF 00          		.byte $00
3110   3A00 00 0B 80 F6 mcp013	.byte $00,$0B,$80,$F6
3111   3A04 750D650D750D		.byte $75,$0D,$65,$0D,$75,$0D
3112   3A0A 64          		.byte $64
3113   3A0B D1          		.byte $D1
3114   3A0C 00          		.byte $00
3115   3A0D 80 0C 80 FA mcp113	.byte $80,$0C,$80,$FA
3116   3A11 42          		.byte $42
3117   3A12 C4          		.byte $C4
3118   3A13 53 0C 53 0C 		.byte $53,$0C,$53,$0C
3119   3A17 00          		.byte $00
3120   3A18 A0 03 80 F7 mcp023	.byte $A0,$03,$80,$F7
3121   3A1C 55 0B 45 0B 		.byte $55,$0B,$45,$0B
3122   3A20 84 08 00 80 		.byte $84,$08,$00,$80
3123   3A24 64          		.byte $64
3124   3A25 84 F8 00 80 		.byte $84,$F8,$00,$80
3125   3A29 54 D0       		.byte $54,$D0
3126   3A2B 00          		.byte $00
3127   3A2C 80 0E 80 F7 mcp123	.byte $80,$0E,$80,$F7
3128   3A30 75 0B 65 0B 		.byte $75,$0B,$65,$0B
3129   3A34 84 F8 00 80 		.byte $84,$F8,$00,$80
3130   3A38 44          		.byte $44
3131   3A39 84 08 00 80 		.byte $84,$08,$00,$80
3132   3A3D 74 D0       		.byte $74,$D0
3133   3A3F 00          		.byte $00
3134   3A40 00 04 80 FA mcp033	.byte $00,$04,$80,$FA
3135   3A44 D0          		.byte $D0
3136   3A45 55 10 55 10 		.byte $55,$10,$55,$10
3137   3A49 C4          		.byte $C4
3138   3A4A 00          		.byte $00
3139   3A4B 00 06 20 F2 mcp133	.byte $00,$06,$20,$F2
3140   3A4F 53 0A 53 14 		.byte $53,$0A,$53,$14
3141   3A53 00          		.byte $00
3142   3A54 80 06 40 F6 mcp233	.byte $80,$06,$40,$F6
3143   3A58 54          		.byte $54
3144   3A59 81 0C 00    		.byte $81,$0C,$00
3145   3A5C 81 0C 06    		.byte $81,$0C,$06
3146   3A5F 81 0C 0C    		.byte $81,$0C,$0C
3147   3A62 81 0C 06    		.byte $81,$0C,$06
3148   3A65 81 0C 00    		.byte $81,$0C,$00
3149   3A68 81 0C FA    		.byte $81,$0C,$FA
3150   3A6B 81 0C F4    		.byte $81,$0C,$F4
3151   3A6E 81 0C FA    		.byte $81,$0C,$FA
3152   3A71 81 0C 00    		.byte $81,$0C,$00
3153   3A74 81 0C 06    		.byte $81,$0C,$06
3154   3A77 81 0C 0C    		.byte $81,$0C,$0C
3155   3A7A 81 0C 06    		.byte $81,$0C,$06
3156   3A7D 81 0C 00    		.byte $81,$0C,$00
3157   3A80 81 0C FA    		.byte $81,$0C,$FA
3158   3A83 81 0C FC    		.byte $81,$0C,$FC
3159   3A86 81 0C FA    		.byte $81,$0C,$FA
3160   3A89 81 0C 00    		.byte $81,$0C,$00
3161   3A8C 81 0C 06    		.byte $81,$0C,$06
3162   3A8F 81 0C 0C    		.byte $81,$0C,$0C
3163   3A92 81 0C 06    		.byte $81,$0C,$06
3164   3A95 81 0C 00    		.byte $81,$0C,$00
3165   3A98 80          		.byte $80
3166   3A99 64          		.byte $64
3167   3A9A 81 F4 00    		.byte $81,$F4,$00
3168   3A9D 81 F4 FA    		.byte $81,$F4,$FA
3169   3AA0 81 F4 F4    		.byte $81,$F4,$F4
3170   3AA3 81 F4 FA    		.byte $81,$F4,$FA
3171   3AA6 81 F4 00    		.byte $81,$F4,$00
3172   3AA9 81 F4 06    		.byte $81,$F4,$06
3173   3AAC 81 F4 0C    		.byte $81,$F4,$0C
3174   3AAF 81 F4 06    		.byte $81,$F4,$06
3175   3AB2 81 F4 00    		.byte $81,$F4,$00
3176   3AB5 81 F4 FA    		.byte $81,$F4,$FA
3177   3AB8 81 F4 F4    		.byte $81,$F4,$F4
3178   3ABB 81 F4 FA    		.byte $81,$F4,$FA
3179   3ABE 81 F4 00    		.byte $81,$F4,$00
3180   3AC1 81 F4 06    		.byte $81,$F4,$06
3181   3AC4 81 F4 0C    		.byte $81,$F4,$0C
3182   3AC7 81 F4 06    		.byte $81,$F4,$06
3183   3ACA 81 F4 00    		.byte $81,$F4,$00
3184   3ACD 81 F4 FA    		.byte $81,$F4,$FA
3185   3AD0 81 F4 F4    		.byte $81,$F4,$F4
3186   3AD3 81 F4 FA    		.byte $81,$F4,$FA
3187   3AD6 81 F4 00    		.byte $81,$F4,$00
3188   3AD9 80          		.byte $80
3189   3ADA 00          		.byte $00
3190   3ADB E0 08 80 F6 mcp333	.byte $E0,$08,$80,$F6
3191   3ADF 81 0C F4    		.byte $81,$0C,$F4
3192   3AE2 81 0C FA    		.byte $81,$0C,$FA
3193   3AE5 81 0C 00    		.byte $81,$0C,$00
3194   3AE8 81 0C 06    		.byte $81,$0C,$06
3195   3AEB 81 0C 0C    		.byte $81,$0C,$0C
3196   3AEE 81 0C 06    		.byte $81,$0C,$06
3197   3AF1 81 0C 00    		.byte $81,$0C,$00
3198   3AF4 81 0C FA    		.byte $81,$0C,$FA
3199   3AF7 81 0C F4    		.byte $81,$0C,$F4
3200   3AFA 81 0C FA    		.byte $81,$0C,$FA
3201   3AFD 81 0C 00    		.byte $81,$0C,$00
3202   3B00 80          		.byte $80
3203   3B01 74          		.byte $74
3204   3B02 81 F4 00    		.byte $81,$F4,$00
3205   3B05 81 F4 06    		.byte $81,$F4,$06
3206   3B08 81 F4 0C    		.byte $81,$F4,$0C
3207   3B0B 81 F4 06    		.byte $81,$F4,$06
3208   3B0E 81 F4 00    		.byte $81,$F4,$00
3209   3B11 81 F4 FA    		.byte $81,$F4,$FA
3210   3B14 81 F4 F4    		.byte $81,$F4,$F4
3211   3B17 81 F4 FA    		.byte $81,$F4,$FA
3212   3B1A 81 F4 00    		.byte $81,$F4,$00
3213   3B1D 81 F4 06    		.byte $81,$F4,$06
3214   3B20 81 F4 0C    		.byte $81,$F4,$0C
3215   3B23 81 F4 06    		.byte $81,$F4,$06
3216   3B26 81 F4 00    		.byte $81,$F4,$00
3217   3B29 81 F4 FA    		.byte $81,$F4,$FA
3218   3B2C 81 F4 F4    		.byte $81,$F4,$F4
3219   3B2F 81 F4 FA    		.byte $81,$F4,$FA
3220   3B32 81 F4 00    		.byte $81,$F4,$00
3221   3B35 81 F4 06    		.byte $81,$F4,$06
3222   3B38 81 F4 0C    		.byte $81,$F4,$0C
3223   3B3B 81 F4 06    		.byte $81,$F4,$06
3224   3B3E 81 F4 00    		.byte $81,$F4,$00
3225   3B41 80          		.byte $80
3226   3B42 44          		.byte $44
3227   3B43 81 0C 00    		.byte $81,$0C,$00
3228   3B46 81 0C FA    		.byte $81,$0C,$FA
3229   3B49 81 0C F4    		.byte $81,$0C,$F4
3230   3B4C 81 0C FA    		.byte $81,$0C,$FA
3231   3B4F 81 0C 00    		.byte $81,$0C,$00
3232   3B52 81 0C 06    		.byte $81,$0C,$06
3233   3B55 81 0C 0C    		.byte $81,$0C,$0C
3234   3B58 81 0C 06    		.byte $81,$0C,$06
3235   3B5B 81 0C 00    		.byte $81,$0C,$00
3236   3B5E 81 0C FA    		.byte $81,$0C,$FA
3237   3B61 00          		.byte $00
3238   3B62 00 09 80 F7 mcp004	.byte $00,$09,$80,$F7
3239   3B66 86 FA 00    		.byte $86,$FA,$00
3240   3B69 75 10 75 10 		.byte $75,$10,$75,$10
3241   3B6D 86 06 00    		.byte $86,$06,$00
3242   3B70 75 10 75 10 		.byte $75,$10,$75,$10
3243   3B74 00          		.byte $00
3244   3B75             		
3245   3B75             ;**********************************************
3246   3B75             	.sbttl "New Maze Objects"
3247   3B75             ;**********************************************
3248   3B75             ;* First comes clock and magic boots data     *
3249   3B75             ;*     Two Bytes for each wave                *
3250   3B75             ;*     0 in first byte means not present      *
3251   3B75             ;*     Otherwise X MSB and Y MSB respectively *
3252   3B75             ;**********************************************
3253   3B75 00 00 00 48 mclock	.byte $00,$00,$00,$48
3254   3B79 00 00 00 00 		.byte $00,$00,$00,$00
3255   3B7D 00 00 00 00 		.byte $00,$00,$00,$00
3256   3B81 8A 00 00 00 		.byte $8A,$00,$00,$00
3257   3B85             		
3258   3B85 00 00 00 00 		.byte $00,$00,$00,$00
3259   3B89 00 00 00 28 		.byte $00,$00,$00,$28
3260   3B8D 00 00 B9 00 		.byte $00,$00,$B9,$00
3261   3B91 00 00 62 00 		.byte $00,$00,$62,$00
3262   3B95             		
3263   3B95             ;**********************************************
3264   3B95             	.sbttl "Stalactite Data"        
3265   3B95             ;**********************************************
3266   3B95             ;* X MSB and Y MSB of each stalactite         *
3267   3B95             ;* 0 ends list                                *
3268   3B95             ;**********************************************
3269   3B95 76 78 00    tite11	.byte $76,$78,$00
3270   3B98 617274935400tite12	.byte $61,$72,$74,$93,$54,$00
3271   3B9E 36 37       tite13	.byte $36,$37
3272   3BA0 00          tite20	.byte $00
3273   3BA1 77 B7 B9    tite21	.byte $77,$B7,$B9
3274   3BA4 00          tite22	.byte $00
3275   3BA5 54 64       tite23	.byte $54,$64
3276   3BA7             tite30
3277   3BA7             tite31
3278   3BA7 00          tite32	.byte $00
3279   3BA8 48 4A 26 00 tite33	.byte $48,$4A,$26,$00
3280   3BAC 66          tite41	.byte $66
3281   3BAD 00          lock00	.byte $00
3282   3BAE             
3283   3BAE             ;***********************************************
3284   3BAE             	.sbttl "Lock and Key Data"  
3285   3BAE             ;***********************************************
3286   3BAE             ;* Color, X MSB Key, Y MSB Key,                *
3287   3BAE             ;* X MSB Lock, Y MSB Lock.                     *
3288   3BAE             ;* 0 ends list                                 *
3289   3BAE             ;***********************************************
3290   3BAE 06 9A 28    lock03	.byte $06,$9A,$28
3291   3BB1 03 4D 29    		.byte $03,$4D,$29
3292   3BB4 00          		.byte $00
3293   3BB5 06 67 A5    lock30	.byte $06,$67,$A5
3294   3BB8 0C B6 86    		.byte $0C,$B6,$86
3295   3BBB 03 9A 89    		.byte $03,$9A,$89
3296   3BBE 00          		.byte $00
3297   3BBF 03 86 61    lock32	.byte $03,$86,$61
3298   3BC2 06 6E 63    		.byte $06,$6E,$63
3299   3BC5 00          		.byte $00
3300   3BC6 04 35 A4    lock33	.byte $04,$35,$A4
3301   3BC9 03 2A B7    		.byte $03,$2A,$B7
3302   3BCC 0C 9D 39    		.byte $0C,$9D,$39
3303   3BCF 00          		.byte $00
3304   3BD0 06 67 A5    lock40	.byte $06,$67,$A5
3305   3BD3 0C B6 86    		.byte $0C,$B6,$86
3306   3BD6 0B 81 89    		.byte $0B,$81,$89
3307   3BD9 00          		.byte $00
3308   3BDA 01 72 7A    lock41	.byte $01,$72,$7A
3309   3BDD 02 B7 7A    		.byte $02,$B7,$7A
3310   3BE0 04 6F 7A    		.byte $04,$6F,$7A
3311   3BE3 00          		.byte $00
3312   3BE4             		
3313   3BE4             ;******************************************************
3314   3BE4             	.sbttl "Escape Pod Data"      
3315   3BE4             ;******************************************************
3316   3BE4             ;* 0 Means not on this wave                           *
3317   3BE4             ;* 1 Means shows up but player doesn't have to use it *
3318   3BE4             ;* 2 Means show up and doors don't open               *
3319   3BE4             ;******************************************************
3320   3BE4 00 01 02 02 mpod		.byte 0,1,2,2
3321   3BE8             
3322   3BE8             ;******************************************************
3323   3BE8             	.sbttl "Transporter Data"    
3324   3BE8             ;******************************************************
3325   3BE8             ;* Color in D0-D3, Direction in D4(1=right),          *
3326   3BE8             ;* X MSB, Y MSB                                       *
3327   3BE8             ;* Color = 0 ends list                                *
3328   3BE8             ;* Next comes packed transportability info            *
3329   3BE8             ;*   $ff ends list                                    *
3330   3BE8             ;******************************************************
3331   3BE8 00 FF       tran00	.byte $00,$FF
3332   3BEA 069716A300  tran02	.byte $06,$97,$16,$A3,$00
3333   3BEF 000000000040            .byte $00,$00,$00,$00,$00,$40,$EE
3333   3BF5 EE
3334   3BF6 036B13A706ACtran31	.byte $03,$6B,$13,$A7,$06,$AC,$16,$76,$04,$BA,$14,$5C
3334   3BFC 167604BA145C
3335   3C02 00          		.byte $00
3336   3C03 00C0FF03000C		.byte $00,$C0,$FF,$03,$00,$0C,$EE
3336   3C09 EE
3337   3C0A 04 9E 14 66 tran32	.byte $04,$9E,$14,$66
3338   3C0E 00          		.byte $00
3339   3C0F 0C00FC03EE  		.byte $0C,$00,$FC,$03,$EE
3340   3C14 0A991A23056Btran33	.byte $0A,$99,$1A,$23,$05,$6B,$15,$95
3340   3C1A 1595
3341   3C1C 00          hand00	.byte $00
3342   3C1D 00 EE       		.byte $00,$EE
3343   3C1F             		
3344   3C1F             ;******************************************************
3345   3C1F             	.sbttl "De Hand"
3346   3C1F             ;******************************************************
3347   3C1F             ;* X MSB, Y MSB, X Accordians, Y Accordians,          *
3348   3C1F             ;* X degrees max, Y degree rest, Y degree Max,        *
3349   3C1F             ;*  Visual Size X and Y                               *
3350   3C1F             ;*  0 in X means not on this wave                     *
3351   3C1F             ;******************************************************
3352   3C1F 09F803023F0Bhand12	.byte $09,$F8,$03,$02,$3F,$0B,$1F,$05,$03
3352   3C25 1F0503
3353   3C28 06FA01023F0Bhand30	.byte $06,$FA,$01,$02,$3F,$0B,$1F,$04,$03
3353   3C2E 1F0403
3354   3C31 02F407023F0Bhand33	.byte $02,$F4,$07,$02,$3F,$0B,$1F,$06,$03
3354   3C37 1F0603
3355   3C3A             
3356   3C3A             ;******************************************************
3357   3C3A             	.sbttl "Reactor Time Table"
3358   3C3A             ;******************************************************
3359   3C3A 30 40 40 40 outime	.byte $30,$40,$40,$40
3360   3C3E 38 48 50 50 		.byte $38,$48,$50,$50
3361   3C42 40 50 30 40 		.byte $40,$50,$30,$40
3362   3C46 40 40 50 40 		.byte $40,$40,$50,$40
3363   3C4A             		
3364   3C4A             
	.nocodes		;So we dont have list file buffer overflows
	.fill $4000-*
	.end
	
.export drawm,map,domap,copym,trtbl,ispeed,newarrow,traptasm: Number of errors = 0
