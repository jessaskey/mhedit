<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mhedit</name>
    </assembly>
    <members>
        <member name="F:mhedit.DialogLoadROM.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:mhedit.DialogLoadROM.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:mhedit.DialogLoadROM.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:mhedit.DialogMessages.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:mhedit.DialogMessages.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:mhedit.DialogMessages.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:mhedit.DialogMHPLogin.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:mhedit.DialogMHPLogin.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:mhedit.DialogMHPLogin.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:mhedit.DialogAbout">
            <summary>
            Our lovely about box.
            </summary>
        </member>
        <member name="M:mhedit.DialogAbout.#ctor">
            <summary>
                Our default constructor for the About dialog.
            </summary>
        </member>
        <member name="F:mhedit.DialogAbout.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:mhedit.DialogAbout.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:mhedit.DialogAbout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:mhedit.DialogConfiguration.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:mhedit.DialogConfiguration.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:mhedit.DialogConfiguration.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:mhedit.GameControllers.MajorHavocPromisedEnd.GetTextPosition(System.String)">
            <summary>
            Returns a negative byte offset from center screen to get text centered
            Assumes letters are 6 units wide
            </summary>
            <param name="text">The text to use for calculations</param>
            <returns>Signed byte value to center align text</returns>
        </member>
        <member name="M:mhedit.GameControllers.MajorHavocPromisedEnd.EncodeObjects(mhedit.Containers.Maze,mhedit.GameControllers.MajorHavocPromisedEnd.EncodingGroup)">
            <summary>
            Used to encode individual maze object types, I had to abstract it so that it was easy to
            pull out serialized data one type at a time so it was easy to get data from the designed mazes
            into the source code of the main mhavocpe project.
            </summary>
            <param name="maze">The target maze</param>
            <param name="group">The target group to encode</param>
            <returns></returns>
        </member>
        <member name="T:mhedit.GameProfile">
            <summary>
            Ghost of the XSD GameProfile class, this will go away when we merge code, but for now, I 
            will code against this so we can code in Parallel.
            </summary>
        </member>
        <member name="T:mhedit.Mainform">
            <summary>
            The main application form.
            </summary>
        </member>
        <member name="F:mhedit.Mainform.MESSAGEBOX_CAPTION">
            <summary>
            This is the default caption for all message boxes in the application
            </summary>
        </member>
        <member name="M:mhedit.Mainform.#ctor">
            <summary>
            Our default constructor for the application mainform
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:mhedit.Mainform.treeView_DrawNode(System.Object,System.Windows.Forms.DrawTreeNodeEventArgs)" -->
        <member name="F:mhedit.Mainform.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:mhedit.Mainform.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:mhedit.Mainform.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:mhedit.MazeController._maze">
            This is the "padding" around the border of the entire maze.
        </member>
        <member name="P:mhedit.MazeController.Name">
            <summary>
            Because the base class control also has a Name property its easy to
            mistakenly call the wrong property... Return the Maze name during
            runtime but throw during debug.
            </summary>
        </member>
        <member name="M:mhedit.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.Serialize``1(``0,System.String)">
            <summary>
            Serialize the object into the file using XML serialization.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.SerializeAndCompress``1(``0,System.String)">
            <summary>
            Serialize the object using XML serialization, compress the XML output,
            and write the compressed XML to the provided file.
            .
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.SerializeAndCompress``1(``0,System.IO.Stream)">
            <summary>
            Serialize the object using XML serialization, compress the XML output,
            and write the compressed XML to the provided stream.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <param name="stream"></param>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.ExpandAndDeserialize``1(System.String)">
            <summary>
            Open the file, expand the contents into memory and deserialize the expanded
            XML into the object specified by the type T. 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.FixMaxMazeObjectViolations(mhedit.Containers.Maze)">
            <summary>
            Another HACK: Check the Max Objects of each type and trim off the ones that
            exceed the limit
            </summary>
            <param name="maze"></param>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.FixParentChildOnTripPads(mhedit.Containers.Maze)">
            <summary>
            HACK: Fixes orphaned TripPadPyroids do to Serialization process boo boo.
            </summary>
            <param name="maze"></param>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.OnUnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            Convert properties that no longer exist on objects to their new format/property.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:mhedit.Serialization.SerializationExtensions.TripPadPyroidUnknownElement(System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            Handle XML Property conversions for TripPadPyroids here.
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:mhedit.SystemWindowsTabControl">
             <summary>
             Derived from:
             https://stackoverflow.com/a/36900582
            
             Removed the Add tab as "windows" are added via events in the system.
             </summary>
        </member>
        <member name="T:mhedit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:mhedit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:mhedit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:mhedit.Properties.Resources.Close">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:mhedit.Properties.Resources.OpenSelectedItemHS">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
